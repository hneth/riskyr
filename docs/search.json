[{"path":[]},{"path":"https://hneth.github.io/riskyr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://hneth.github.io/riskyr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://hneth.github.io/riskyr/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://hneth.github.io/riskyr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://hneth.github.io/riskyr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team contact.riskyr@gmail.com. project team review investigate complaints, respond way deems appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://hneth.github.io/riskyr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"motivation-a-problem-of-probabilities","dir":"Articles","previous_headings":"","what":"Motivation: A problem of probabilities","title":"riskyr User Guide","text":"basic motivation developing riskyr facilitate understanding problems like following: Mammography screening probability breast cancer 1% woman age 40 participates routine screening. woman breast cancer, probability 80% get positive mammography. woman breast cancer, probability 9.6% also get positive mammography. woman age group positive mammography routine screening. probability actually breast cancer? (Hoffrage et al., 2015, p. 3)","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"information-provided-and-asked","dir":"Articles","previous_headings":"Motivation: A problem of probabilities","what":"Information provided and asked","title":"riskyr User Guide","text":"Problems like tend appear texts tutorials risk literacy ubiquitous medical diagnostics. typically provide risk-related information (.e., specific probabilities clinical condition likelihoods decision test detecting presence absence) ask risk-related quantity. basic type scenario, given 3 essential probabilities: prevalence target population (: women age 40) condition (breast cancer): prev = p(cancer)=1%p(\\mathrm{cancer}) = 1\\% sensitivity decision diagnostic procedure (: mammography screening test), conditional probability: sens = p(positivetest|cancer)=80%p(\\mathrm{positive\\ test}\\ |\\ \\mathrm{cancer}) = 80\\% false alarm rate decision, diagnostic procedure test, conditional probability: fart = p(positivetest|nobreastcancer)=9.6%p( \\mathrm{positive\\ test}\\ |\\ \\mathrm{\\ breast\\ cancer} ) = 9.6\\% can also expressed complement (aka. test’s specificity): spec = 1 – fart = p(negativetest|nocancer)=90.4%p( \\mathrm{negative\\ test}\\ |\\ \\mathrm{\\ cancer} ) = 90.4\\% first challenge solving problem realize probability asked sensitivity sens (.e., probability positive test given cancer), reversed conditional probability (.e., probability cancer given positive test). clinical term quantity positive predictive value (PPV) test’s precision: PPV = p(cancer|positivetest)p( \\mathrm{cancer}\\ |\\ \\mathrm{positive\\ test} ) = ? can compute positive predictive value (PPV) information provided problem? following, sketch three different paths solution.","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"using-bayes-theorem","dir":"Articles","previous_headings":"Motivation: A problem of probabilities","what":"Using Bayes’ theorem","title":"riskyr User Guide","text":"One way solve problems concerning conditional probabilities remember apply Bayes’ theorem (problems often called problems “Bayesian reasoning”): p(H|D)=p(H)⋅p(D|H)p(H)⋅p(D|H)+p(¬H)⋅p(D|¬H) p(H|D) = \\frac{p(H) \\cdot p(D|H) } {p(H) \\cdot p(D|H) + p(\\neg H) \\cdot p(D|\\neg H) } example, asking conditional probability breast cancer (HH) given positive mammography test (DD): p(cancer|positivetest)=p(cancer)⋅p(positivetest|cancer)p(cancer)⋅p(positivetest|cancer)+p(nocancer)⋅p(positivetest|nocancer) p(\\mathrm{cancer}\\ |\\ \\mathrm{positive\\ test})  = \\frac{p(\\mathrm{cancer}) \\cdot p(\\mathrm{positive\\ test}\\ |\\ \\mathrm{cancer}) }  {p(\\mathrm{cancer})     \\cdot p(\\mathrm{positive\\ test}\\ |\\ \\mathrm{cancer}) +   p(\\mathrm{\\ cancer}) \\cdot p(\\mathrm{positive\\ test}\\ |\\ \\mathrm{\\ cancer}) } , using CC denoting cancer TT denoting positive test: p(C|T)=p(C)⋅p(T|C)p(C)⋅p(T|C)+p(¬C)⋅p(T|¬C) p(C|T) = \\frac{p(C) \\cdot p(T|C) } {p(C) \\cdot p(T|C) + p(\\neg C) \\cdot p(T|\\neg C) } inserting probabilities identified knowing probability absence breast cancer target population complementary probability presence (.e., pp(cancer) = 1 – prev = 99%) obtain: p(cancer|positivetest)=1%⋅80%1%⋅80%+99%⋅9.6%≈7.8% p(\\mathrm{cancer}\\ |\\ \\mathrm{positive\\ test})  = \\frac{1\\% \\cdot 80\\% }  {  1\\% \\cdot 80\\% +    99\\% \\cdot 9.6\\% } \\approx\\ 7.8\\% Thus, information basic mathematical calculations tell us likelihood woman target population positive mammography screening test actually breast cancer (.e., PPV mammography screening test population women) slightly 8%.","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"using-natural-frequencies","dir":"Articles","previous_headings":"","what":"Using natural frequencies","title":"riskyr User Guide","text":"fail find Bayesian solution easy straightforward, good company: Even people studied taught statistics often find difficult think terms. Fortunately, researchers discovered simple change representation renders information much transparent. Consider following problem description: Mammography screening (freq) 10 every 1000 women age 40 participate routine screening breast cancer. 8 every 10 women breast cancer get positive mammography. 95 every 990 women without breast cancer also get positive mammography. new representative sample women age 40 got positive mammography routine screening. many women expect actually breast cancer? (Hoffrage et al., 2015, p. 4) Importantly, version (freq) problem refers frequency 10001000 individuals original target population. still provides probabilities , specifies terms natural frequencies (see Gigerenzer & Hoffrage, 1999, Hoffrage et al., 2002, clarifications concept): prevalence breast cancer target population: prev = p(cancer)=101000(=1%)p(\\mathrm{cancer}) = \\frac{10}{1000} (= 1\\%) sensitivity mammography screening test, conditional probability: sens = p(positivetest|cancer)=810(=80%)p(\\mathrm{positive\\ test}\\ |\\ \\mathrm{cancer}) = \\frac{8}{10} (= 80\\%) test’s false alarm rate, conditional probability: fart = p(positivetest|nobreastcancer)=95990(≈9.6%)p( \\mathrm{positive\\ test}\\ |\\ \\mathrm{\\ breast\\ cancer} ) = \\frac{95}{990} (\\approx\\ 9.6\\%) can still expressed complement (test’s specificity): spec = 1 – fart = p(negativetest|nocancer)=990−95990=895990(≈90.4%)p( \\mathrm{negative\\ test}\\ |\\ \\mathrm{\\ cancer} ) = \\frac{990 - 95}{990} = \\frac{895}{990} (\\approx\\ 90.4\\%) Rather asking us compute conditional probability (.e., PPV), task now prompts us imagine new representative sample women target population focuses women positive test result. asks frequency subset population: “many women” expect cancer? provide answer terms frequencies, need imagine specific population sample size NN. problem referred population  10001000 women, conveniently pick sample size N=1000N = 1000 women identical characteristics (suggested mentioning “representative” sample) ask: many women positive test result actually cancer?2 new sample, frequency women cancer positive test result match numbers original sample. Hence, can assume 1010 10001000 women cancer (prev) 88 1010 women cancer receive positive test resul (sens). Importantly, 9595 990990 women without cancer also receive positive test result (fart). Thus, number women positive test result 8+95=1038 + 95 = 103, 88 actually cancer. course ratio 8103\\frac{8}{103} identical previous probability (slightly 7.8%). Incidentally, reformulation terms frequencies protected us erroneously taking sensitivity (sens = 810=80%\\frac{8}{10} = 80\\%) estimate desired frequency. Whereas easy confuse term p(positivetest|cancer)p( \\mathrm{positive\\ test}\\ |\\ \\mathrm{cancer} ) p(cancer|positivetest)p( \\mathrm{cancer}\\ |\\ \\mathrm{positive\\ test} ) task expressed terms probabilities, clearly unreasonable assume 800 1000 women (.e., 80%) actually cancer (since prevalence population specified 10 1000, .e., 10%). Thus, reframing problem terms frequencies made us immune typical mistake.","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"using-riskyr","dir":"Articles","previous_headings":"","what":"Using riskyr","title":"riskyr User Guide","text":"Reframing probabilistic problem terms frequencies made solution easier. neat probably one best tricks risk literacy education (advocated Gigerenzer & Hoffrage, 1995; Gigerenzer 2002; 2014). good way cope tricky problems, even desirable actually understand interplay probabilities frequencies risk-related tasks domains. riskyr comes play.3  riskyr provides set basic risk literacy tools  R. seen, problems humans face dealing risk-related information less computational, representational nature. statistical programming language, R pretty powerful computational tool, present purposes important R also great designing displaying aesthetic informative visualizations. applying qualities task training instruction risk literacy, riskyr toolbox renders risk literacy education transparent.","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"risk-vs--uncertainty","dir":"Articles","previous_headings":"Using riskyr","what":"Risk vs. uncertainty","title":"riskyr User Guide","text":"clarify concept “risk” used context: basic research psychology judgment decision making applied research risk perception risk communication, term risk refers information decisions options consequences known probabilities different outcomes can provided. notion risk typically contrasted wider notion uncertainty options probabilities unknown quantified.4 present purposes, notion risk-related information refers scenario events determined probabilities. benign example risk-related situation riskyr start-message: Every time load package, dice cast determine particular message (range possible messages) shown. Even notice , determining exact probability message require extensive experience, explicit information (e.g., us telling use R’s sample function randomly select 1 5 possible messages), cheating (peeking source code). real life, events interest vastly complex numerous experience options cheating subject hard constraints. Thus, provided want regress superstition, need science figure probabilities transparent risk communication understanding .","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"promoting-risk-perception-and-communication","dir":"Articles","previous_headings":"Using riskyr","what":"Promoting risk perception and communication","title":"riskyr User Guide","text":"riskyr facilitates risk perception promotes deeper understanding risk-related information three ways:5 organizing data structures computational functions useful ways; providing translations probabilities frequencies; providing transparent visualizations illustrate relationships variables representations. others find ways riskyr computes, transforms, represents risks helpful useful, riskyr may facilitate teaching training efforts risk literacy generally hopes promote transparent communication risk-related information. following, show can address problem using three types tools provided riskyr.","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"a--a-fancy-calculator","dir":"Articles","previous_headings":"Using riskyr","what":"A. A fancy calculator","title":"riskyr User Guide","text":"riskyr provides set functions allows us calculate various desired outputs (probabilities frequencies) given inputs (probabilities frequencies). instance, following function computes positive predictive value PPV 3 essential probabilities prev, sens, spec (spec = 1 – fart) provided original problem: ’s good know riskyr can apply Bayes’ formula, can decent calculator — including brain good day environmental support form paper pencil.  R riskyr begins make sense considering functions like following: comp_prob_prob() computes probabilities probabilities (hence name). precisely, comp_prob_prob() takes three essential probabilities inputs returns list 13 probabilities output: probabilities provided need include prevalence prev, sensitivity sens, either specificity spec false alarm rate fart (spec = 1 – fart). code illustrates 3 different ways 3 “essential” probabilities can provided. Thus, assigned objects p1, p2, p3, equal . probabilities computed “essential” probabilities include PPV, can obtained asking p1$PPV = 0.0776398. object computed comp_prob_prob actually list 10 probabilities can inspected printing p1 (vector): list probabilities computed includes 3 essential probabilities (prev, sens, spec fart) desired probability (p1$PPV = 0.0776398), also many probabilities may asked instead. (selection 13 probabilities include prominent candidate measures, Bayesian situation supports many additional probabilities. considered largely matter perspective. See vignette data formats details, Neth et al., 2021 theoretical background.) Incidentally, R care whether probabilities entered decimal numbers fractions, can check whether 2nd version problem — version reframed terms frequencies — yields solution: shows  PPV computed version marginally different (p4$PPV = 0.0776699). importantly, identical ratio 8103\\frac{8}{103} = 0.0776699.","code":"library(\"riskyr\")  # loads the package #> Welcome to riskyr (v0.5.0)! #>  #>       N #>     /  \\ #>   T      F #>  / \\    / \\ #> hi  mi fa  cr #>  #> riskyr.guide() opens user guides.  comp_PPV(prev = .01, sens = .80, spec = (1 - .096)) #> [1] 0.07763975 # Compute probabilities from 3 essential probabilities:                 # Input arguments: p1 <- comp_prob_prob(prev = .01, sens = .80, spec =   NA, fart = .096)  # prev, sens, NA,   fart p2 <- comp_prob_prob(prev = .01, sens = .80, spec = .904, fart =   NA)  # prev, sens, spec, NA  p3 <- comp_prob_prob(prev = .01, sens = .80, spec = .904, fart = .096)  # prev, sens, spec, fart  # Check equality of outputs: all.equal(p1, p2) #> [1] TRUE all.equal(p2, p3) #> [1] TRUE unlist(p1) #>        prev        sens        mirt        spec        fart        ppod  #> 0.010000000 0.800000000 0.200000000 0.904000000 0.096000000 0.103040000  #>         PPV         FDR         NPV         FOR         acc    p_acc_hi  #> 0.077639752 0.922360248 0.997770246 0.002229754 0.902960000 0.008859750  #>    p_err_fa  #> 0.979389942 # Compute probabilities from 3 ratios of frequencies (probabilities):       # Input arguments: p4 <- comp_prob_prob(prev = 10/1000, sens = 8/10, spec = NA, fart = 95/990) # prev, sens, NA, fart  p4$PPV #> [1] 0.0776699"},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"b--translating-between-formats","dir":"Articles","previous_headings":"Using riskyr","what":"B. Translating between formats","title":"riskyr User Guide","text":"Another function riskyr translate representational formats. translation comes two varieties:","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"computing-frequencies-from-probabilities","dir":"Articles","previous_headings":"Using riskyr > B. Translating between formats","what":"Computing frequencies from probabilities","title":"riskyr User Guide","text":"comp_freq_prob() function computes desired frequencies given probabilities: compute set frequencies specific sample size 1000 individuals, need provide N = 1000 additional argument. , matter whether probabilities supplied decimal numbers ratios (long actually probabilities, .e., numbers ranging  0  1). ratio fart = 95/990 exactly equal fart = .096 (rather 95/100 = 0.95) two versions problem actually vary bit. , results f1 f2 identical comp_freq_prob() function rounds nearest integers default. compute precise frequencies (longer round integers), use round = FALSE argument: , comp_freq_prob() compute just one frequency, list 11 frequencies. names values can inspected printing f1 (vector): list, sample N = 10001000 women split 3 different subgroups. instance, 1010 women cancer appear cond_true cases, whereas 990 without cancer listed cond_false cases. 88 women cancer positive test result appear hits hi 95 women receive positive test result without cancer listed false alarms fa. (See vignette data formats details frequencies.)","code":"# Compute frequencies from probabilities: f1 <- comp_freq_prob(prev =     .01, sens =  .80, spec = NA, fart =   .096, N = 1000) f2 <- comp_freq_prob(prev = 10/1000, sens = 8/10, spec = NA, fart = 95/990, N = 1000)  # Check equality of outputs: all.equal(f1, f2) #> [1] TRUE # Compute frequencies from probabilities (without rounding): f3 <- comp_freq_prob(prev =     .01, sens =  .80, spec = NA, fart =   .096, N = 1000, round = FALSE) f4 <- comp_freq_prob(prev = 10/1000, sens = 8/10, spec = NA, fart = 95/990, N = 1000, round = FALSE)  ## Check equality of outputs: all.equal(f3, f4)  # => shows slight differences in some frequencies: unlist(f1) #>          N  cond_true cond_false    dec_pos    dec_neg    dec_cor    dec_err  #>       1000         10        990        103        897        903         97  #>         hi         mi         fa         cr  #>          8          2         95        895"},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"computing-probabilities-from-frequencies","dir":"Articles","previous_headings":"Using riskyr > B. Translating between formats","what":"Computing probabilities from frequencies","title":"riskyr User Guide","text":"translator 2 representational formats work directions. Consequently, riskyr also allows compute probabilities providing frequencies: Fortunately, comp_prob_freq require 11 frequencies returned comp_freq_prob contained list frequencies f1. Instead, must provide comp_prob_freq 4 essential frequencies listed hi, mi, fa, cr f1. resulting probabilities (saved p5) match list probabilities (saved p4):","code":"# Compute probabilities from frequencies: p5 <- comp_prob_freq(hi = 8, mi = 2, fa = 95, cr = 895)  # => provide 4 essential frequencies # Check equality of outputs: all.equal(p5, p4)"},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"switching-back-and-forth","dir":"Articles","previous_headings":"Using riskyr > B. Translating between formats","what":"Switching back and forth","title":"riskyr User Guide","text":"generally, translate formats twice — first probabilities frequencies resulting frequencies probabilities — original probabilities appear : Similarly, going full circle frequencies probabilities back returns original frequencies: obtain results translating back forth probabilities frequencies, important switch rounding computing frequencies probabilities comp_freq_prob. Similarly, need scale computed frequencies original population size N arrive original frequencies.","code":"# Pick 3 random probability inputs: rand.p <- runif(n = 3, min = 0, max = 1) rand.p  # Translation 1: Compute frequencies from probabilities (without rounding): freq <- comp_freq_prob(prev = rand.p[1], sens = rand.p[2], spec = rand.p[3], round = FALSE)  # Translation 2: Compute probabilities from frequencies: prob <- comp_prob_freq(hi = freq$hi, mi = freq$mi, fa = freq$fa, cr = freq$cr)  ## Verify that results match original probabilities:  all.equal(prob$prev, rand.p[1]) all.equal(prob$sens, rand.p[2]) all.equal(prob$spec, rand.p[3]) # Pick 4 random frequencies: rand.f <- round(runif(n = 4, min = 0, max = 10^3), 0) rand.f   # sum(rand.f)  # Translation 1: Compute probabilities from frequencies: prob <- comp_prob_freq(hi = rand.f[1], mi = rand.f[2], fa = rand.f[3], cr = rand.f[4]) # prob  # Translation 2: Compute frequencies from probabilities (for original N, without rounding): freq <- comp_freq_prob(prev = prob$prev, sens = prob$sens, spec = prob$spec,                         N = sum(rand.f), round = FALSE) # freq  # Verify that results match original frequencies:  all.equal(freq$hi, rand.f[1]) all.equal(freq$mi, rand.f[2]) all.equal(freq$fa, rand.f[3]) all.equal(freq$cr, rand.f[4])"},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"all-at-once-defining-a-riskyr-scenario","dir":"Articles","previous_headings":"Using riskyr > B. Translating between formats","what":"All at once: Defining a riskyr scenario","title":"riskyr User Guide","text":"likely case less interested specific metrics formats want get quick overview key variables risk-related situation, can always define riskyr scenario: Using riskyr function riskyr() defined new scenario s initialized suitable population size N = 1000. Use summary command get overview key parameters: fastest way get overview scenario s plotting :  default plot used riskyr specifying desired plot type -called prism plot (aka. double tree). However, many types plots customization options available. following, explain different visualizations introducing corresponding plotting functions. impatient: Quick start primer explains directly plot different visualizations given scenario.","code":"s <- riskyr(scen_lbl = \"Mammography screening\",              cond_lbl = \"breast cancer\",             cond_true_lbl = \"cancer\", cond_false_lbl = \"no cancer\",             dec_lbl = \"screening test\",             dec_pos_lbl = \"predict cancer\", dec_neg_lbl = \"predict no cancer\",             prev = .01,              sens = .80,              spec = NA,              fart = .096) summary(s)  # provides an overview over key scenario information: #> Scenario:  Mammography screening  #>  #> Condition:  breast cancer  #> Decision:  screening test  #> Population:  Population  #> N =  1000  #> Source:  Source information  #>  #> Probabilities: #>  #>  Essential probabilities: #>  prev  sens  mirt  spec  fart  #> 0.010 0.800 0.200 0.904 0.096  #>  #>  Other probabilities: #>  ppod   PPV   NPV   FDR   FOR   acc  #> 0.103 0.078 0.998 0.922 0.002 0.903  #>  #> Frequencies: #>  #>  by conditions: #>  cond_true cond_false  #>         10        990  #>  #>  by decision: #> dec_pos dec_neg  #>     103     897  #>  #>  by correspondence (of decision to condition): #> dec_cor dec_err  #>     903      97  #>  #>  4 essential (SDT) frequencies: #>  hi  mi  fa  cr  #>   8   2  95 895  #>  #> Accuracy: #>  #>  acc: #> 0.90296 plot(s)  # a prism/network diagram of key frequencies and probabilities (by default):"},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"c--visualizing-relationships-between-formats-and-variables","dir":"Articles","previous_headings":"Using riskyr","what":"C. Visualizing relationships between formats and variables","title":"riskyr User Guide","text":"Inspecting lists probabilities frequencies shows two problem formulations cited two possible instances array many alternative formulations. Essentially, scenario can described variety variables formats. Gaining deeper insights interplay variables requires solid understanding underlying concepts mathematical definitions. facilitate development understanding, riskyr recruits power visual representations shows scenario variety angles perspectives. mostly graphical functionality supports riskyr’s claim toolbox rendering risk literacy transparent. Thus, addition fancy calculator translator formats, riskyr mostly machine turns risk-related information pretty pictures. riskyr provides many alternative visualizations depict risk-related scenario form different representations. type graphic properties perspective — strengths emphasize illuminate particular aspect weaknesses hide obscure others — different visualizations somewhat redundant, yet complement support .6 examples depict particular aspects scenario described :","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"icon-array","dir":"Articles","previous_headings":"Using riskyr > C. Visualizing relationships between formats and variables","what":"Icon array","title":"riskyr User Guide","text":"straightforward way plotting entire population individuals provided icon array represents individual symbol color-coded: icon array showing mammography scenario population 1000 individuals.","code":"plot_icons(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,             icon_types = c(21, 21, 22, 22),            title_lbl = \"Mammography screening\") #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"tree-diagram","dir":"Articles","previous_headings":"Using riskyr > C. Visualizing relationships between formats and variables","what":"Tree diagram","title":"riskyr User Guide","text":"Perhaps intuitive visualization relationships probability frequency information scenario provided tree diagram shows population frequency subgroups nodes probabilities edges: tree diagram applies provided probabilities frequencies population 1000 individuals. Importantly, plot_prism() function plot simple frequency tree providing single perspective argument = \"cd\" (opposed default = \"cddc\"). , called 3 essential probabilities (prev, sens, spec) 1 frequency (number individuals N sample population). addition computing risk-related information (e.g., number individuals 4 subgroups 2nd level tree), tree diagram visualizes crucial dependencies relationships frequencies probabilities. instance, diagram illustrates number true positives (hi) depends condition’s prevalence (prev) decision’s sensitivity (sens), decision’s specificity spec can expressed computed ratio number true negatives (cr) divided number unaffected individuals (cond_false cases).","code":"plot_prism(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,             by = \"cd\", title_lbl = \"Mammography screening\") #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"area-plot","dir":"Articles","previous_headings":"Using riskyr > C. Visualizing relationships between formats and variables","what":"Area plot","title":"riskyr User Guide","text":"alternative way split group individuals subgroups depicts population square dissects various rectangles represent parts population. following area plot (aka. mosaic plot), relative proportions rectangle sizes represent relative frequencies corresponding subgroups: area plot area sizes represent probabilities/relative frequencies subgroups. vertical split dissects population two subgroups correspond frequency cond_true cond_false cases tree diagram . prev value 1% yields slim vertical rectangle left. (details additional options plot_area function, see documentation ?plot_area.)","code":"plot_area(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,           title_lbl = \"Mammography screening\") #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"bar-plot","dir":"Articles","previous_headings":"Using riskyr > C. Visualizing relationships between formats and variables","what":"Bar plot","title":"riskyr User Guide","text":"tree diagrams can also depicted vertical bar plot: (plot shown , please go ahead create .) However, due number categories low number members, many bars barely visible (shown ).","code":"plot_bar(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,           by = \"all\", dir = 2, title_lbl = \"Mammography screening\")"},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"prism-plot","dir":"Articles","previous_headings":"Using riskyr > C. Visualizing relationships between formats and variables","what":"Prism plot","title":"riskyr User Guide","text":"prism plot (called network diagram version 0.1.0 riskyr) generalization tree diagram (see Wassner et al., 2004). plots 9 different frequencies (computed comp_freq_prop() comp_freq_freq() contained freq) nodes single graph depicts 12 probabilities (computed comp_prop_prop() comp_prop_freq() contained prob) edges nodes. Thus, prism diagram provides two distinct perspectives four frequencies center row. scaling nodes either frequency probability, riskyr visualizes interplay frequencies probabilities variety ways: prism plot integrates 2 tree diagrams represents relative frequency area size. Changing area options provides variety perspectives scenario. Additionally, plotting functions provide summary information scenario parameters current accuracy metrics lower margin. Setting mar_notes = FALSE gets rid display. Similarly, setting scen_lbl = \"\" removes title sub-title plot.","code":"plot_prism(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,             by = \"cddc\", area = \"sq\", title_lbl = \"Mammography screening\") #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"alternative-perspectives","dir":"Articles","previous_headings":"Using riskyr > C. Visualizing relationships between formats and variables","what":"Alternative perspectives","title":"riskyr User Guide","text":"variety different graphical options provided riskyr can overwhelming first — fortunately default options work reasonably well cases. following, illustrate additional parameters points, trust can evaluate explore corresponding commands . tree/prism diagrams mosaic plots shown adopted particular perspective splitting population 2 subgroups condition (via default option = \"cd\"). Rather emphasizing difference cond_true cond_false cases, alternative perspective ask: many people detected positive vs. negative test? using option = \"dc\", tree diagram splits population decisions dec_pos dec_neg cases: (Note using col_pal argument changed color scheme pre-defined pal_mod color palette.) Similarly, can plot tree diagram splits population accuracy cases TRUE FALSE (dec_cor dec_err) decisions: perspectives can also applied plots. instance, population area/mosaic plot can first split decisions (.e., horizontally) specifying options = \"cddc\" p_split = \"h\": riskyr uses consistent color scheme represent subgroups across different graphs. color coding sufficient, plotting tree diagram option area = \"hr\" highlights correspondence representing relative frequencies subgroups proportions rectangles: Incidentally, icon array mosaic plot depict probability area size, representations can translated . Even relaxing positional constraint icons icon array, similarity still visible: Can spot cases hits (true positives) misses (false negatives)? (Hint: frequency  8  2, respectively.) details, see documentation examples visualization functions (e.g., plot_area(), plot_icons(), plot_prism()).","code":"plot_prism(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,             by = \"dc\", title_lbl = \"Mammography screening\", col_pal = pal_mod) plot_prism(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,             by = \"ac\", title_lbl = \"Mammography screening\") plot_area(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,           by = \"cddc\",    # show by condition x decision           p_split = \"h\",  # horizontal perspective is primary            title_lbl = \"Mammography screening\") plot_prism(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,             by = \"dc\", area = \"hr\", title_lbl = \"Mammography screening\") plot_icons(prev = .01, sens = .80, spec = NA, fart = .096, N = 1000,             arr_type = \"mosaic\", icon_types = c(21, 21, 22, 22), icon_size = 2,              title_lbl = \"Mammography screening\")"},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"riskyr User Guide","text":"Gigerenzer, G. (2002). Reckoning risk: Learning live uncertainty. London, UK: Penguin. Gigerenzer, G. (2014). Risk savvy: make good decisions. New York, NY: Penguin. Gigerenzer, G., & Gaissmaier, W. (2011). Heuristic decision making. Annual Review Psychology, 62, 451–482. (Available online) Gigerenzer, G., Gaissmaier, W., Kurz-Milcke, E., Schwartz, L., & Woloshin, S. (2007). Helping doctors patients make sense health statistics. Psychological Science Public Interest, 8, 53–96. (Available online) Gigerenzer, G., & Hoffrage, U. (1995). improve Bayesian reasoning without instruction: Frequency formats. Psychological Review, 102, 684–704. Gigerenzer, G., & Hoffrage, U. (1999). Overcoming difficulties Bayesian reasoning: reply Lewis Keren (1999) Mellers McGraw (1999). Psychological Review, 106, 425–430. Hertwig, R., & Grüne-Yanoff, T. (2017). Nudging boosting: Steering empowering good decisions. Perspectives Psychological Science, 12, 973–986. Hoffrage, U., Gigerenzer, G., Krauss, S., & Martignon, L. (2002). Representation facilitates reasoning: natural frequencies . Cognition, 84, 343–352. Hoffrage, U., Krauss, S., Martignon, L., & Gigerenzer, G. (2015). Natural frequencies improve Bayesian reasoning simple complex inference tasks. Frontiers Psychology, 6, 1473. (Available online) Hoffrage, U., Lindsey, S., Hertwig, R., & Gigerenzer, G. (2000). Communicating statistical information. Science, 290, 2261–2262. Khan, ., Breslav, S., Glueck, M., & Hornbæk, K. (2015). Benefits visualization mammography problem. International Journal Human-Computer Studies, 83, 94–113. Kurzenhäuser, S., & Hoffrage, U. (2002). Teaching Bayesian reasoning: evaluation classroom tutorial medical students. Medical Teacher, 24, 516–521. Kurz-Milcke, E., Gigerenzer, G., & Martignon, L. (2008). Transparency risk communication. Annals New York Academy Sciences, 1128, 18–28. Mandel, D. R. & Navarrete, G. (2015). Editorial: Improving Bayesian reasoning: works ? Frontiers Psychology, 6, 1872. (Available online) Micallef, L., Dragicevic, P., & Fekete, J.-D. (2012). Assessing effect visualizations Bayesian reasoning crowd-sourcing. IEEE Transactions Visualization Computer Graphics, 18, 2536–2545. Neth, H., & Gigerenzer, G. (2015). Heuristics: Tools uncertain world. R. Scott & S. Kosslyn (Eds.), Emerging trends social behavioral sciences. New York, NY: Wiley Online Library. doi: 10.1002/9781118900772.etrds0394 (Available online) Neth, H., Gradwohl, N., Streeb, D., Keim, D.., & Gaissmaier, W. (2021). Perspectives 2x2 matrix: Solving semantically distinct problems based shared structure binary contingencies. Frontiers Psychology: Cognition, 11, 567817. doi: 10.3389/fpsyg.2020.567817 (Available online) Sedlmeier, P., & Gigerenzer, G. (2001). Teaching Bayesian reasoning less two hours. Journal Experimental Psychology: General, 130, 380–400. Strevens, M. (2013). Tychomancy: Inferring probability causal structure. Cambridge, MA: Harvard University Press. Trevethan, R. (2017). Sensitivity, specificity, predictive values: Foundations, pliabilities, pitfalls research practice. Frontiers Public Health, 5, 307. (Available online) Wassner, C., Martignon, L., & Biehler, R. (2004). Bayesianisches Denken der Schule. Unterrichtswissenschaft, 32, 58–96.","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"resources","dir":"Articles","previous_headings":"References","what":"Resources","title":"riskyr User Guide","text":"following resources versions currently available:","code":""},{"path":"https://hneth.github.io/riskyr/articles/A_user_guide.html","id":"contact","dir":"Articles","previous_headings":"","what":"Contact","title":"riskyr User Guide","text":"appreciate feedback, comments, questions. Please report riskyr-related issues https://github.com/hneth/riskyr/issues/. Contact us contact.riskyr@gmail.com comments, questions, suggestions.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"two-representational-formats","dir":"Articles","previous_headings":"","what":"Two representational formats","title":"Data Formats","text":"problems addressed riskyr scientific discussion surrounding can framed terms two representational formats: Basically, risk-related information can expressed terms frequencies terms probabilities (see user guide background information.) riskyr reflects basic division distinguishing two data types hence provides objects contain frequencies (specifically, list called freq) objects contain probabilities (list called prob). explain contents, important realize separation abstract artificial one. may make sense distinguish frequencies probabilities conceptual educational reasons, theory reality representations intimately intertwined.2 following, first consider frequencies probabilities , showing related. sneak preview, following prism plot shows frequencies (nodes) probabilities (edges connecting nodes) two perspectives: prism plot showing frequencies nodes probabilities edges linking nodes.","code":"library(\"riskyr\") # load the \"riskyr\" package  plot_prism(prev = .01, sens = .80, spec = NA, fart = .096,  # 3 essential probabilities            N = 1000,       # 1 frequency            area = \"no\",    # same size for all boxes            p_lbl = \"abb\",  # show abbreviated names of probabilities on edges            title_lbl = \"Example\")"},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"frequencies","dir":"Articles","previous_headings":"","what":"Frequencies","title":"Data Formats","text":"purposes, frequencies simply numbers can counted — either 0 positive integers.3","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"definitions","dir":"Articles","previous_headings":"Frequencies","what":"Definitions","title":"Data Formats","text":"following 11 frequencies distinguished riskyr contained freq:","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"perspectives-basic-vs--combined-frequencies","dir":"Articles","previous_headings":"Frequencies","what":"Perspectives: Basic vs. combined frequencies","title":"Data Formats","text":"frequencies contained freq can viewed (parsed) two perspectives: Top-:  entire population different parts subgroups: Whereas N specifies population size, 10 frequencies denote number individuals cases subset. instance, frequency dec_pos denotes individuals decision diagnosis positive. frequency contained within population, numeric value must range  0  N. Bottom-:  4 essential subgroups various combinations : 4 frequencies hi, mi, fa, cr split subgroups, can think atomic elements four essential frequencies. frequencies freq sums various combinations four essential frequencies. implies entire network frequencies probabilities (shown network diagram ) can reconstructed four essential frequencies.","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"relationships-among-frequencies","dir":"Articles","previous_headings":"Frequencies","what":"Relationships among frequencies","title":"Data Formats","text":"following relationships hold among 11 frequencies: population size N can split several subgroups classifying individuals 4 different criteria: condition (cd); decision (dc); accuracy (ac) (.e., correspondence decisions conditions); combination condition decision (.e., joint category). Depending criterion used, following relationships hold: 𝙽=𝚌𝚘𝚗𝚍_𝚝𝚛𝚞𝚎+𝚌𝚘𝚗𝚍_𝚏𝚊𝚕𝚜𝚎()=𝚍𝚎𝚌_𝚙𝚘𝚜+𝚍𝚎𝚌_𝚗𝚎𝚐(b)=𝚍𝚎𝚌_𝚌𝚘𝚛+𝚍𝚎𝚌_𝚎𝚛𝚛(c)=𝚑𝚒+𝚖𝚒+𝚏𝚊+𝚌𝚛(d)  \\begin{aligned} \\texttt{N} &= \\texttt{cond_true} + \\texttt{cond_false} & \\textrm{()}\\\\            &= \\texttt{dec_pos} + \\texttt{dec_neg}      & \\textrm{(b)}\\\\            &= \\texttt{dec_cor} + \\texttt{dec_err}      & \\textrm{(c)}\\\\            &= \\texttt{hi} + \\texttt{mi} + \\texttt{fa} + \\texttt{cr} & \\textrm{(d)}\\\\ \\end{aligned} Similarly, subsets resulting using splits condition (cd), decision (dc), accuracy (ac), can also expressed sum two four essential frequencies. results three different ways grouping four essential frequencies: condition (cd) (corresponding two columns confusion matrix): 𝙽=𝚌𝚘𝚗𝚍_𝚝𝚛𝚞𝚎+𝚌𝚘𝚗𝚍_𝚏𝚊𝚕𝚜𝚎()=(𝚑𝚒+𝚖𝚒)+(𝚏𝚊+𝚌𝚛)  \\begin{aligned} \\texttt{N} \\ &= \\ \\texttt{cond_true} & +\\ \\ \\ \\ \\ &\\texttt{cond_false}   & \\textrm{()} \\\\            \\ &= \\ (\\texttt{hi} + \\texttt{mi}) & +\\ \\ \\ \\ \\ &(\\texttt{fa} + \\texttt{cr}) \\\\ \\end{aligned} decision (dc) (corresponding two rows confusion matrix): 𝙽=𝚍𝚎𝚌_𝚙𝚘𝚜+𝚍𝚎𝚌_𝚗𝚎𝚐(b)=(𝚑𝚒+𝚏𝚊)+(𝚖𝚒+𝚌𝚛)  \\begin{aligned} \\texttt{N} \\ &= \\ \\texttt{dec_pos} & +\\ \\ \\ \\ \\ &\\texttt{dec_neg}   & \\ \\ \\ \\ \\ \\textrm{(b)}  \\\\            \\ &= \\ (\\texttt{hi} + \\texttt{fa}) & +\\ \\ \\ \\ \\ &(\\texttt{mi} + \\texttt{cr})   \\\\ \\end{aligned} accuracy (ac) (correspondence decisions conditions, corresponding two diagonals confusion matrix): 𝙽=𝚍𝚎𝚌_𝚌𝚘𝚛+𝚍𝚎𝚌_𝚎𝚛𝚛(c)=(𝚑𝚒+𝚌𝚛)+(𝚖𝚒+𝚏𝚊)  \\begin{aligned} \\texttt{N} \\ &= \\ \\texttt{dec_cor} & +\\ \\ \\ \\ \\ &\\texttt{dec_err}   & \\ \\ \\ \\ \\textrm{(c)}  \\\\            \\ &= \\ (\\texttt{hi} + \\texttt{cr}) & +\\ \\ \\ \\ \\ &(\\texttt{mi} + \\texttt{fa}) \\\\ \\end{aligned} may tempting refer instances dec_cor dec_err “true decisions” “false decisions”. However, terms invite conceptual confusion, “true decisions” actually include cond_false cases (TN cr cases) “false decisions” actually include cond_true cases (FN mi cases).","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"probabilities","dir":"Articles","previous_headings":"","what":"Probabilities","title":"Data Formats","text":"notions probability elusive ubiquitous (see Hájek, 2012, solid exposition different concepts interpretations). present purposes, probabilities simply numbers  0  1. numbers defined reflect particular quantities can expressed percentages, functions ratios numbers (frequencies probabilities).","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"definitions-1","dir":"Articles","previous_headings":"Probabilities","what":"Definitions","title":"Data Formats","text":"riskyr distinguishes 13 probabilities (see prob current values): Note prism diagram (plot_prism) shows total 18 probabilities: 3 perspectives (= \"cd\", = \"dc\", = \"ac\") 6 edges denoting (marginal conditional) probabilities perspective. However, currently explicitly identify possible probabilities.4","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"non-conditional-vs--conditional-probabilities","dir":"Articles","previous_headings":"Probabilities","what":"Non-conditional vs. conditional probabilities","title":"Data Formats","text":"Note typical riskyr scenario contains several marginal non-conditional probabilities: prevalence prev (1.) depends features condition. proportion positive decisions ppod (bias) (6.) depends features decision. accuracy acc (11.) depends  prev  ppod, unconditionally dissects population two groups (dec_cor vs. dec_err). probabilities conditional probabilities based three perspectives: condition: conditional probabilities (2.  5.) depend condition’s prev features decision. decision: conditional probabilities (7.  10.) depend decision’s ppod features condition. accuracy: conditional probabilities based accuracy acc currently computed, – absence commonly accepted term — named p_acc_hi p_err_fa (12. 13.).","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"relationships-among-probabilities","dir":"Articles","previous_headings":"Probabilities","what":"Relationships among probabilities","title":"Data Formats","text":"following relationships hold among conditional probabilities: sensitivity sens miss rate mirt complements: 𝚜𝚎𝚗𝚜=1−𝚖𝚒𝚛𝚝 \\texttt{sens} = 1 - \\texttt{mirt}  - specificity spec false alarm rate fart complements: 𝚜𝚙𝚎𝚌=1−𝚏𝚊𝚛𝚝 \\texttt{spec} = 1 - \\texttt{fart}  - positive predictive value PPV false detection rate FDR complements: 𝙿𝙿𝚅=1−𝙵𝙳𝚁 \\texttt{PPV} = 1 - \\texttt{FDR}  - negative predictive value NPV false omission rate complements: 𝙽𝙿𝚅=1−𝙵𝙾𝚁 \\texttt{NPV} = 1 - \\texttt{} possible adapt Bayes’ formula define PPV  NPV terms prev, sens, spec: $$ \\texttt{PPV} = \\frac{\\texttt{prev} \\cdot \\texttt{sens}}{\\texttt{prev} \\cdot \\texttt{sens} + (1 - \\texttt{prev}) \\cdot (1 - \\texttt{sens})}\\\\ \\\\ \\\\ \\texttt{NPV} = \\frac{(1 - \\texttt{prev}) \\cdot \\texttt{spec}}{\\texttt{prev} \\cdot (1 - \\texttt{sens}) + (1 - \\texttt{prev}) \\cdot \\texttt{spec}} $$ Although functions comp_PPV comp_NPV compute desired conditional probability, difficult remember think terms. Instead, recommend thinking defining conditional probabilities terms frequencies relations frequencies (see Neth et al., 2021 details).","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"probabilities-as-ratios-between-frequencies","dir":"Articles","previous_headings":"","what":"Probabilities as ratios between frequencies","title":"Data Formats","text":"easiest way think , define, compute probabilities (contained  prob) terms frequencies (contained  freq): Note ratios frequencies straightforward consequences probabilities’ definitions: unconditional probabilities (1., 6.  11.) proportions entire population: prev = cond_true/N ppod = dec_pos/N acc = dec_cor/N conditional probabilities (2.–5., 7.–10., 11.–12.) can computed proportion reference group conditional. specifically, schematically read definition “conditional probability XX provided YY”, ratio corresponding frequencies X & Y/Y. explicitly, ratio’s numerator frequency joint occurrence (.e., X & Y) case; ratio’s denominator frequency condition (Y) case. computing probabilities rounded frequencies, numeric values may deviate true underlying probabilities, particularly small population sizes N. (Use scale argument many riskyr plotting functions control whether probabilities based frequencies.)","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"an-example","dir":"Articles","previous_headings":"Practice","what":"An example","title":"Data Formats","text":"following prism (network) diagram based following inputs: condition’s prevalence  50% (prev = .50); decision’s sensitivity  80% (sens = .80); decision’s specificity  60% (spec = .60); population size 10 individuals (N = 10); illustrates relationship frequencies probabilities: prism plot showing probabilities can computed ratios frequencies.","code":"plot_prism(prev = .50, sens = .80, spec = .60,  # 3 essential probabilities            N = 10,         # population frequency            scale = \"f\",    # scale by frequency, rather than probability (\"p\")             area = \"sq\",    # boxes as squares, with sizes scaled by current scale              p_lbl = \"num\",  # show numeric probability values on edges            title_lbl = \"Probabilities as ratios between frequencies\") #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"your-tasks","dir":"Articles","previous_headings":"Practice","what":"Your tasks","title":"Data Formats","text":"Verify probabilities (shown numeric values edges) match ratios corresponding frequencies (shown boxes). names probabilities? frequency dec_cor dec_err cases? cases appear diagram? parameter values example require rounding frequencies. Change (e.g., N = 5) explore happens alternating scale = \"f\" scale = \"p\".","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Data Formats","text":"Gigerenzer, G. (2002). Reckoning risk: Learning live uncertainty. London, UK: Penguin. Gigerenzer, G. (2014). Risk savvy: make good decisions. New York, NY: Penguin. Gigerenzer, G., & Hoffrage, U. (1999). Overcoming difficulties Bayesian reasoning: reply Lewis Keren (1999) Mellers McGraw (1999). Psychological Review, 106, 425–430. Hájek, (2012) Interpretations Probability. Edward N. Zalta (Ed.), Stanford Encyclopedia Philosophy. URL: https://plato.stanford.edu/entries/probability-interpret/ 2012 Archive Hoffrage, U., Gigerenzer, G., Krauss, S., & Martignon, L. (2002). Representation facilitates reasoning: natural frequencies . Cognition, 84, 343–352. Neth, H., Gradwohl, N., Streeb, D., Keim, D.., & Gaissmaier, W. (2021). Perspectives 2x2 matrix: Solving semantically distinct problems based shared structure binary contingencies. Frontiers Psychology: Cognition, 11, 567817. doi: 10.3389/fpsyg.2020.567817 (Available online) Trevethan, R. (2017). Sensitivity, specificity, predictive values: Foundations, pliabilities, pitfalls research practice. Frontiers Public Health, 5, 307. (Available online)","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"resources","dir":"Articles","previous_headings":"References","what":"Resources","title":"Data Formats","text":"following resources versions currently available:","code":""},{"path":"https://hneth.github.io/riskyr/articles/B_data_formats.html","id":"contact","dir":"Articles","previous_headings":"","what":"Contact","title":"Data Formats","text":"appreciate feedback, comments, questions. Please report riskyr-related issues https://github.com/hneth/riskyr/issues/. Contact us contact.riskyr@gmail.com comments, questions, suggestions.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"basics","dir":"Articles","previous_headings":"","what":"Basics","title":"Confusion Matrix and Metrics","text":"Condensed core, 2x2 matrix cross-tabulates (“confuses”) two binary dimensions classifies individual case one four possible categories result combining two binary variables (e.g., condition decision case) . sounds complicated : Fortunately, table confusing : shows four frequency counts (“joint” frequencies) result cross-tabulating two binary dimensions. , perhaps surprisingly, metrics interest various contexts domains follow simple core straightforward way. following, illustrate metrics can constructed four essential frequencies.","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"adopting-two-perspectives-on-a-population","dir":"Articles","previous_headings":"Basics","what":"Adopting two perspectives on a population","title":"Confusion Matrix and Metrics","text":"Essentially, confusion matrix views population N individuals different ways adopting different perspectives. “Adopting perspective” means can distinguish individuals basis criterion. two primary criteria used : () individual’s condition, can either present (TRUE) absent (FALSE), (b) individual’s decision, can either positive (TRUE) negative (FALSE). Numerically, adoption two perspectives splits population two subgroups.1 Applying two different splits population two subgroups results 2×2=42 \\times 2 = 4 cases, form core confusion matrix: hi represents hits (true positives): condition present (TRUE) & decision positive (TRUE). mi represents misses (false negatives): condition present (TRUE) & decision negative (FALSE). fa represents false alarms (false positives): condition absent (FALSE) & decision positive (TRUE). cr represents correct rejections (true negatives): condition absent (FALSE) & decision negative (FALSE). Importantly, frequencies required understand compute various metrics combinations four frequencies — refer four essential frequencies (see vignette Data formats). instance, adding columns rows matrix yields frequencies two subgroups result adopting two perspectives population N (splitting N subgroups applying two binary criteria): () condition (cd) (corresponding two columns confusion matrix): 𝙽=𝚌𝚘𝚗𝚍_𝚝𝚛𝚞𝚎+𝚌𝚘𝚗𝚍_𝚏𝚊𝚕𝚜𝚎()=(𝚑𝚒+𝚖𝚒)+(𝚏𝚊+𝚌𝚛)  \\begin{aligned} \\texttt{N} \\ &= \\ \\texttt{cond_true} & +\\ \\ \\ \\ \\ &\\texttt{cond_false}   & \\textrm{()}      \\\\            \\ &= \\ (\\texttt{hi} + \\texttt{mi}) & +\\ \\ \\ \\ \\ &(\\texttt{fa} + \\texttt{cr}) \\\\ \\end{aligned} (b) decision (dc) (corresponding two rows confusion matrix): 𝙽=𝚍𝚎𝚌_𝚙𝚘𝚜+𝚍𝚎𝚌_𝚗𝚎𝚐(b)=(𝚑𝚒+𝚏𝚊)+(𝚖𝚒+𝚌𝚛)  \\begin{aligned} \\texttt{N} \\ &= \\ \\texttt{dec_pos} & +\\ \\ \\ \\ \\ &\\texttt{dec_neg}   & \\ \\ \\ \\ \\textrm{(b)}      \\\\            \\ &= \\ (\\texttt{hi} + \\texttt{fa}) & +\\ \\ \\ \\ \\ &(\\texttt{mi} + \\texttt{cr})         \\\\ \\end{aligned} reflect two perspectives confusion matrix, need add sums columns (.e., condition) rows (decision): third perspective provided considering diagonals 2x2 matrix. many semantic domains, diagonals denote accuracy classification, correspondence dimensions (see ).","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"example","dir":"Articles","previous_headings":"Basics > Adopting two perspectives on a population","what":"Example","title":"Confusion Matrix and Metrics","text":"view 2x2 matrix (confusion table) riskyr, can use plot_tab() function (.e., plot existing scenario type = \"tab\"): Example 2x2 confusion table riskyr.","code":"## (1) Plot table from basic input parameters: -----  plot_tab(prev = .05, sens = .75, spec = .66, N = 1000,          p_lbl = \"def\") # show condition probabilies (by default)"},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"accuracy-as-a-third-perspective","dir":"Articles","previous_headings":"Basics","what":"Accuracy as a third perspective","title":"Confusion Matrix and Metrics","text":"third way grouping four essential frequencies results asking question: four essential frequencies correct decisions erroneous decisions? Crucially, question decision accuracy can neither answered considering individual’s condition (.e., columns matrix), can answered considering individual’s decision (.e., rows matrix). Instead, answering question accuracy requires dimensions determined considering correspondence condition decision. Checking correspondence rows columns four essential frequencies yields important insight: confusion matrix contains two types correct decisions two types errors: decision correct, corresponds condition. case two cells (“\" diagonal ) confusion matrix: hi: condition present (TRUE) & decision positive (TRUE) cr: condition absent (FALSE) & decision negative (FALSE) decision incorrect erroneous, correspond condition. also case two cells (“/” diagonal ) confusion matrix: mi: condition present (TRUE) & decision negative (FALSE) fa: condition absent (FALSE) & decision positive (TRUE) Splitting N individuals two subgroups correct vs. erroneous decisions yields third perspective population: (c) accuracy (ac) correspondence decisions conditions (corresponding two diagonals confusion matrix): 𝙽=𝚍𝚎𝚌_𝚌𝚘𝚛+𝚍𝚎𝚌_𝚎𝚛𝚛(c)=(𝚑𝚒+𝚌𝚛)+(𝚖𝚒+𝚏𝚊)  \\begin{aligned} \\texttt{N} \\ &= \\ \\texttt{dec_cor} & +\\ \\ \\ \\ \\ &\\texttt{dec_err}   & \\ \\ \\textrm{(c)}  \\\\            \\ &= \\ (\\texttt{hi} + \\texttt{cr}) & +\\ \\ \\ \\ \\ &(\\texttt{mi} + \\texttt{fa}) \\\\ \\end{aligned}","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"example-1","dir":"Articles","previous_headings":"Basics > Accuracy as a third perspective","what":"Example","title":"Confusion Matrix and Metrics","text":"Re-arranging cells 2x2 matrix allows illustrating accuracy third perspective (e.g., specifying perspective = \"cdac\"): Arranging 2x2 confusion table condition accuracy.","code":"plot_tab(prev = .05, sens = .75, spec = .66, N = 1000,          by = \"cdac\", p_split = \"h\",           p_lbl = \"def\", title_lbl = \"Scenario 2\") #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"avoiding-common-sources-of-confusion","dir":"Articles","previous_headings":"Basics > Accuracy as a third perspective","what":"Avoiding common sources of confusion","title":"Confusion Matrix and Metrics","text":"may instructive point two possible sources confusion, can deliberately avoided: Beware alternative terms  mi  cr: Misses mi often called “false negatives” (FN), nevertheless cases condition TRUE (.e., cond_true column confusion table). Correct rejections cr often called “true negatives” (TN), nevertheless cases condition FALSE (.e., cond_false column confusion table). Thus, terms “true” “false” sometimes ambiguous switching referents. used denote four essential frequencies (e.g., describing mi “false negatives” cr “true negatives”) terms refer correspondence decision condition, rather condition. avoid source confusion, prefer terms mi cr “false negatives” (FN) “true negatives” (TN), respectively, offer options pre-defined lists text labels (see txt_org txt_TF). Beware alternative terms dec_cor dec_err: Similarly, may tempting refer instances dec_cor dec_err “true decisions” “false decisions”. However, also invite conceptual confusion, “true decisions” include cond_false cases (cr TN cases) “false decisions” include cond_true cases (mi FN cases). , prefer less ambiguous terms “correct decisions” vs. “erroneous decisions”.","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"accuracy-metrics","dir":"Articles","previous_headings":"","what":"Accuracy metrics","title":"Confusion Matrix and Metrics","text":"perspective accuracy raises important question: good decision process (e.g., clinical judgment diagnostic test) capturing true state condition? Different accuracy metrics provide different answers question, share common goal — measuring decision performance capturing correspondence decisions conditions quantitative fashion.2 accuracy metrics quantify relationship correct erroneous decisions, different metrics emphasize different aspects serve different purposes. distinguish specific general metrics.","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"a--specific-metrics-conditional-probabilities","dir":"Articles","previous_headings":"Accuracy metrics","what":"A. Specific metrics: Conditional probabilities","title":"Confusion Matrix and Metrics","text":"goal specific accuracy metric quantify particular aspect decision performance. instance, accurate decision diagnostic test correctly detecting cond_true cases? accurate detecting cond_false cases? dealing two types correct decisions (hi cr) two perspectives (columns vs. rows), can provide 4 answers questions. obtain numeric quantity, divide frequency correct cases (either hi cr) () column sums (cond_true vs. cond_false): yields decision’s sensitivity (sens) specificity (spec): 𝚜𝚎𝚗𝚜=𝚑𝚒𝚌𝚘𝚗𝚍_𝚝𝚛𝚞𝚎(a1)𝚜𝚙𝚎𝚌=𝚌𝚛𝚌𝚘𝚗𝚍_𝚏𝚊𝚕𝚜𝚎(a2) \\begin{aligned} \\texttt{sens} \\ &= \\frac{\\texttt{hi}}{\\texttt{cond_true}} & \\ \\ \\textrm{(a1)}   \\\\ \\ \\\\  \\texttt{spec} \\ &= \\frac{\\texttt{cr}}{\\texttt{cond_false}} & \\ \\ \\textrm{(a2)}  \\\\ \\end{aligned} (b) row sums (dec_pos vs. dec_neg): yields decision’s positive predictive value (PPV) negative predictive value (NPV): 𝙿𝙿𝚅=𝚑𝚒𝚍𝚎𝚌_𝚙𝚘𝚜(b1)𝙽𝙿𝚅=𝚌𝚛𝚍𝚎𝚌_𝚗𝚎𝚐(b2) \\begin{aligned} \\texttt{PPV} \\ &= \\frac{\\texttt{hi}}{\\texttt{dec_pos}} & \\ \\ \\ \\textrm{(b1)}   \\\\ \\ \\\\  \\texttt{NPV} \\ &= \\frac{\\texttt{cr}}{\\texttt{dec_neg}} & \\ \\ \\ \\textrm{(b2)}   \\\\ \\end{aligned}","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"b--general-metrics-measures-of-accuracy","dir":"Articles","previous_headings":"Accuracy metrics","what":"B. General metrics: Measures of accuracy","title":"Confusion Matrix and Metrics","text":"contrast specific metrics, general metrics accuracy aim capture overall performance (.e., summarize four essential frequencies confusion matrix) single quantity. riskyr currently computes four general metrics (contained accu):","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"overall-accuracy-acc","dir":"Articles","previous_headings":"Accuracy metrics > B. General metrics: Measures of accuracy","what":"1. Overall accuracy acc","title":"Confusion Matrix and Metrics","text":"Overall accuracy (acc) divides number correct decisions (.e., dec_cor cases “\" diagonal confusion table) number N decisions (individuals decisions made). Thus, Accuracy acc := Proportion percentage cases correctly classified. Numerically, overall accuracy acc computed : 𝚊𝚌𝚌=𝚑𝚒+𝚌𝚛𝚑𝚒+𝚖𝚒+𝚏𝚊+𝚌𝚛=𝚍𝚎𝚌_𝚌𝚘𝚛𝚍𝚎𝚌_𝚌𝚘𝚛+𝚍𝚎𝚌_𝚎𝚛𝚛=𝚍𝚎𝚌_𝚌𝚘𝚛𝙽 \\begin{aligned} \\texttt{acc} &= \\frac{\\texttt{hi} + \\texttt{cr}}{\\texttt{hi} + \\texttt{mi} + \\texttt{fa} + \\texttt{cr}}               = \\frac{\\texttt{dec_cor}}{\\texttt{dec_cor} + \\texttt{dec_err}} = \\frac{\\texttt{dec_cor}}{\\texttt{N}}   \\end{aligned}","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"weighted-accuracy-wacc","dir":"Articles","previous_headings":"Accuracy metrics > B. General metrics: Measures of accuracy","what":"2. Weighted accuracy wacc","title":"Confusion Matrix and Metrics","text":"Whereas overall accuracy (acc) discriminate different types correct incorrect cases, weighted accuracy (wacc) allows taking account importance errors. Essentially, wacc combines sensitivity (sens) specificity (spec), multiplies sens weighting parameter w (ranging  0  1) spec complement (1 - w): Weighted accuracy wacc := average sensitivity (sens) weighted w, specificity (spec), weighted (1 - w). 𝚠𝚊𝚌𝚌=𝚠⋅𝚜𝚎𝚗𝚜+(1−𝚠)⋅𝚜𝚙𝚎𝚌 \\begin{aligned} \\texttt{wacc} \\ &= \\texttt{w} \\cdot \\texttt{sens} \\ + \\ (1 - \\texttt{w}) \\cdot \\texttt{spec} \\\\  \\end{aligned} Three cases can distinguished, based value weighting parameter w: w = .5, sens spec weighted equally wacc becomes balanced accuracy bacc. 0 <= w < .5, sens less important spec (.e., instances fa considered serious errors instances  mi). .5 < w <= 1, sens important spec (.e., instances mi considered serious errors instances  fa).","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"matthews-correlation-coefficient-mcc","dir":"Articles","previous_headings":"Accuracy metrics > B. General metrics: Measures of accuracy","what":"3. Matthews correlation coefficient mcc","title":"Confusion Matrix and Metrics","text":"Matthews correlation coefficient (values ranging −1-1 +1+1) computed : 𝚖𝚌𝚌=(𝚑𝚒⋅𝚌𝚛)−(𝚏𝚊⋅𝚖𝚒)(𝚑𝚒+𝚏𝚊)⋅(𝚑𝚒+𝚖𝚒)⋅(𝚌𝚛+𝚏𝚊)⋅(𝚌𝚛+𝚖𝚒) \\begin{aligned} \\texttt{mcc} \\ &= \\frac{(\\texttt{hi} \\cdot \\texttt{cr}) \\ - \\ (\\texttt{fa} \\cdot \\texttt{mi})}{\\sqrt{(\\texttt{hi} + \\texttt{fa}) \\cdot (\\texttt{hi} + \\texttt{mi}) \\cdot (\\texttt{cr} + \\texttt{fa}) \\cdot (\\texttt{cr} + \\texttt{mi})}}  \\\\ \\end{aligned} mcc correlation coefficient specifying correspondence actual predicted binary categories. value  00 represents chance performance, value  +1+1 represents perfect performance, value  −1−1 indicates complete disagreement truth predictions. See Wikipedia: Matthews correlation coefficient details.","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"f1-score","dir":"Articles","previous_headings":"Accuracy metrics > B. General metrics: Measures of accuracy","what":"4. F1 score","title":"Confusion Matrix and Metrics","text":"creatures live three general measures accuracy, accu also provides F1 score, harmonic mean PPV (aka. precision) sens (aka. recall): 𝚏𝟷𝚜=2⋅𝙿𝙿𝚅⋅𝚜𝚎𝚗𝚜𝙿𝙿𝚅+𝚜𝚎𝚗𝚜 \\begin{aligned} \\texttt{f1s} \\ &=  2 \\cdot \\frac{\\texttt{PPV} \\cdot \\texttt{sens}}{\\texttt{PPV} + \\texttt{sens}}  \\\\ \\end{aligned} See Wikipedia: F1 score details. many additional scientific metrics defined basis 2x2 matrix, see Section 4. Integration (e.g., Figure 6 Table 3) Neth et al. (2021).","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Confusion Matrix and Metrics","text":"Neth, H., Gradwohl, N., Streeb, D., Keim, D.., & Gaissmaier, W. (2021). Perspectives 2x2 matrix: Solving semantically distinct problems based shared structure binary contingencies. Frontiers Psychology, 11, 567817. doi: 10.3389/fpsyg.2020.567817 (Available online) Phillips, N. D., Neth, H., Woike, J. K., & Gaissmaier, W. (2017). FFTrees: toolbox create, visualize, evaluate fast--frugal decision trees. Judgment Decision Making, 12, 344–368. (Available online: pdf | html | R package ) Links related Wikipedia articles: Confusion matrix Matthews correlation coefficient F1 score","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"resources","dir":"Articles","previous_headings":"References","what":"Resources","title":"Confusion Matrix and Metrics","text":"following resources versions currently available:","code":""},{"path":"https://hneth.github.io/riskyr/articles/C_confusion_matrix.html","id":"contact","dir":"Articles","previous_headings":"","what":"Contact","title":"Confusion Matrix and Metrics","text":"appreciate feedback, comments, questions. Please report riskyr-related issues https://github.com/hneth/riskyr/issues/. Contact us contact.riskyr@gmail.com comments, questions, suggestions.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/articles/D_functional_perspectives.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"Adopting Functional Perspectives","text":"basic format function y=f(x)y = f(x), illustrates values  yy depend values  xx given function ff. riskyr provides two functions viewing parameters function parameters (values).","code":""},{"path":"https://hneth.github.io/riskyr/articles/D_functional_perspectives.html","id":"curves-as-a-function-of-prevalence","dir":"Articles","previous_headings":"","what":"Curves as a function of prevalence","title":"Adopting Functional Perspectives","text":"plot_curve() function draws curves (lines) selected parameters function prevalence (prev ranging  0  1) given decision process diagnostic test (.e., given values  sens  spec): y=f(𝚙𝚛𝚎𝚟, 0 1) y∈{𝙿𝙿𝚅,𝙽𝙿𝚅,𝚙𝚙𝚘𝚍,𝚊𝚌𝚌}(1)y \\ = \\ f(\\texttt{prev} \\textrm{, 0 1})  \\textrm{ } y \\\\{\\texttt{PPV}, \\texttt{NPV}, \\texttt{ppod}, \\texttt{acc}\\}  \\ \\ \\ \\ \\ \\   (1) example, reconsider original scenario (mammography screening, see user guide). Earlier, computed positive predictive value (PPV)  7.8%. rather just computing single value, ask: values PPV develop function prevalence? plot_curve() function illustrates relationship: Showing PPV NPV function prevalence (prevalance 1% given values sensitivity specificity) original mammography screening scenario. curves illustrate values PPV NPV crucially depend prevalence value prev current population. fact, actually vary across entire range (.e.,  0  1), rendering communication value utterly meaningless without specifying current population’s prevalence value. dependency  PPV  NPV  prev can illustrated assuming higher prevalence rate. instance, knew woman genetically tested known exhibit notorious BRCA1 mutation, prevalence value corresponding population (given positive mammography result routine screening) increased 60% (graph shown save space, try running following code ): shows — given increased prevalence value prev 60% — positive predictive value PPV positive test result increases  7.8% (standard population) around 93% (given BRCA1 mutation). addition, actual values population test parameters often unclear. plot_curve() function reflects providing uncertainty parameter uc expressed percentage specified value. instance, following assumes parameter values may deviate  5% specified values marks corresponding ranges uncertainty shaded areas around curves assume exact parameter values. notions expressing probabilities function prevalence uncertainty ranges imprecise parameter estimates can extended probabilities. following curves show full set curves currently drawn  plot_curve(). addition predictive values PPV  NPV, see bias proportion positive decisions ppod overall accuracy acc also vary function prevalence prev: Curves show PPV/NPV, ppod, acc function prevalence (given values sensitivity specificity) assuming increased prevalence 60% uncertainty range 5%.","code":"plot_curve(prev = .01, sens = .80, spec = (1 - .096),             what = c(\"prev\", \"PPV\", \"NPV\"),             title_lbl = \"Mammography screening\", cex.lbl = .8) #> Argument 'title_lbl' is deprecated. Please use 'main' instead. high.prev <- .60   # assume increased prevalence due to BRCA1 mutation  plot_curve(prev = high.prev, sens = .80, spec = (1 - .096),             what = c(\"prev\", \"PPV\", \"NPV\"),             title_lbl = \"Mammography screening (BRCA1 mutation)\", cex.lbl = .80) high.prev <- .60   # assume increased prevalence due to BRCA1 mutation  plot_curve(prev = high.prev, sens = .80, spec = (1 - .096),             what = c(\"prev\", \"PPV\", \"NPV\", \"ppod\", \"acc\"),             title_lbl = \"Mammography screening (BRCA1 mutation)\", uc = .05, cex.lbl = .80) #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/articles/D_functional_perspectives.html","id":"planes-as-a-function-of-sensitivity-and-specificity-given-a-prevalence","dir":"Articles","previous_headings":"","what":"Planes as a function of sensitivity and specificity (given a prevalence)","title":"Adopting Functional Perspectives","text":"plot_plane() function draws plane selected parameter function sensitivity specificity values ( sens  spec ranging  0  1) given prevalence prev: y=f(𝚜𝚎𝚗𝚜×𝚜𝚙𝚎𝚌, 0 1, given value 𝚙𝚛𝚎𝚟) y∈{𝙿𝙿𝚅,𝙽𝙿𝚅,𝚙𝚙𝚘𝚍,𝚊𝚌𝚌}(2)y \\ = \\ f(\\texttt{sens} \\times\\ \\texttt{spec} \\textrm{, 0 1, given value } \\texttt{prev}) \\textrm{ } y \\\\{\\texttt{PPV}, \\texttt{NPV}, \\texttt{ppod}, \\texttt{acc}\\}  \\ \\ \\ \\ \\ \\ \\ (2) examples (shown , please try evaluating following function calls): Plane showing positive predictive value (PPV) function sensitivity specificity given prevalence. Related plots (showing different probabilities) include: Overall, viewing conditional probabilities (like PPV NPV, also ppod  acc) function probabilities (e.g., prev, sens, spec fart) often reveals unexpected relationships can enable new insights.","code":"plot_plane(prev = high.prev, sens = .80, spec = (1 - .096), what = \"PPV\",              title_lbl = \"A. Mammography (BRCA1)\", cex.lbl = .8) #> Argument 'title_lbl' is deprecated. Please use 'main' instead. plot_plane(prev = high.prev, sens = .80, spec = (1 - .096), what = \"NPV\",              title_lbl = \"B. Mammography (BRCA1)\", cex.lbl = .8) plot_plane(prev = high.prev, sens = .80, spec = (1 - .096), what = \"ppod\", what_col = \"firebrick\",             title_lbl = \"C. Mammography (BRCA1)\", phi = 45, cex.lbl = .8) plot_plane(prev = high.prev, sens = .80, spec = (1 - .096), what = \"acc\",  what_col = \"forestgreen\",             title_lbl = \"D. Mammography (BRCA1)\", cex.lbl = .8)"},{"path":"https://hneth.github.io/riskyr/articles/D_functional_perspectives.html","id":"resources","dir":"Articles","previous_headings":"Planes as a function of sensitivity and specificity (given a prevalence)","what":"Resources","title":"Adopting Functional Perspectives","text":"following resources versions currently available:","code":""},{"path":"https://hneth.github.io/riskyr/articles/D_functional_perspectives.html","id":"contact","dir":"Articles","previous_headings":"","what":"Contact","title":"Adopting Functional Perspectives","text":"appreciate feedback, comments, questions. Please report riskyr-related issues https://github.com/hneth/riskyr/issues/. Contact us contact.riskyr@gmail.com comments, questions, suggestions.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Quick Start Primer","text":"can use riskyr? Basically, two ways get started: Define scenario risk-related information (typically provided terms probabilities). Inspect one 24 predefined scenarios get glimpse types scenarios possible. Either way, soon explore specific risk-related scenario uncover relationships parameters. Please load package first, already done :","code":"library(\"riskyr\")  # loads the package"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"defining-a-scenario","dir":"Articles","previous_headings":"Getting started","what":"Defining a scenario","title":"Quick Start Primer","text":"Let’s launch riskyr-career creating ficticious risk scenario construct scratch:1","code":""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"example","dir":"Articles","previous_headings":"Getting started > Defining a scenario","what":"Example","title":"Quick Start Primer","text":"Identifying reoffenders Imagine developing test predict jailed criminal offender reoffend release. research yields following information: 45% 753 jailed offenders prison re-offend released (prev = .45). test correctly detects re-offend 98% cases (sens = .98). test falsely identifies 54% re-offend potential re-offenders. Conversely, implies test correctly identifies 46% reoffend (spec = .46). John D. get released tested. test predicts reoffend. probability John D. actually reoffend, given test result? answer question, calculate corresponding probabilities frequencies (explained user guide). Alternatively, can use riskyr() function create riskyr scenario can modify, inspect, visualize various ways.","code":""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"necessary-scenario-information","dir":"Articles","previous_headings":"Getting started > Defining a scenario","what":"Necessary scenario information","title":"Quick Start Primer","text":"First, need translate numeric information provided example parameter values: probability reoffending provides prevalence population: prev = .45. test’s conditional probability correctly detecting reoffender provides sensitivity: sens = .98. test’s conditional probability correctly detecting someone reoffend provides specificity: spec = .46. (corresponds false alarm rate fart = 1 - spec = .54.) addition, population size sample mentioned N = 753.2 following code defines perfectly valid riskyr scenario 3 essential probabilities: creates my_scenario 3 essential probabilities (prev, sens, spec fart) computes suitable population size N 1000. Alternatively, create minimal scenario 4 essential frequencies (known). following code creates scenario second time, now uses frequencies my_scenario : succeeds, my_scenario my_scenario_2 contain information:","code":"# Create a minimal scenario (from probabilities): my_scenario <- riskyr(prev = .45,                        sens = .98,                       spec = .46) # Create a minimal scenario (from frequencies): my_scenario_2 <- riskyr(hi = my_scenario$hi,                          mi = my_scenario$mi,                         fa = my_scenario$fa,                         cr = my_scenario$cr) all.equal(my_scenario, my_scenario_2) #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"optional-scenario-information","dir":"Articles","previous_headings":"Getting started > Defining a scenario","what":"Optional scenario information","title":"Quick Start Primer","text":"make various outputs recognizable, many aspects riskyr scenario can described setting optional arguments: scen_lbl specifies label can recognize scenario (e.g., “Identifying reoffenders”). popu_lbl specifies population interest (e.g., “inmates”). cond_lbl specifies condition interest (.e., “reoffending”). cond_true_lbl specifies label condition true (“offends ”). cond_false_lbl specifies label condition false (“offend ”). dec_lbl specifies nature decision, prediction, test (“test result”). dec_pos_lbl specifies positive decision regarding condition (“predict reoffend”). dec_neg_lbl specifies negative decision regarding condition (“predict reoffend”). hi_lbl, mi_lbl, fa_lbl, cr_lbl specify four possible combinations conditions decisions: hit: test predicts inmate reoffends s/(“reoffender found”); miss: test predicts inmate reoffend s/(“reoffender missed”); false alarm: test predicts inmate reoffends s/(“false accusation”; correct rejection: test predicts inmate reoffend s/(“correct release”). Whereas specifying three essential probabilities necessary define valid riskyr scenario, providing N arguments entirely optional. illustrative purposes, create well-specified riskyr scenario:","code":"# Create a scenario with custom labels:  my_scenario <- riskyr(scen_lbl = \"Identifying reoffenders\",                        popu_lbl = \"prison inmates\",                        cond_lbl = \"reoffending\",                       cond_true_lbl = \"reoffends\", cond_false_lbl = \"does not reoffend\",                       dec_lbl = \"test result\",                       dec_pos_lbl = \"predict to\\nreoffend\", dec_neg_lbl = \"predict to\\nnot reoffend\",                       hi_lbl = \"reoffender found\", mi_lbl = \"reoffender missed\",                       fa_lbl = \"false accusation\", cr_lbl = \"correct release\",                       prev = .45,  # prevalence of being a reoffender.                        sens = .98,  # p( will reoffend | offends again )                       spec = .46,  # p( will not reoffend | does not offend again )                       fart =  NA,  # p( will reoffend | does not offend gain )                       N = 753,     # population size                       scen_src = \"(a ficticious example)\")"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"viewing-scenario-information","dir":"Articles","previous_headings":"Getting started > Defining a scenario","what":"Viewing scenario information","title":"Quick Start Primer","text":"simple graph brought information data analyst’s mind device. (…) meat matter can usually set graph. (John W. Tukey)3 always can inspect details my_scenario computing additional metrics studying values summary(my_scenario). anyone regularly works data knows graphs can provide key insights faster different ways written summaries tables. illustrate point, create inspect visualizations scenario.","code":""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"prism-plot","dir":"Articles","previous_headings":"Getting started > Defining a scenario > Viewing scenario information","what":"Prism plot","title":"Quick Start Primer","text":"prism plot (network diagram) shows key frequencies colored boxes corresponding probabilities edges connect boxes. particular version, size boxes fixed. However, can visualize relative size frequencies using area argument show names frequencies (provided text labels) adding f_lbl = \"nam\" argument. save space, show plots , please try see : resulting graph maps frequency size square boxes, makes easier distinguish cases high low frequencies.","code":"plot(my_scenario) plot(my_scenario, area = \"sq\", f_lbl = \"nam\", p_lbl = \"mix\")  # show frequency names plot(my_scenario, area = \"hr\", f_lbl = \"num\", p_lbl = \"num\")  # only numeric labels"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"practice","dir":"Articles","previous_headings":"Getting started > Defining a scenario > Viewing scenario information","what":"Practice","title":"Quick Start Primer","text":"Plot my_scenario option area = \"hr\". see? Add = \"cdac\" another argument plotting call. resulting plot relate previous ones? calling plot(my_scenario), riskyr creates plot type = \"prism\" default: Use ?plot_prism documentation plot_prism() learn try additional arguments.","code":""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"icon-array","dir":"Articles","previous_headings":"Getting started > Defining a scenario > Viewing scenario information","what":"Icon array","title":"Quick Start Primer","text":"icon array displays entire population inmates classified condition (whether reoffend ) decisions (test’s predictions). can use display scenario using plot() function specifying type = \"icons\":  icon array, can easily see roughly half inmates reoffend (see icons dark green dark blue). majority reoffenders classified correctly (shown dark green rather dark blue). John D.? test result predicted reoffend. Depending actual behavior, means either classified “reoffender found” (actually reoffends: dark green icons) “false accusation” (reoffend: light red icons). similar number types icons (skew towards “reoffenders found”), appears chances actually reoffending slightly higher chance. dig deeper dirty details my_scenario, let us look summary(): text output (printed  R’s Console) provides brief description scenario (.e., name, condition decision interest, well type size population), followed range numeric parameters (structured probabilities, frequencies, overall accuracy). present case, interested person’s conditional probability reoffending given positive test result. metric also known positive predictive value (PPV). summary information shows PPV = 0.598. Thus, based information provided, John D.’s probability reoffending  59.8% (quite line visual estimate icon array ):","code":"plot(my_scenario, type = \"icons\") summary(my_scenario) #> Scenario:  Identifying reoffenders  #>  #> Condition:  reoffending  #> Decision:  test result  #> Population:  prison inmates  #> N =  753  #> Source:  (a ficticious example)  #>  #> Probabilities: #>  #>  Essential probabilities: #> prev sens mirt spec fart  #> 0.45 0.98 0.02 0.46 0.54  #>  #>  Other probabilities: #>  ppod   PPV   NPV   FDR   FOR   acc  #> 0.738 0.598 0.966 0.402 0.034 0.694  #>  #> Frequencies: #>  #>  by conditions: #>  cond_true cond_false  #>        339        414  #>  #>  by decision: #> dec_pos dec_neg  #>     556     197  #>  #>  by correspondence (of decision to condition): #> dec_cor dec_err  #>     522     231  #>  #>  4 essential (SDT) frequencies: #>  hi  mi  fa  cr  #> 332   7 224 190  #>  #> Accuracy: #>  #>  acc: #> 0.694"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"alternative-perspectives","dir":"Articles","previous_headings":"Getting started > Defining a scenario","what":"Alternative perspectives","title":"Quick Start Primer","text":"alternative way view scenario frequency tree splits population two subgroups (e.g., two possible results test) classify members population possible combinations decision actual condition, yielding four types frequencies identified (listed hi, mi, fa, cr summary ):  frequency tree also shows us PPV (shown arrow lower left) can computed frequencies (shown boxes): PPV = (number offenders found)/(number people predicted reoffend) (PPV = hi/dec_pos). Numerically, see PPV = 332/556, amounts 60% (1 - 0.403). tree also depicts additional information corresponds summary . instance, wondered negative predictive value (NPV) negative test result (.e., conditional probability offending given test predicted ), tree shows NPV = 190/197 96.4% (NPV = cr/dec_neg). , closely corresponds summary information NPV = 0.966.4 good question ask : extend positive negative predictive values (PPV NPV) depend likelihood reoffending population (.e., condition’s prevalence)? answer , following code allows show conditional probabilities (PPV NPV) function prev (additionally assumes 5%-uncertainty concerning exact parameter values):  , can read current values PPV = 59.76% NPV = 96,56%, also see 5%-uncertainty implies relatively large fluctuations exact numeric values. Importantly, curves also show prevalence value absolutely crucial value PPV NPV. instance, prev dropped , PPV test also considerably lower. fact, PPV NPV always vary 0 1 depending value prev, means specifying actually meaningless corresponding value prev communicated well. (See guide functional perspectives additional information options.) illustrated can create scenario scratch begin inspect ways, can now turn towards loading scenarios contained riskyr package.","code":"plot(my_scenario, type = \"tree\", by = \"dc\")  # plot tree diagram (splitting N by decision) plot(my_scenario, type = \"curve\", uc = .05)"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"using-existing-scenarios","dir":"Articles","previous_headings":"Getting started","what":"Using existing scenarios","title":"Quick Start Primer","text":"defining scenarios can cumbersome literature full existing problems (study -called Bayesian reasoning), riskyr provides set — currently 25) — pre-defined scenarios (stored list scenarios). following table provides first overview scenarios available, including relevant condition, population size N, basic probability information: following, show can select explore scenarios.","code":""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"selecting-a-scenario","dir":"Articles","previous_headings":"Getting started > Using existing scenarios","what":"1. Selecting a scenario","title":"Quick Start Primer","text":"Let us assume want learn controversy surrounding screening procedures prostate-cancer (known PSA screening). Scenario 21 collection scenarios article topic (Arkes & Gaissmaier, 2012). select particular scenario, simply assign R object. instance, can assign Scenario 10 (.e., scenarios$n10)  R object s10:","code":"s10 <- scenarios$n10  # assign pre-defined Scenario 10 to s10."},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"printing-scenario-information","dir":"Articles","previous_headings":"Getting started > Using existing scenarios","what":"2. Printing scenario information","title":"Quick Start Primer","text":"scenario stored list, different aspects scenario can printed element names: description scenario can printed inspecting s10$scen.txt: explained , overview main parameters scenario provided summary(): Note — particular population — prevalence condition (Prostate cancer) assumed relatively high (value 50%).","code":"# Show basic scenario information:  s10$scen_lbl  # shows descriptive label: #> [1] \"PSA test (patients)\" s10$cond_lbl  # shows current condition: #> [1] \"Prostate cancer\" s10$dec_lbl   # shows current decision: #> [1] \"PSA-Test\" s10$popu_lbl  # shows current population: #> [1] \"Male patients with symptoms\" s10$scen_apa  # shows current source:  #> [1] \"Arkes, H. R., & Gaissmaier, W. (2012). Psychological research and the prostate-cancer screening controversy. Psychological Science, 23(6), 547--553.\" With a cutoff point of 4 ng/ml, the PSA test is reported to have a sensitivity of approximately 21% and a specificity of approximately 94% (Thompson et al., 2005).  That means the PSA test will correctly classify 21% of the men with prostate cancer and 94% of the men who do not have prostate cancer.  Conversely, the test will miss about 79% of the men who actually have prostate cancer, and raise a false alarm in 6% of the men who actually do not have prostate cancer. Suppose that this test is given to 1,000 patients at a urology clinic who have symptoms diagnostic of prostate cancer.  Perhaps 50% of these men truly have prostate cancer. Table 1 depicts this situation.  Of the 135 men who test positive, 105 actually have prostate cancer.  Thus, the positive predictive value of the PSA test in this situation is approximately 78% (i.e., 105/135 _ 100). summary(s10) # summarizes key scenario information: #> Scenario:  PSA test (patients)  #>  #> Condition:  Prostate cancer  #> Decision:  PSA-Test  #> Population:  Male patients with symptoms  #> N =  1000  #> Source:  Arkes & Gaissmaier (2012), p. 550  #>  #> Probabilities: #>  #>  Essential probabilities: #> prev sens mirt spec fart  #> 0.50 0.21 0.79 0.94 0.06  #>  #>  Other probabilities: #>  ppod   PPV   NPV   FDR   FOR   acc  #> 0.135 0.778 0.543 0.222 0.457 0.575  #>  #> Frequencies: #>  #>  by conditions: #>  cond_true cond_false  #>        500        500  #>  #>  by decision: #> dec_pos dec_neg  #>     135     865  #>  #>  by correspondence (of decision to condition): #> dec_cor dec_err  #>     575     425  #>  #>  4 essential (SDT) frequencies: #>  hi  mi  fa  cr  #> 105 395  30 470  #>  #> Accuracy: #>  #>  acc: #> 0.575"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"visualizing-frequencies-and-probabilities","dir":"Articles","previous_headings":"Getting started > Using existing scenarios","what":"3. Visualizing frequencies and probabilities","title":"Quick Start Primer","text":"eyeball basic scenario information, can visualize many different ways. save space, show plots , please try see : initial inspections reveal overall accuracy decision considered (PSA test (patients)) great: almost many cases incorrect classifications (shown blue) correct ones (shown green). fact, summary icon array note overall accuracy test  57.5%. Given green squares signal correct classifications blue squares signal incorrect classifications, immediately obvious main issue accuracy consists -called misses: Patients cancer remain undetected (marked “FN” denoted icons lighter blue). Next, another prism diagram, illuminate interplay probabilities frequencies scenario:  variant prism plot shows probability values key condition decision parameters split assumed population N = 1000 patients subgroups correspond 9 frequencies (also listed summary). Calling command optional argument p_lbl = \"nam\" print probability names, rather values (see also options p_lbl = \"min\" \"mix\".) middle row boxes shows four essential frequencies (hits hi, misses mi, false alarms fa, correct rejections cr) colors corresponding icon array . Setting area = \"hr\" plot command switched default display (rectangular boxes) version frequency boxes level network shown horizontal rectangles (hence hr) box widths scaled add population width N level. Thus, relative width box illustrates frequency corresponding cases, making easy spot locations paths many cases. fact obvious icon array — shown lower half prism plot — current scenario yields mostly negative decisions (865  1000,  86.5%). negative decisions, 470 (54.34%) correct (see cr shown light green) 395 (45.66%) incorrect (see mi shown dark red). ratio cr/dec_neg = 470/865 = 54.34% indicates negative predictive value (NPV) test.","code":"plot(s10, type = \"tab\")                   # plot 2x2 table  plot(s10, type = \"icons\", cex_lbl = .75)  # plot an icon array  plot(s10, type = \"prism\", area = \"sq\")    # plot a network/prism diagram plot(s10, type = \"area\")                  # plot an area plot plot(s10, type = \"bar\", dir = 2)          # plot a bar chart plot(s10,       by = \"cddc\",      # perspective: upper half by condition, lower half by decision       area = \"hr\",      # frequency boxes as horizontal rectangles (scaled to N)      p_lbl = \"num\")    # probability labels: numeric only"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"practice-1","dir":"Articles","previous_headings":"Getting started > Using existing scenarios > 3. Visualizing frequencies and probabilities","what":"Practice","title":"Quick Start Primer","text":"Can find current positive predictive value (PPV) diagram? (Hint: value marks arrow two boxes, also shown margin contained summary .) Re-create prism plot s10 different perspectives (e.g., = \"cdac\") different area settings (e.g., area = \"sq\", see “?plot_prism” options available). instance, following commands plot:","code":"plot(s10, by = \"cdac\", area = \"sq\") plot(s10, by = \"ac\", area = \"hr\")"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"visualizing-probabilistic-relationships","dir":"Articles","previous_headings":"Getting started > Using existing scenarios","what":"4. Visualizing probabilistic relationships","title":"Quick Start Primer","text":"One way understand relations basic probabilities — like prevalence prev, depend decision, environmental probability condition (: “Prostate cancer”) — probabilities conditional condition features decision (like PPV  NPV) plot latter function former. Calling type = \"curve\" us. save space, show plots , please try see : additional argument = \"\" instructed riskyr provide us additional curves, corresponding percentage positive decisions (ppod) overall accuracy (acc). Just like PPV  NPV, values metrics crucially depend value current prevalence (shown x-axis) current range uncertainty (shown shaded polygons around curves). Interestingly, curves ppod acc appear linear, even though riskyr function plots exactly way  PPV  NPV. predicted without seeing ?","code":"plot(s10, type = \"curve\",       what = \"all\",  # plot \"all\" available curves       uc = .05)      # with a 5%-uncertainty range"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"practice-2","dir":"Articles","previous_headings":"Getting started > Using existing scenarios > 4. Visualizing probabilistic relationships","what":"Practice","title":"Quick Start Primer","text":"Explain line  acc intersects curve  PPV point point curve  NPV. curves shown  PPV  NPV far illustrate dependence prevalence (prev), can also ask: conditional probabilities vary function decisions sensitivity (sens) specificity (spec)? provide visual answer question, plot 3D planes (.e., functions sens spec, given value prev) following commands:5  comparison shows curves  PPV  NPV (created type = \"curve\" ) two infinite number possible intersections two planes (created type = \"plane\" ). Consequently, current values PPV NPV (shown yellow points planes) crucially depend condition’s prevalence (prev), sensitivity (sens), specificity (spec). retrospect, dependencies make clear hard provide answer seemingly simple question: ’s probability condition testing positive negative ? riskyr simplify issue, hope convinced helps compute, transform, see relationships immediately obvious mathematical definitions underlying concepts. feel improves understanding, came little closer goal rendering risk literacy transparent.","code":"## Plot plane of PPV and NPV as functions of sens and spec (for given prev):  plot(s10, type = \"plane\", what = \"PPV\", cex_lbl = .7)  # PPV by sens x spec (fixed prev) plot(s10, type = \"plane\", what = \"NPV\", cex_lbl = .7)  # NPV by sens x spec (fixed prev)"},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"practice-3","dir":"Articles","previous_headings":"Getting started > Using existing scenarios > 4. Visualizing probabilistic relationships","what":"Practice","title":"Quick Start Primer","text":"Scenario 9 riskyr collection scenarios contains version situation assumes different population (lower prevalence value condition). Inspect explore consequence change following steps  s9  s10 . first steps: Now re-plots ( s10 ), note changes  s9  s10. Importantly, properties test identical scenarios — population (.e., prevalence condition) changed.","code":"# Select Scenario 9:  s9 <- scenarios$n9  # assign pre-defined Scenario 9 to s9.   # Basic scenario information:  s9$scen_lbl  # shows descriptive label: #> [1] \"PSA test (baseline)\" s9$popu_lbl  # shows current population: #> [1] \"Males (general population)\""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"conclusion","dir":"Articles","previous_headings":"Getting started","what":"Conclusion","title":"Quick Start Primer","text":"introduction gets started using riskyr (see Neth et al., 2021, additional details). fun exploring provided examples creating scenarios!","code":""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Quick Start Primer","text":"Arkes, H. R., & Gaissmaier, W. (2012). Psychological research prostate-cancer screening controversy. Psychological Science, 23, 547–553. Dressel, J., & Farid, H. (2018). accuracy, fairness, limits predicting recidivism. Science Advances, 4, eaao5580. Neth, H., Gradwohl, N., Streeb, D., Keim, D.., & Gaissmaier, W. (2021). Perspectives 2x2 matrix: Solving semantically distinct problems based shared structure binary contingencies. Frontiers Psychology, 11, 567817. doi: 10.3389/fpsyg.2020.567817 (Available online)","code":""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"resources","dir":"Articles","previous_headings":"References","what":"Resources","title":"Quick Start Primer","text":"following resources versions currently available:","code":""},{"path":"https://hneth.github.io/riskyr/articles/E_riskyr_primer.html","id":"contact","dir":"Articles","previous_headings":"","what":"Contact","title":"Quick Start Primer","text":"appreciate feedback, comments, questions. Please report riskyr-related issues https://github.com/hneth/riskyr/issues/. Contact us contact.riskyr@gmail.com comments, questions, suggestions.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hansjoerg Neth. Author, maintainer. Felix Gaisbauer. Author. Nico Gradwohl. Author. Wolfgang Gaissmaier. Author.","code":""},{"path":"https://hneth.github.io/riskyr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Neth, H., Gaisbauer, F., Gradwohl, N., & Gaissmaier, W. (2025). riskyr: Rendering Risk Literacy Transparent. Social Psychology Decision Sciences, University Konstanz, Germany. Computer software (R package version 0.5.0, Sep 15, 2025). Retrieved <https://CRAN.R-project.org/package=riskyr>. doi <https://doi.org/10.32614/CRAN.package.riskyr>","code":"@Manual{,   title = {riskyr: Rendering risk literacy more transparent},   author = {Hansjoerg Neth and Gaisbauer Felix and Gradwohl Nico and Gaissmaier Wolfgang},   year = {2025},   organization = {Social Psychology and Decision Sciences, University of Konstanz},   address = {Konstanz, Germany},   note = {R package (version 0.5.0, Sep 15, 2025)},   url = {https://CRAN.R-project.org/package=riskyr},   doi = {10.32614/CRAN.package.riskyr}, }"},{"path":[]},{"path":"https://hneth.github.io/riskyr/index.html","id":"a-toolbox-for-rendering-risk-literacy-more-transparent","dir":"","previous_headings":"","what":"A toolbox for rendering risk literacy more transparent","title":"Rendering Risk Literacy more Transparent","text":"Risk-related information — like prevalence conditions, sensitivity specificity diagnostic tests, effectiveness interventions treatments — can expressed terms frequencies probabilities. providing toolbox corresponding metrics representations, riskyr computes, translates, visualizes risk-related information variety ways. Adopting multiple complementary perspectives provides insights interplay key parameters renders teaching training programs risk literacy transparent (see Neth et al., 2021, details).","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Rendering Risk Literacy more Transparent","text":"Solving problem simply means representing  make solution transparent. (H.. Simon)1 goals riskyr less computational representational nature: express risk-related information multiple formats, facilitate translation , provide variety attractive visualizations emphasize different aspects risk-related scenarios (see Neth et al., 2021, theoretical details). Whereas people find difficult understand compute information expressed terms probabilities, information easier understand compute expressed terms frequencies (e.g., Gigerenzer, 2002, 2014; Gigerenzer & Hoffrage, 1995). rather just expressing probabilities terms frequencies, riskyr allows translating formats illustrates relationships different representations variety ways. Switching interacting different representations fosters transparency boosts human understanding risk-related information.2 basic assumptions aspirations driving current development riskyr include: Effective training risk literacy requires transparent representations, smart strategies, simple tools. aim provide set (computational representational) functions facilitate various calculations, translations formats, enable range alternative views interplay probabilities frequencies. Just single tool fits tasks, single graph illustrates aspects problem. variety visualizations illustrate interplay parameters metrics can facilitate active explorative learning. particularly helpful view relationships alternative perspectives observe change one parameter function others. Based assumptions goals, riskyr provides range computational representational tools. Importantly, objects functions riskyr toolbox isolated, complement, explain, support . functions visualizations can used separately explored interactively, providing immediate feedback effect changes parameter values. providing variety customization options, users can explore design representations risk-related information fit different tasks meet personal needs goals.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/index.html","id":"installation","dir":"","previous_headings":"Getting riskyr","what":"Installation","title":"Rendering Risk Literacy more Transparent","text":"current release riskyr available CRAN https://CRAN.R-project.org/package=riskyr: current development version can installed GitHub repository https://github.com/hneth/riskyr/:","code":"install.packages('riskyr')  # install riskyr from CRAN client library('riskyr')           # load to use the package # install.packages('devtools') devtools::install_github('hneth/riskyr')"},{"path":"https://hneth.github.io/riskyr/index.html","id":"available-resources","dir":"","previous_headings":"Getting riskyr","what":"Available resources","title":"Rendering Risk Literacy more Transparent","text":"interactive online version available https://riskyr.org/. package documentation available online: current release version: https://hneth.github.io/riskyr/ current development version: https://hneth.github.io/riskyr/dev/","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/index.html","id":"defining-a-scenario","dir":"","previous_headings":"Quick start guide","what":"Defining a scenario","title":"Rendering Risk Literacy more Transparent","text":"riskyr designed address problems like following:3 Screening hustosis screening device detecting clinical condition hustosis developed. current device good, perfect. following information: 1. 4% people general population suffer hustosis. 2. someone suffers hustosis, chance 80% test positively condition. 3. someone free hustosis, chance 5% still test positively condition. Mr. Ms. Smith screened device: - Mr. Smith tested positively (.e., received diagnosis hustosis). - Ms. Smith tested negatively (.e., judged free hustosis). Please answer following questions: - probability Mr. Smith actually suffers hustosis? - probability Ms. Smith actually free hustosis?","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"probabilities-provided","dir":"","previous_headings":"Quick start guide > Defining a scenario","what":"Probabilities provided","title":"Rendering Risk Literacy more Transparent","text":"first challenge solving problems understanding information provided. problem description provides three essential probabilities: condition’s prevalence (general population) 4%: prev = .04. device’s diagnostic decision’s sensitivity 80%: sens = .80. device’s diagnostic decision’s false alarm rate 5%: fart = .05, implying specificity (100% −- 5%) = 95%: spec = .95.","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"understanding-the-questions-asked","dir":"","previous_headings":"Quick start guide > Defining a scenario","what":"Understanding the questions asked","title":"Rendering Risk Literacy more Transparent","text":"second challenge lies understanding questions asked — realizing answers simply decision’s sensitivity specificity values. Instead, asked provide two conditional probabilities: conditional probability suffering condition given positive test result, aka. positive predictive value (PPV). conditional probability free condition given negative test result, aka. negative predictive value (NPV).","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"translating-into-frequencies","dir":"","previous_headings":"Quick start guide > Defining a scenario","what":"Translating into frequencies","title":"Rendering Risk Literacy more Transparent","text":"One best tricks risk literacy education translate probabilistic information frequencies.4 , imagine representative sample N = 1000 individuals. Rather asking probabilities Mr. Ms. Smith, re-frame questions : Assuming representative sample 1000 individuals: - proportion individuals positive test result actually suffer hustosis? - proportion individuals negative test result actually free hustosis?","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"using-riskyr","dir":"","previous_headings":"Quick start guide > Defining a scenario","what":"Using riskyr","title":"Rendering Risk Literacy more Transparent","text":"riskyr allows view solve problems:","code":"library(riskyr)  # loads the package"},{"path":"https://hneth.github.io/riskyr/index.html","id":"creating-a-scenario-from-probabilities","dir":"","previous_headings":"Quick start guide > Defining a scenario","what":"Creating a scenario from probabilities","title":"Rendering Risk Literacy more Transparent","text":"define new riskyr scenario (called hustosis) using riskyr() function entering information provided problem arguments: providing argument N = 1000 define scenario target population 1000 people. leave parameter unspecified (NA), riskyr() function automatically pick suitable value N.","code":"hustosis <- riskyr(scen_lbl = \"Example\",                     cond_lbl = \"Hustosis\",                    dec_lbl = \"Screening\",                    popu_lbl = \"Sample\",                     N = 1000,  # population size                    prev = .04, sens = .80, spec = (1 - .05)  # 3 probabilities                    )"},{"path":"https://hneth.github.io/riskyr/index.html","id":"summary","dir":"","previous_headings":"Quick start guide > Defining a scenario","what":"Summary","title":"Rendering Risk Literacy more Transparent","text":"obtain quick overview key parameter values, ask summary hustosis: summary distinguishes probabilities, frequencies, accuracy information. Probabilities find answer questions take account information provided : conditional probability Mr. Smith actually suffers hustosis given positive test result 40% (PPV = 0.400). conditional probability Ms. Smith actually free hustosis given negative test result 99.1% (NPV = 0.991). find answers surprising, ideal candidate additional insights realm risk literacy. key component riskyr analyze view scenario variety different perspectives. get started immediately, illustrate introductory commands focus different types visualizations. (Call riskyr.guide() various vignettes provide detailed information.)","code":"summary(hustosis)  # summarizes key parameter values:"},{"path":"https://hneth.github.io/riskyr/index.html","id":"creating-a-scenario-from-frequencies","dir":"","previous_headings":"Quick start guide > Defining a scenario","what":"Creating a scenario from frequencies","title":"Rendering Risk Literacy more Transparent","text":"Rather defining hustosis scenario providing 3 essential probabilities (prev, sens, spec), define scenario providing 4 essential frequencies (hi, mi, fa, cr) follows: took values frequencies summary hustosis, hustosis_2 scenario contain exactly information hustosis:","code":"hustosis_2 <- riskyr(scen_lbl = \"Example\",                       cond_lbl = \"Hustosis\",                      dec_lbl = \"Screening\",                      popu_lbl = \"Sample\",                       hi = 32, mi = 8, fa = 48, cr = 912  # 4 key frequencies                      ) all.equal(hustosis, hustosis_2)  # do both contain the same information?  #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/index.html","id":"visualizations","dir":"","previous_headings":"Quick start guide","what":"Visualizations","title":"Rendering Risk Literacy more Transparent","text":"Various visualizations riskyr scenarios can created range plotting functions.","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"prism-plot","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Prism plot","title":"Rendering Risk Literacy more Transparent","text":"default type plot used riskyr prism plot (network diagram) shows key frequencies scenario nodes key probabilities edges linking nodes: Prism plot","code":"plot(hustosis)  # default plot  # => internally calls plot_prism(...) with many additional arguments: # plot(hustosis, type = \"prism\", by = \"cddc\", area = \"no\", f_lbl = \"num\", p_lbl = \"mix\")"},{"path":"https://hneth.github.io/riskyr/index.html","id":"tree-diagram","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Tree diagram","title":"Rendering Risk Literacy more Transparent","text":"tree diagram upper half prism plot, can obtained plotting scenario 1 3 perspectives: condition (= \"cd\"), split population TRUE vs. FALSE (cond_true vs. cond_false) cases; decision (= \"dc\"), split population negative vs. positive (dec_neg vs. dec_pos) decisions; accuracy (= \"ac\"), split population correct vs. incorrect (dec_cor vs. dec_err) decisions. instance, following command plots frequency tree decisions: Tree diagram particular tree splits population N = 1000 individuals two subgroups decision (= \"dc\") contains answer second (frequency) version questions: proportion individuals positive test result actually suffer hustosis frequency “true positive” cases (shown darker green) divided “decision positive” cases (shown purple): 32/80 = .400 (corresponding value PPV ). proportion individuals negative test result actually free hustosis frequency “true negative” cases (shown lighter green) divided “decision negative” cases (shown blue): 912/920 = .991 (corresponding value NPV , except minimal differences due rounding). course, frequencies ratios already contained hustosis summary . representation form tree diagram makes easier understand decomposition population subgroups see frequencies required answer particular question.","code":"plot(hustosis, by = \"dc\")  # plot a tree diagram (by decision)"},{"path":"https://hneth.github.io/riskyr/index.html","id":"frequency-net","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Frequency net","title":"Rendering Risk Literacy more Transparent","text":"new type visualization combines elements 2x2 tables tree double tree diagrams. frequency net (Binder et al., 2020) similar 2x2 table insofar perspectives (shown arranging marginal frequencies vertical vs. horizontal fashion) suggest order dependency (contrast trees mosaic plots). Additionally, frequency net allows showing 3 kinds (marginal, conditional, joint) probabilities: Frequency net See plot_fnet() function options details.","code":"plot(hustosis, type = \"fnet\", by = \"cddc\",      f_lbl = \"namnum\")  # plot frequency net"},{"path":"https://hneth.github.io/riskyr/index.html","id":"icon-array","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Icon array","title":"Rendering Risk Literacy more Transparent","text":"icon array shows classification result N = 1000 individuals population: Icon array particular icon array highly regular (icons classification types ordered), riskyr provides many different versions type graph. allows viewing probability diagnostic outcomes either frequency, area, density (see ?plot_icons details examples).","code":"plot(hustosis, type = \"icons\")   # plot an icon array"},{"path":"https://hneth.github.io/riskyr/index.html","id":"area-plot","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Area plot","title":"Rendering Risk Literacy more Transparent","text":"area plot (mosaic plot) offers way expressing classification results relationship areas. , entire population represented square probability subgroups size rectangles (see ?plot_area details examples): Area/mosaic plot","code":"plot(hustosis, type = \"area\")  # plot an area/mosaic plot (by = \"cddc\")"},{"path":"https://hneth.github.io/riskyr/index.html","id":"table-plot","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Table plot","title":"Rendering Risk Literacy more Transparent","text":"scaling size rectangles relative frequencies probabilities, can plot basic scenario information 2--2 confusion (contingency) table (see ?plot_tab details examples): Table plot","code":"plot(hustosis, type = \"table\")  # plot 2x2 confusion table (by = \"cddc\")"},{"path":"https://hneth.github.io/riskyr/index.html","id":"bar-plot","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Bar plot","title":"Rendering Risk Literacy more Transparent","text":"bar plot allows comparing relative frequencies heights bars (see ?plot_bar details examples): Bar plot","code":"plot(hustosis, type = \"bar\", f_lbl = \"abb\")  # plot bar chart (by \"all\" perspectives):"},{"path":"https://hneth.github.io/riskyr/index.html","id":"curves","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Curves","title":"Rendering Risk Literacy more Transparent","text":"adopting functional perspective, can ask values probabilities (e.g., predictive values PPV NPV) change function another (e.g., condition’s prevalence prev, see ?plot_curve details examples): Probability curves","code":"plot(hustosis, type = \"curve\", uc = .05)   # plot probability curves (by prevalence):"},{"path":"https://hneth.github.io/riskyr/index.html","id":"planes","dir":"","previous_headings":"Quick start guide > Visualizations","what":"Planes","title":"Rendering Risk Literacy more Transparent","text":"parameter values systematically depend two parameters, can plot plane 3D cube. following graph plots PPV function sensitivity (sens) specificity (spec) test given prevalence (prev, see ?plot_plane details examples): Probability plane L-shape plane reveals real problem current test: Given prevalence 4% hustosis target population, PPV remains low majority possible range sensitivity specificity values. achieve high PPV, key requirement test extremely high specificity. Although current specificity value 95% (spec = .95) may sound pretty good, still high enough yield PPV beyond 40%.","code":"plot(hustosis, type = \"plane\")  # plot probability plane (by sens x spec):"},{"path":"https://hneth.github.io/riskyr/index.html","id":"using-existing-scenarios","dir":"","previous_headings":"Quick start guide","what":"Using existing scenarios","title":"Rendering Risk Literacy more Transparent","text":"defining scenarios can cumbersome literature full risk-related problems (often referred “Bayesian reasoning”), riskyr provides set — currently 24 — pre-defined scenarios (stored list scenarios). , provide example shows can select explore .","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"selecting-a-scenario","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Selecting a scenario","title":"Rendering Risk Literacy more Transparent","text":"Let us assume want learn controversy surrounding screening procedures prostate-cancer (known PSA screening). Scenario 10 collection scenarios article topic (Arkes & Gaissmaier, 2012). select particular scenario, simply assign R object. instance, can assign Scenario 10 s10:","code":"s10 <- scenarios$n10  # assign pre-defined Scenario 10 to s10"},{"path":"https://hneth.github.io/riskyr/index.html","id":"scenario-summary","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Scenario summary","title":"Rendering Risk Literacy more Transparent","text":"selected scenario object s10 list 30 elements, describe text numeric variables. following commands provide overview s10 text form: Generating riskyr plots allows quick visual exploration scenario. illustrate selected plots options , trust play explore rest .","code":"s10$scen_lbl   # a descriptive label s10$cond_lbl   # the current condition s10$dec_lbl    # the current decision s10$popu_lbl   # the current population  # summary(s10) # summarizes a scenario"},{"path":"https://hneth.github.io/riskyr/index.html","id":"prism-plots","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Prism plots","title":"Rendering Risk Literacy more Transparent","text":"tree diagram prism plot views population one perspective, provides quick overview. following plot, boxes depicted squares area sizes scaled relative frequencies (using area = \"sq\" argument): Prism/tree plot (scaled squares) prism plot (network diagram) combines 2 tree diagrams simultaneously provide two perspectives population (see Wassner et al., 2004). riskyr provides several variants prism plots. avoid redundancy previous tree diagram, following version splits population accuracy decision (see = \"acdc\" argument). addition, frequencies represented horizontal rectangles (area = \"hr\") relative width reflect number people corresponding subgroup: Prism plot (scaled horizontal rectangles)","code":"plot(s10, type = \"tree\", by = \"cd\", area = \"sq\",  # tree/prism plot with scaled squares       f_lbl = \"def\", f_lbl_sep = \":\\n\")            # custom frequency labels plot(s10, type = \"prism\", by = \"acdc\", area = \"hr\",  # prism plot with horizontal rectangles      p_lbl = \"num\")                                  # numeric probability labels"},{"path":"https://hneth.github.io/riskyr/index.html","id":"frequency-net-1","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Frequency net","title":"Rendering Risk Literacy more Transparent","text":"Just like 2x2 table, area plot, prism plot, frequency net allows selecting two three perspectives. Additionally, shape size frequency boxes can adjusted using area = \"sq\" option. following example shows frequency net condition accuracy (= \"cdac\") without joint probabilities, custom settings labels, links, colors: Frequency net (custom perspective options)","code":"plot(s10, type = \"fnet\", by = \"cdac\",  # frequency net (by condition and accuracy)       area = \"sq\", joint_p = FALSE, arr_c = 2,     # custom areas, links, and arrows       f_lbl = \"namnum\", p_lbl = \"num\", col_pal = pal_rgb) # custom labels and colors"},{"path":"https://hneth.github.io/riskyr/index.html","id":"icon-array-1","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Icon array","title":"Rendering Risk Literacy more Transparent","text":"","code":"plot(s10, type = \"icons\", arr_type = \"shuffled\")   # plot a shuffled icon array"},{"path":"https://hneth.github.io/riskyr/index.html","id":"area-plot-1","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Area plot","title":"Rendering Risk Literacy more Transparent","text":"","code":"plot(s10, type = \"area\", p_split = \"v\", p_lbl = \"def\")  # plot an area/mosaic plot (with probabilities)"},{"path":"https://hneth.github.io/riskyr/index.html","id":"table-plot-1","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Table plot","title":"Rendering Risk Literacy more Transparent","text":"","code":"plot(s10, type = \"tab\", p_split = \"h\", p_lbl = \"def\")  # plot a 2x2 table (with probabilities)"},{"path":"https://hneth.github.io/riskyr/index.html","id":"curves-1","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Curves","title":"Rendering Risk Literacy more Transparent","text":"following curves show values several conditional probabilities function prevalence: Adding argument = \"\" also shows proportion positive decisions (ppod) decision’s overall accuracy (accu) function prevalence (prev). predicted shape without seeing graph?","code":"plot(s10, type = \"curve\", what = \"all\", uc = .05)  # plot all curves (by prev):"},{"path":"https://hneth.github.io/riskyr/index.html","id":"planes-1","dir":"","previous_headings":"Quick start guide > Using existing scenarios","what":"Planes","title":"Rendering Risk Literacy more Transparent","text":"following surface shows negative predictive value (NPV) function sensitivity specificity (given prevalence): Hopefully, brief overview managed whet appetite visual exploration. , call riskyr.guide() viewing package vignettes obtaining additional information.","code":"plot(s10, type = \"plane\", what = \"NPV\")  # plot plane (as a function of sens x spec):"},{"path":"https://hneth.github.io/riskyr/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Rendering Risk Literacy more Transparent","text":"riskyr originated series lectures workshops risk literacy. current version (0.5.0, Sep 15, 2025) active development. primary designers Hansjörg Neth, Felix Gaisbauer, Nico Gradwohl, Wolfgang Gaissmaier, researchers department Social Psychology Decision Sciences University Konstanz, Germany. riskyr package open source software written R released GPL 2 | GPL 3 licenses. theoretical background riskyr illuminated following article: Neth, H., Gradwohl, N., Streeb, D., Keim, D.., & Gaissmaier, W. (2021). Perspectives 2x2 matrix: Solving semantically distinct problems based shared structure binary contingencies. Frontiers Psychology: Cognition, 11, 567817. doi: 10.3389/fpsyg.2020.567817","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"resources","dir":"","previous_headings":"About","what":"Resources","title":"Rendering Risk Literacy more Transparent","text":"following resources versions currently available:","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"contact","dir":"","previous_headings":"About","what":"Contact","title":"Rendering Risk Literacy more Transparent","text":"appreciate feedback, comments, questions. Please report riskyr-related issues https://github.com/hneth/riskyr/issues/. Contact us contact.riskyr@gmail.com comments, questions, suggestions.","code":""},{"path":"https://hneth.github.io/riskyr/index.html","id":"reference","dir":"","previous_headings":"About","what":"Reference","title":"Rendering Risk Literacy more Transparent","text":"cite riskyr derivations publications, please use: Neth, H., Gaisbauer, F., Gradwohl, N., & Gaissmaier, W. (2025). riskyr: Rendering Risk Literacy Transparent. Social Psychology Decision Sciences, University Konstanz, Germany. Computer software (R package version 0.5.0, Sep 15, 2025). Retrieved https://CRAN.R-project.org/package=riskyr. BibTeX entry LaTeX users : Calling citation(\"riskyr\") package also provides information.","code":"@Manual{riskyr,   title = {riskyr: Rendering Risk Literacy more Transparent},   author = {Hansjörg Neth and Felix Gaisbauer and Nico Gradwohl and Wolfgang Gaissmaier},   year = {2025},   organization = {Social Psychology and Decision Sciences, University of Konstanz},   address = {Konstanz, Germany},   note = {R package (version 0.5.0, Sep 15, 2025)},   url = {https://CRAN.R-project.org/package=riskyr},   }"},{"path":"https://hneth.github.io/riskyr/index.html","id":"references","dir":"","previous_headings":"About","what":"References","title":"Rendering Risk Literacy more Transparent","text":"Arkes, H. R., & Gaissmaier, W. (2012). Psychological research prostate-cancer screening controversy. Psychological Science, 23, 547–553. Binder, K., Krauss, S., Wiesner, P. (2020). new visualization probabilistic situations containing two binary events: frequency net. Frontiers Psychology, 11, 750. doi: 10.3389/fpsyg.2020.00750 Garcia-Retamero, R., & Cokely, E. T. (2017). Designing visual aids promote risk literacy: systematic review health research evidence-based design heuristics. Human Factors, 59, 582–627. Gigerenzer, G. (2002). Reckoning risk: Learning live uncertainty. London, UK: Penguin. Gigerenzer, G. (2014). Risk savvy: make good decisions. New York, NY: Penguin. Gigerenzer, G., & Gaissmaier, W. (2011). Heuristic decision making. Annual Review Psychology, 62, 451–482. (Available online) Gigerenzer, G., Gaissmaier, W., Kurz-Milcke, E., Schwartz, L., & Woloshin, S. (2007). Helping doctors patients make sense health statistics. Psychological Science Public Interest, 8, 53–96. (Available online) Gigerenzer, G., & Hoffrage, U. (1995). improve Bayesian reasoning without instruction: Frequency formats. Psychological Review, 102, 684–704. Hoffrage, U., Gigerenzer, G., Krauss, S., & Martignon, L. (2002). Representation facilitates reasoning: natural frequencies . Cognition, 84, 343–352. Hoffrage, U., Krauss, S., Martignon, L., & Gigerenzer, G. (2015). Natural frequencies improve Bayesian reasoning simple complex inference tasks. Frontiers Psychology, 6, 1473. doi: 10.3389/fpsyg.2015.01473 (Available online) Hoffrage, U., Lindsey, S., Hertwig, R., & Gigerenzer, G. (2000). Communicating statistical information. Science, 290, 2261–2262. Khan, ., Breslav, S., Glueck, M., & Hornbæk, K. (2015). Benefits visualization mammography problem. International Journal Human-Computer Studies, 83, 94–113. Kurzenhäuser, S., & Hoffrage, U. (2002). Teaching Bayesian reasoning: evaluation classroom tutorial medical students. Medical Teacher, 24, 516–521. Kurz-Milcke, E., Gigerenzer, G., & Martignon, L. (2008). Transparency risk communication. Annals New York Academy Sciences, 1128, 18–28. Micallef, L., Dragicevic, P., & Fekete, J.-D. (2012). Assessing effect visualizations Bayesian reasoning crowd-sourcing. IEEE Transactions Visualization Computer Graphics, 18, 2536–2545. Neth, H., & Gigerenzer, G. (2015). Heuristics: Tools uncertain world. R. Scott & S. Kosslyn (Eds.), Emerging trends social behavioral sciences. New York, NY: Wiley Online Library. doi: 10.1002/9781118900772.etrds0394 (Available online) Neth, H., Gradwohl, N., Streeb, D., Keim, D.., & Gaissmaier, W. (2021). Perspectives 2x2 matrix: Solving semantically distinct problems based shared structure binary contingencies. Frontiers Psychology, 11, 567817. doi: 10.3389/fpsyg.2020.567817 (Available online) Sedlmeier, P., & Gigerenzer, G. (2001). Teaching Bayesian reasoning less two hours. Journal Experimental Psychology: General, 130, 380–400. Wassner, C., Martignon, L., & Biehler, R. (2004). Bayesianisches Denken der Schule. Unterrichtswissenschaft, 32, 58–96. [README.Rmd updated 2025-09-15 hn.]","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA1.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1","title":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1","text":"BRCA1 provides cumulative risk breast cancer population women BRCA1 mutation function age (years).","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1","text":"","code":"BRCA1"},{"path":"https://hneth.github.io/riskyr/reference/BRCA1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1","text":"data frame (11 x 2). x: age (years). y: cumulative risk developing breast cancer (BRCA1) population.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/BRCA1_mam.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1_mam","title":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1_mam","text":"BRCA1_mam provides cumulative risk breast cancer population women BRCA1 mutation function age (years).","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA1_mam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1_mam","text":"","code":"BRCA1_mam"},{"path":"https://hneth.github.io/riskyr/reference/BRCA1_mam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1_mam","text":"data frame (63 x 2). age: age (years). cumRisk: cumulative risk developing breast cancer (BRCA1) population.","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA1_mam.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cumulative risk of breast cancer in women with the BRCA1 mutation. — BRCA1_mam","text":"Based Figure 2 (p. 2408) Kuchenbaecker, K. B., Hopper, J. L., Barnes, D. R., Phillips, K. ., Mooij, T. M., Roos-Blom, M. J., ... & BRCA1 BRCA2 Cohort Consortium (2017). Risks breast, ovarian, contralateral breast cancer BRCA1 BRCA2 mutation carriers. JAMA, 317 (23), 2402–2416. doi: 10.1001/jama.2017.7112","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/BRCA1_ova.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk of ovarian cancer in women with the BRCA1 mutation. — BRCA1_ova","title":"Cumulative risk of ovarian cancer in women with the BRCA1 mutation. — BRCA1_ova","text":"BRCA1_ova provides cumulative risk ovarian cancer population women BRCA1 mutation function age (years).","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA1_ova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk of ovarian cancer in women with the BRCA1 mutation. — BRCA1_ova","text":"","code":"BRCA1_ova"},{"path":"https://hneth.github.io/riskyr/reference/BRCA1_ova.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk of ovarian cancer in women with the BRCA1 mutation. — BRCA1_ova","text":"data frame (63 x 2). age: age (years). cumRisk: cumulative risk developing ovarian cancer (BRCA1) population.","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA1_ova.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cumulative risk of ovarian cancer in women with the BRCA1 mutation. — BRCA1_ova","text":"Based Figure 2 (p. 2408) Kuchenbaecker, K. B., Hopper, J. L., Barnes, D. R., Phillips, K. ., Mooij, T. M., Roos-Blom, M. J., ... & BRCA1 BRCA2 Cohort Consortium (2017). Risks breast, ovarian, contralateral breast cancer BRCA1 BRCA2 mutation carriers. JAMA, 317 (23), 2402–2416. doi: 10.1001/jama.2017.7112","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/BRCA2.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2","title":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2","text":"BRCA2 provides cumulative risk breast cancer population women BRCA2 mutation function age (years).","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2","text":"","code":"BRCA2"},{"path":"https://hneth.github.io/riskyr/reference/BRCA2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2","text":"data frame (11 x 2). x: age (years). y: cumulative risk developing breast cancer (BRCA2) population.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/BRCA2_mam.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2_mam","title":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2_mam","text":"BRCA2_mam provides cumulative risk breast cancer population women BRCA2 mutation function age (years).","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA2_mam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2_mam","text":"","code":"BRCA2_mam"},{"path":"https://hneth.github.io/riskyr/reference/BRCA2_mam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2_mam","text":"data frame (63 x 2). age: age (years). cumRisk: cumulative risk developing breast cancer (BRCA2) population.","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA2_mam.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cumulative risk of breast cancer in women with the BRCA2 mutation. — BRCA2_mam","text":"Based Figure 2 (p. 2408) Kuchenbaecker, K. B., Hopper, J. L., Barnes, D. R., Phillips, K. ., Mooij, T. M., Roos-Blom, M. J., ... & BRCA1 BRCA2 Cohort Consortium (2017). Risks breast, ovarian, contralateral breast cancer BRCA1 BRCA2 mutation carriers. JAMA, 317 (23), 2402–2416. doi: 10.1001/jama.2017.7112","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/BRCA2_ova.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk of ovarian cancer in women with the BRCA2 mutation. — BRCA2_ova","title":"Cumulative risk of ovarian cancer in women with the BRCA2 mutation. — BRCA2_ova","text":"BRCA2_ova provides cumulative risk ovarian cancer population women BRCA2 mutation function age (years).","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA2_ova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk of ovarian cancer in women with the BRCA2 mutation. — BRCA2_ova","text":"","code":"BRCA2_ova"},{"path":"https://hneth.github.io/riskyr/reference/BRCA2_ova.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk of ovarian cancer in women with the BRCA2 mutation. — BRCA2_ova","text":"data frame (63 x 2). age: age (years). cumRisk: cumulative risk developing ovarian cancer (BRCA2) population.","code":""},{"path":"https://hneth.github.io/riskyr/reference/BRCA2_ova.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cumulative risk of ovarian cancer in women with the BRCA2 mutation. — BRCA2_ova","text":"Based Figure 2 (p. 2408) Kuchenbaecker, K. B., Hopper, J. L., Barnes, D. R., Phillips, K. ., Mooij, T. M., Roos-Blom, M. J., ... & BRCA1 BRCA2 Cohort Consortium (2017). Risks breast, ovarian, contralateral breast cancer BRCA1 BRCA2 mutation carriers. JAMA, 317 (23), 2402–2416. doi: 10.1001/jama.2017.7112","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/FDR.html","id":null,"dir":"Reference","previous_headings":"","what":"The false detection rate of a decision process or diagnostic procedure. — FDR","title":"The false detection rate of a decision process or diagnostic procedure. — FDR","text":"FDR defines decision's false detection (false discovery) rate (FDR): conditional probability condition FALSE provided decision positive.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FDR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The false detection rate of a decision process or diagnostic procedure. — FDR","text":"","code":"FDR"},{"path":"https://hneth.github.io/riskyr/reference/FDR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The false detection rate of a decision process or diagnostic procedure. — FDR","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FDR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The false detection rate of a decision process or diagnostic procedure. — FDR","text":"Understanding obtaining false detection fate false discovery rate (FDR): Definition:   FDR conditional probability   condition FALSE   given positive decision: FDR = p(condition = FALSE | decision = positive) Perspective:   FDR classifies   subset dec_pos individuals   condition (FDR = fa/dec_pos = fa/(hi + fa)). Alternative names:   false discovery rate Relationships: . FDR complement   positive predictive value PPV: FDR = 1 - PPV b. FDR opposite conditional probability   – complement –   false alarm rate fart: fart = p(decision = positive | condition = FALSE) terms frequencies,   FDR ratio   fa divided dec_pos   (.e., hi + fa): FDR = fa/dec_pos = fa/(hi + fa) Dependencies:   FDR feature decision process   diagnostic procedure   measure incorrect decisions (positive decisions   actually FALSE). However, due conditional probability,   value FDR intrinsic   decision process, also depends   condition's prevalence value prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FDR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The false detection rate of a decision process or diagnostic procedure. — FDR","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/FDR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The false detection rate of a decision process or diagnostic procedure. — FDR","text":"","code":"FDR <- .45     # sets a false detection rate (FDR) of 45% FDR <- 45/100  # (condition = FALSE) for 45 out of 100 people with (decision = positive) is_prob(FDR)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/FFTrees_riskyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from FFTrees to riskyr objects. — FFTrees_riskyr","title":"Convert from FFTrees to riskyr objects. — FFTrees_riskyr","text":"FFTrees_riskyr converts FFTrees object — generated FFTrees package — corresponding riskyr object.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FFTrees_riskyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from FFTrees to riskyr objects. — FFTrees_riskyr","text":"","code":"FFTrees_riskyr(x, data = \"train\", tree = 1)"},{"path":"https://hneth.github.io/riskyr/reference/FFTrees_riskyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert from FFTrees to riskyr objects. — FFTrees_riskyr","text":"x FFTrees object (generated FFTrees). data type data consider (character string). Must either \"train\" (training/fitting data) \"test\" (test/prediction data). Default: data = \"train\". tree integer specifying tree consider (integer). Default: tree = 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FFTrees_riskyr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert from FFTrees to riskyr objects. — FFTrees_riskyr","text":"riskyr scenario (riskyr object).","code":""},{"path":"https://hneth.github.io/riskyr/reference/FFTrees_riskyr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert from FFTrees to riskyr objects. — FFTrees_riskyr","text":"FFTrees_riskyr essentially allows using riskyr functions visualize fast--frugal tree (FFT)'s performance information (contained 2x2 matrix frequency counts). R package FFTrees creates, visualizes, evaluates fast--frugal trees (FFTs) solving binary classification problems efficient transparent fashion.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FFTrees_riskyr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert from FFTrees to riskyr objects. — FFTrees_riskyr","text":"See https://CRAN.R-project.org/package=FFTrees https://github.com/ndphillips/FFTrees information R package FFTrees.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/FOR.html","id":null,"dir":"Reference","previous_headings":"","what":"The false omission rate (FOR) of a decision process or diagnostic procedure. — FOR","title":"The false omission rate (FOR) of a decision process or diagnostic procedure. — FOR","text":"defines decision's false omission rate (): conditional probability condition TRUE provided decision negative.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FOR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The false omission rate (FOR) of a decision process or diagnostic procedure. — FOR","text":"","code":"FOR"},{"path":"https://hneth.github.io/riskyr/reference/FOR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The false omission rate (FOR) of a decision process or diagnostic procedure. — FOR","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FOR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The false omission rate (FOR) of a decision process or diagnostic procedure. — FOR","text":"Understanding obtaining false omission rate : Definition:   -called false omission rate:   conditional probability condition TRUE   given negative decision: = p(condition = TRUE | decision = negative) Perspective:   classifies   subset dec_neg individuals   condition (= mi/dec_neg = mi/(mi + cr)). Alternative names:   none? Relationships: . complement   negative predictive value NPV: = 1 - NPV b. opposite conditional probability   – complement –   miss rate mirt   (aka. false negative rate FDR): mirt = p(decision = negative | condition = TRUE) terms frequencies,   ratio   mi divided dec_neg   (.e., mi + cr): NPV = mi/dec_neg = mi/(mi + cr) Dependencies:   feature decision process   diagnostic procedure measure incorrect   decisions (negative decisions actually FALSE). However, due conditional probability,   value intrinsic   decision process, also depends   condition's prevalence value prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/FOR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The false omission rate (FOR) of a decision process or diagnostic procedure. — FOR","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/FOR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The false omission rate (FOR) of a decision process or diagnostic procedure. — FOR","text":"","code":"FOR <- .05     # sets a false omission rate of 5% FOR <- 5/100   # (condition = TRUE) for 5 out of 100 people with (decision = negative) is_prob(FOR)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/N.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of individuals in the population. — N","title":"Number of individuals in the population. — N","text":"N frequency describes number individuals current population (.e., overall number cases considered).","code":""},{"path":"https://hneth.github.io/riskyr/reference/N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of individuals in the population. — N","text":"","code":"N"},{"path":"https://hneth.github.io/riskyr/reference/N.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of individuals in the population. — N","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/N.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of individuals in the population. — N","text":"Key relationships frequencies probabilities (see documentation comp_freq comp_prob details): Three perspectives population: condition / decision / accuracy. Defining probabilities terms frequencies: Probabilities can computed ratios frequencies, beware rounding issues. Current frequency information computed comp_freq contained list freq.","code":""},{"path":"https://hneth.github.io/riskyr/reference/N.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of individuals in the population. — N","text":"Consult Wikipedia: Statistical population additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/N.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of individuals in the population. — N","text":"","code":"N <- 1000   # => sets a population size of 1000 is_freq(N)  # => TRUE #> [1] TRUE is_prob(N)  # => FALSE (as N is no probability) #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/NPV.html","id":null,"dir":"Reference","previous_headings":"","what":"The negative predictive value of a decision process or diagnostic procedure. — NPV","title":"The negative predictive value of a decision process or diagnostic procedure. — NPV","text":"NPV defines decision's negative predictive value (NPV): conditional probability condition FALSE provided decision negative.","code":""},{"path":"https://hneth.github.io/riskyr/reference/NPV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The negative predictive value of a decision process or diagnostic procedure. — NPV","text":"","code":"NPV"},{"path":"https://hneth.github.io/riskyr/reference/NPV.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The negative predictive value of a decision process or diagnostic procedure. — NPV","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/NPV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The negative predictive value of a decision process or diagnostic procedure. — NPV","text":"Understanding obtaining negative predictive value NPV: Definition:   NPV conditional probability   condition FALSE   given negative decision: NPV = p(condition = FALSE | decision = negative) probability negative decision correct. Perspective:   NPV classifies   subset dec_neg individuals   condition (NPV = cr/dec_neg = cr/(mi + cr)). Alternative names:   true omission rate Relationships: . NPV complement   false omission rate : NPV = 1 - b. NPV opposite conditional probability   – complement –   specificity spec: spec = p(decision = negative | condition = FALSE) terms frequencies,   NPV ratio   cr divided dec_neg   (.e., cr + mi): NPV = cr/dec_neg = cr/(cr + mi) Dependencies:   NPV feature decision process   diagnostic procedure   – similar specificity spec –   measure correct decisions (negative decisions   actually FALSE). However, due conditional probability,   value NPV intrinsic   decision process, also depends   condition's prevalence value prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/NPV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The negative predictive value of a decision process or diagnostic procedure. — NPV","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/NPV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The negative predictive value of a decision process or diagnostic procedure. — NPV","text":"","code":"NPV <- .95     # sets a negative predictive value of 95% NPV <- 95/100  # (condition = FALSE) for 95 out of 100 people with (decision = negative) is_prob(NPV)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/PPV.html","id":null,"dir":"Reference","previous_headings":"","what":"The positive predictive value of a decision process or diagnostic procedure. — PPV","title":"The positive predictive value of a decision process or diagnostic procedure. — PPV","text":"PPV defines decision's positive predictive value (PPV): conditional probability condition TRUE provided decision positive.","code":""},{"path":"https://hneth.github.io/riskyr/reference/PPV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The positive predictive value of a decision process or diagnostic procedure. — PPV","text":"","code":"PPV"},{"path":"https://hneth.github.io/riskyr/reference/PPV.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The positive predictive value of a decision process or diagnostic procedure. — PPV","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/PPV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The positive predictive value of a decision process or diagnostic procedure. — PPV","text":"Understanding obtaining positive predictive value PPV: Definition:   PPV conditional probability   condition TRUE   given positive decision: PPV = p(condition = TRUE | decision = positive) probability positive decision correct. Perspective:   PPV classifies   subset dec_pos individuals   condition (PPV = hi/dec_pos = hi/(hi + fa)). Alternative names:   precision Relationships: . PPV complement   false discovery false detection rate FDR: PPV = 1 - FDR b. PPV opposite conditional probability   – complement –   sensitivity sens: sens = p(decision = positive | condition = TRUE) terms frequencies,   PPV ratio   hi divided dec_pos   (.e., hi + fa): PPV = hi/dec_pos = hi/(hi + fa) Dependencies:   PPV feature decision process   diagnostic procedure   – similar sensitivity sens –   measure correct decisions (positive decisions   actually TRUE). However, due conditional probability,   value PPV intrinsic   decision process, also depends   condition's prevalence value prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/PPV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The positive predictive value of a decision process or diagnostic procedure. — PPV","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/PPV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The positive predictive value of a decision process or diagnostic procedure. — PPV","text":"","code":"PPV <- .55     # sets a positive predictive value of 55% PPV <- 55/100  # (condition = TRUE) for 55 out of 100 people with (decision = positive) is_prob(PPV)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/acc.html","id":null,"dir":"Reference","previous_headings":"","what":"Accuracy (acc) is the probability of a correct decision. — acc","title":"Accuracy (acc) is the probability of a correct decision. — acc","text":"acc defines overall accuracy probability correspondence positive decision true condition (.e., proportion correct classification decisions dec_cor cases).","code":""},{"path":"https://hneth.github.io/riskyr/reference/acc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accuracy (acc) is the probability of a correct decision. — acc","text":"","code":"acc"},{"path":"https://hneth.github.io/riskyr/reference/acc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Accuracy (acc) is the probability of a correct decision. — acc","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/acc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accuracy (acc) is the probability of a correct decision. — acc","text":"Importantly, correct decisions dec_cor necessarily positive decisions dec_pos. Understanding obtaining accuracy metric acc: Definition:   acc (non-conditional) probability: acc = p(dec_cor) = dec_cor/N base rate (baseline probability)   decision correct, necessarily positive. acc values range   0 (correct decision/prediction)   1 (perfect decision/prediction). Computation: acc can computed several ways: () prob: acc = (prev x sens) + [(1 - prev) x spec] (b) freq: acc = dec_cor/N = (hi + cr)/(hi + mi + fa + cr) (c) complement error rate err: acc = 1 - err frequencies freq rounded, (b) coincides () (c). Perspective:   acc classifies population N individuals   accuracy/correspondence (acc = dec_cor/N). acc \"accuracy\" \"correspondence\" counterpart   prev (adopts \"condition\" perspective)   ppod (adopts \"decision\" perspective). Alternative names:   base rate correct decisions,   non-erroneous cases terms frequencies,   acc ratio   dec_cor (.e., hi + cr)   divided N (.e.,   hi + mi + fa + cr): acc = dec_cor/N = (hi + cr)/(hi + mi + fa + cr) Dependencies:   acc feature environment (true condition)   decision process diagnostic procedure. reflects   correspondence decisions conditions. See accu accuracy metrics several possible interpretations accuracy.","code":""},{"path":"https://hneth.github.io/riskyr/reference/acc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Accuracy (acc) is the probability of a correct decision. — acc","text":"Consult Wikipedia:Accuracy_and_precision additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/acc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accuracy (acc) is the probability of a correct decision. — acc","text":"","code":"acc <- .50     # sets a rate of correct decisions of 50% acc <- 50/100  # (dec_cor) for 50 out of 100 individuals is_prob(acc)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/accu.html","id":null,"dir":"Reference","previous_headings":"","what":"A list containing current accuracy information. — accu","title":"A list containing current accuracy information. — accu","text":"accu contains current accuracy information returned corresponding generating function comp_accu_prob.","code":""},{"path":"https://hneth.github.io/riskyr/reference/accu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list containing current accuracy information. — accu","text":"","code":"accu"},{"path":"https://hneth.github.io/riskyr/reference/accu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list containing current accuracy information. — accu","text":"object class list length 5.","code":""},{"path":"https://hneth.github.io/riskyr/reference/accu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list containing current accuracy information. — accu","text":"Current metrics include: acc: Overall accuracy probability (proportion)    correctly classifying cases dec_cor cases: See acc definition explanations. acc values range 0 (correct prediction) 1 (perfect prediction). wacc: Weighted accuracy, weighted average    sensitivity sens (aka. hit rate HR, TPR,    power recall)    specificity spec (aka. TNR)    sens multiplied weighting parameter w    (ranging 0 1) spec multiplied    w's complement (1 - w): wacc = (w * sens) + ((1 - w) * spec) w = .50, wacc becomes balanced accuracy bacc. mcc: Matthews correlation coefficient (values ranging -1 +1): mcc = ((hi * cr) - (fa * mi)) / sqrt((hi + fa) * (hi + mi) * (cr + fa) * (cr + mi)) value mcc = 0 implies random performance; mcc = 1 implies perfect performance. See Wikipedia: Matthews correlation coefficient    additional information. f1s: harmonic mean positive predictive value PPV    (aka. precision)    sensitivity sens (aka. hit rate HR,    TPR, power recall): f1s =  2 * (PPV * sens) / (PPV + sens) See Wikipedia: F1 score additional information. Notes: Accuracy metrics describe correspondence decisions (predictions) actual conditions (truth). several possible interpretations accuracy:  probabilities (.e., acc probability proportion      correct classifications, ratio dec_cor/N), frequencies (e.g., classifying population N      individuals cases dec_cor vs. dec_err), correlations (e.g., see mcc accu). Computing exact accuracy values based probabilities (comp_accu_prob) may differ    accuracy values computed (possibly rounded) frequencies (comp_accu_freq). frequencies rounded integers (see default round = TRUE    comp_freq comp_freq_prob) accuracy metrics computed    comp_accu_freq correspond rounded values.    Use comp_accu_prob obtain exact accuracy metrics probabilities.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/accu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list containing current accuracy information. — accu","text":"","code":"accu <- comp_accu_prob()  # => compute exact accuracy metrics (from probabilities) accu                      # => current accuracy information #> $acc #> [1] 0.775 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.8 #>  #> $mcc #> [1] 0.5303301 #>  #> $f1s #> [1] 0.6538462 #>   ## Contrasting comp_accu_freq and comp_accu_prob: # (a) comp_accu_freq (based on rounded frequencies): freq1 <- comp_freq(N = 10, prev = 1/3, sens = 2/3, spec = 3/4)   # => rounded frequencies! accu1 <- comp_accu_freq(freq1$hi, freq1$mi, freq1$fa, freq1$cr)  # => accu1 (based on rounded freq). # accu1 # # (b) comp_accu_prob (based on probabilities): accu2 <- comp_accu_prob(prev = 1/3, sens = 2/3, spec = 3/4)      # => exact accu (based on prob). # accu2 all.equal(accu1, accu2)  # => 4 differences! #> [1] \"Component “acc”: Mean relative difference: 0.03174603\"  #> [2] \"Component “wacc”: Mean relative difference: 0.02586207\" #> [3] \"Component “mcc”: Mean relative difference: 0.1306675\"   #> [4] \"Component “f1s”: Mean relative difference: 0.07692308\"  # # (c) comp_accu_freq (exact values, i.e., without rounding): freq3 <- comp_freq(N = 10, prev = 1/3, sens = 2/3, spec = 3/4, round = FALSE) accu3 <- comp_accu_freq(freq3$hi, freq3$mi, freq3$fa, freq3$cr)  # => accu3 (based on EXACT freq). # accu3 all.equal(accu2, accu3)  # => TRUE (qed). #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/as_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a percentage as a (numeric and rounded) probability. — as_pb","title":"Display a percentage as a (numeric and rounded) probability. — as_pb","text":"as_pb function displays percentage perc probability (rounded n_digits decimals).","code":""},{"path":"https://hneth.github.io/riskyr/reference/as_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a percentage as a (numeric and rounded) probability. — as_pb","text":"","code":"as_pb(perc, n_digits = 4)"},{"path":"https://hneth.github.io/riskyr/reference/as_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a percentage as a (numeric and rounded) probability. — as_pb","text":"perc percentage (scalar vector numeric values 0 100). n_digits Number decimal places percentage rounded. Default: n_digits = 4.","code":""},{"path":"https://hneth.github.io/riskyr/reference/as_pb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a percentage as a (numeric and rounded) probability. — as_pb","text":"probability (numeric value).","code":""},{"path":"https://hneth.github.io/riskyr/reference/as_pb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display a percentage as a (numeric and rounded) probability. — as_pb","text":"as_pb complement function as_pc allow toggling display numeric values percentages probabilities.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/as_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a percentage as a (numeric and rounded) probability. — as_pb","text":"","code":"as_pb(1/3)          # => 0.0033 #> [1] 0.0033 as_pb(as_pc(2/3))   # => 0.6667 (rounded to 4 decimals) #> [1] 0.6667"},{"path":"https://hneth.github.io/riskyr/reference/as_pc.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a probability as a (numeric and rounded) percentage. — as_pc","title":"Display a probability as a (numeric and rounded) percentage. — as_pc","text":"as_pc function displays probability prob percentage (rounded n_digits decimals).","code":""},{"path":"https://hneth.github.io/riskyr/reference/as_pc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a probability as a (numeric and rounded) percentage. — as_pc","text":"","code":"as_pc(prob, n_digits = 2)"},{"path":"https://hneth.github.io/riskyr/reference/as_pc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a probability as a (numeric and rounded) percentage. — as_pc","text":"prob probability (scalar vector numeric values 0 1). n_digits Number decimal places percentage rounded. Default: n_digits = 2.","code":""},{"path":"https://hneth.github.io/riskyr/reference/as_pc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a probability as a (numeric and rounded) percentage. — as_pc","text":"percentage (numeric value).","code":""},{"path":"https://hneth.github.io/riskyr/reference/as_pc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display a probability as a (numeric and rounded) percentage. — as_pc","text":"as_pc complement function as_pb allow toggling display numeric values percentages probabilities.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/as_pc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a probability as a (numeric and rounded) percentage. — as_pc","text":"","code":"as_pc(.50)                # 50 #> [1] 50 as_pc(1/3)                # 33.33 #> [1] 33.33 as_pc(1/3, n_digits = 0)  # 33 #> [1] 33 as_pc(as_pb(12.3))        # 12.3 #> [1] 12.3"},{"path":"https://hneth.github.io/riskyr/reference/comp_FDR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a decision's false detection rate (FDR) from probabilities. — comp_FDR","title":"Compute a decision's false detection rate (FDR) from probabilities. — comp_FDR","text":"comp_FDR computes false detection rate FDR 3 essential probabilities prev, sens, spec.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_FDR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a decision's false detection rate (FDR) from probabilities. — comp_FDR","text":"","code":"comp_FDR(prev, sens, spec)"},{"path":"https://hneth.github.io/riskyr/reference/comp_FDR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a decision's false detection rate (FDR) from probabilities. — comp_FDR","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_FDR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a decision's false detection rate (FDR) from probabilities. — comp_FDR","text":"false detection rate FDR probability. warning provided NaN values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_FDR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a decision's false detection rate (FDR) from probabilities. — comp_FDR","text":"comp_FDR uses probabilities (frequencies) round results.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_FDR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a decision's false detection rate (FDR) from probabilities. — comp_FDR","text":"","code":"# (1) Ways to work: comp_FDR(.50, .500, .500)  # => FDR = 0.5    = (1 - PPV) #> [1] 0.5 comp_FDR(.50, .333, .666)  # => FDR = 0.5007 = (1 - PPV) #> [1] 0.5007496"},{"path":"https://hneth.github.io/riskyr/reference/comp_FOR.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a decision's false omission rate (FOR) from probabilities. — comp_FOR","title":"Compute a decision's false omission rate (FOR) from probabilities. — comp_FOR","text":"comp_FOR computes false omission rate 3 essential probabilities prev, sens, spec.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_FOR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a decision's false omission rate (FOR) from probabilities. — comp_FOR","text":"","code":"comp_FOR(prev, sens, spec)"},{"path":"https://hneth.github.io/riskyr/reference/comp_FOR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a decision's false omission rate (FOR) from probabilities. — comp_FOR","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_FOR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a decision's false omission rate (FOR) from probabilities. — comp_FOR","text":"false omission rate probability. warning provided NaN values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_FOR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a decision's false omission rate (FOR) from probabilities. — comp_FOR","text":"comp_FOR uses probabilities (frequencies) round results.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_FOR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a decision's false omission rate (FOR) from probabilities. — comp_FOR","text":"","code":"# (1) Ways to work: comp_FOR(.50, .500, .500)  # => FOR = 0.5    = (1 - NPV) #> [1] 0.5 comp_FOR(.50, .333, .666)  # => FOR = 0.5004 = (1 - NPV) #> [1] 0.5003751"},{"path":"https://hneth.github.io/riskyr/reference/comp_NPV.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a decision's negative predictive value (NPV) from probabilities. — comp_NPV","title":"Compute a decision's negative predictive value (NPV) from probabilities. — comp_NPV","text":"comp_NPV computes negative predictive value NPV 3 essential probabilities prev, sens, spec.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_NPV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a decision's negative predictive value (NPV) from probabilities. — comp_NPV","text":"","code":"comp_NPV(prev, sens, spec)"},{"path":"https://hneth.github.io/riskyr/reference/comp_NPV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a decision's negative predictive value (NPV) from probabilities. — comp_NPV","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_NPV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a decision's negative predictive value (NPV) from probabilities. — comp_NPV","text":"negative predictive value NPV probability. warning provided NaN values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_NPV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a decision's negative predictive value (NPV) from probabilities. — comp_NPV","text":"comp_NPV uses probabilities (frequencies) round results.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_NPV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a decision's negative predictive value (NPV) from probabilities. — comp_NPV","text":"","code":"# (1) Ways to work: comp_NPV(.50, .500, .500)  # => NPV = 0.5 #> [1] 0.5 comp_NPV(.50, .333, .666)  # => NPV = 0.4996 #> [1] 0.4996249  # (2) Watch out for vectors: prev <- seq(0, 1, .1) comp_NPV(prev, .5, .5)  # => without NaN values #>  [1] 1.0 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0.0 comp_NPV(prev,  1,  0)  # => with NaN values #> Warning: NPV is NaN. #>  [1] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  # (3) Watch out for extreme values: comp_NPV(1, 1, 1)   # => NaN, as cr = 0 and mi = 0: 0/0 #> Warning: NPV is NaN. #> [1] NaN comp_NPV(1, 1, 0)   # => NaN, as cr = 0 and mi = 0: 0/0 #> Warning: NPV is NaN. #> [1] NaN comp_NPV(.5, sens = 1, spec = 0)  # => NaN, no dec_neg cases:  NPV = 0/0 = NaN #> Warning: NPV is NaN. #> [1] NaN is_extreme_prob_set(.5, sens = 1, spec = 0)  # => verifies extreme cases #> Warning: Extreme case (sens = 1 & spec = 0): #>   0 mi (FN) and 0 cr (TN) cases; 0 dec_neg cases; NPV = NaN. #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/comp_PPV.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a decision's positive predictive value (PPV) from probabilities. — comp_PPV","title":"Compute a decision's positive predictive value (PPV) from probabilities. — comp_PPV","text":"comp_PPV computes positive predictive value PPV 3 essential probabilities prev, sens, spec.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_PPV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a decision's positive predictive value (PPV) from probabilities. — comp_PPV","text":"","code":"comp_PPV(prev, sens, spec)"},{"path":"https://hneth.github.io/riskyr/reference/comp_PPV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a decision's positive predictive value (PPV) from probabilities. — comp_PPV","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_PPV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a decision's positive predictive value (PPV) from probabilities. — comp_PPV","text":"positive predictive value PPV probability. warning provided NaN values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_PPV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a decision's positive predictive value (PPV) from probabilities. — comp_PPV","text":"comp_PPV uses probabilities (frequencies) round results.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_PPV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a decision's positive predictive value (PPV) from probabilities. — comp_PPV","text":"","code":"# (1) Ways to work: comp_PPV(.50, .500, .500)  # => PPV = 0.5 #> [1] 0.5 comp_PPV(.50, .333, .666)  # => PPV = 0.499 #> [1] 0.4992504  # (2) Watch out for vectors: prev <- seq(0, 1, .1) comp_PPV(prev, .5, .5)  # => without NaN values #>  [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 comp_PPV(prev,  0,  1)  # => with NaN values #> Warning: PPV is NaN. #>  [1] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN  # (3) Watch out for extreme values: comp_PPV(prev = 1, sens = 0, spec = .5)  # => NaN, only mi: hi = 0 and fa = 0: PPV = 0/0 = NaN #> Warning: PPV is NaN. #> [1] NaN is_extreme_prob_set(prev = 1, sens = 0, spec = .5)  # => verifies extreme cases #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> [1] TRUE  comp_PPV(prev = 0, sens = .5, spec = 1)  # => NaN, only cr: hi = 0 and fa = 0: PPV = 0/0 = NaN #> Warning: PPV is NaN. #> [1] NaN is_extreme_prob_set(prev = 0, sens = .5, spec = 1)  # => verifies extreme cases #> Warning: Extreme case (prev = 0 & spec = 1): #>   N cr (TN) cases; 0 cond_true or dec_false cases; NPV = NaN. #> [1] TRUE  comp_PPV(prev = .5, sens = 0, spec = 1)  # => NaN, only cr: hi = 0 and fa = 0: PPV = 0/0 = NaN #> Warning: PPV is NaN. #> [1] NaN is_extreme_prob_set(prev = .5, sens = 0, spec = 1)  # => verifies extreme cases #> Warning: Extreme case (sens = 0 & spec = 1): #>   0 hi (TP) and 0 fa (FP) cases; 0 dec_pos cases; PPV = NaN. #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/comp_acc.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute overall accuracy (acc) from probabilities. — comp_acc","title":"Compute overall accuracy (acc) from probabilities. — comp_acc","text":"comp_acc computes overall accuracy acc 3 essential probabilities prev, sens, spec.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_acc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute overall accuracy (acc) from probabilities. — comp_acc","text":"","code":"comp_acc(prev, sens, spec)"},{"path":"https://hneth.github.io/riskyr/reference/comp_acc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute overall accuracy (acc) from probabilities. — comp_acc","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_acc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute overall accuracy (acc) from probabilities. — comp_acc","text":"Overall accuracy acc probability (proportion). warning provided NaN values. See acc definition accu accuracy metrics. comp_accu_freq comp_accu_prob compute accuracy metrics frequencies probabilities.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_acc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute overall accuracy (acc) from probabilities. — comp_acc","text":"comp_acc uses probabilities (frequencies) inputs returns exact probability (proportion) without rounding. Understanding probability acc: Definition:   acc (non-conditional) probability: acc = p(dec_cor) = dec_cor/N base rate (baseline probability)   decision correct, necessarily positive. acc values range   0 (correct decision/prediction)   1 (perfect decision/prediction). Computation: acc can computed 2 ways: () prob: acc = (prev x sens) + [(1 - prev) x spec] (b) freq: acc = dec_cor/N = (hi + cr)/(hi + mi + fa + cr) frequencies freq rounded, (b) coincides (). Perspective:   acc classifies population N individuals   accuracy/correspondence (acc = dec_cor/N). acc \"accuracy\" \"correspondence\" counterpart   prev (adopts \"condition\" perspective)   ppod (adopts \"decision\" perspective). Alternative names acc:   base rate correct decisions,   non-erroneous cases terms frequencies,   acc ratio   dec_cor (.e., hi + cr)   divided N (.e.,   hi + mi + fa + cr): acc = dec_cor/N = (hi + cr)/(hi + mi + fa + cr) Dependencies:   acc feature environment (true condition)   decision process diagnostic procedure. reflects   correspondence decisions conditions. See accu accuracy metrics several possible interpretations accuracy.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_acc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute overall accuracy (acc) from probabilities. — comp_acc","text":"","code":"# ways to work: comp_acc(.10, .200, .300)  # => acc = 0.29 #> [1] 0.29 comp_acc(.50, .333, .666)  # => acc = 0.4995 #> [1] 0.4995  # watch out for vectors: prev.range <- seq(0, 1, by = .1) comp_acc(prev.range, .5, .5)  # => 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 #>  [1] 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5  # watch out for extreme values: comp_acc(1, 1, 1)  #  => 1 #> [1] 1 comp_acc(1, 1, 0)  #  => 1 #> [1] 1  comp_acc(1, 0, 1)  #  => 0 #> [1] 0 comp_acc(1, 0, 0)  #  => 0 #> [1] 0  comp_acc(0, 1, 1)  #  => 1 #> [1] 1 comp_acc(0, 1, 0)  #  => 0 #> [1] 0  comp_acc(0, 0, 1)  #  => 1 #> [1] 1 comp_acc(0, 0, 0)  #  => 0 #> [1] 0"},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute accuracy metrics of current classification results. — comp_accu_freq","title":"Compute accuracy metrics of current classification results. — comp_accu_freq","text":"comp_accu_freq computes list current accuracy metrics 4 essential frequencies (hi, mi, fa, cr) constitute current confusion matrix contained freq.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute accuracy metrics of current classification results. — comp_accu_freq","text":"","code":"comp_accu_freq(hi = freq$hi, mi = freq$mi, fa = freq$fa, cr = freq$cr, w = 0.5)"},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute accuracy metrics of current classification results. — comp_accu_freq","text":"hi number hits hi (true positives). mi number misses mi (false negatives). fa number false alarms fa (false positives). cr number correct rejections cr (true negatives). w weighting parameter w (0 1) computing weighted accuracy wacc. Default: w = .50 (.e., yielding balanced accuracy bacc).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute accuracy metrics of current classification results. — comp_accu_freq","text":"list accu containing current accuracy metrics.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_freq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute accuracy metrics of current classification results. — comp_accu_freq","text":"Currently computed accuracy metrics include: acc: Overall accuracy proportion (probability)    correctly classifying cases dec_cor cases: acc = dec_cor/N = (hi + cr)/(hi + mi + fa + cr) Values range 0 (correct prediction) 1 (perfect prediction). wacc: Weighted accuracy, weighted average    sensitivity sens (aka. hit rate HR, TPR,    power recall)    specificity spec (aka. TNR)    sens multiplied weighting parameter w    (ranging 0 1) spec multiplied    w's complement (1 - w): wacc = (w * sens) + ((1 - w) * spec) w = .50, wacc becomes balanced accuracy bacc. mcc: Matthews correlation coefficient (values ranging -1 +1): mcc = ((hi * cr) - (fa * mi)) / sqrt((hi + fa) * (hi + mi) * (cr + fa) * (cr + mi)) value mcc = 0 implies random performance; mcc = 1 implies perfect performance. See Wikipedia: Matthews correlation coefficient    additional information. f1s: harmonic mean positive predictive value PPV    (aka. precision)    sensitivity sens (aka. hit rate HR,    TPR, power recall): f1s =  2 * (PPV * sens) / (PPV + sens) See Wikipedia: F1 score additional information. Notes: Accuracy metrics describe correspondence decisions (predictions) actual conditions (truth). several possible interpretations accuracy:  probabilities (.e., acc proportion correct classifications,      ratio dec_cor/N), frequencies (e.g., classifying population N      individuals cases dec_cor vs. dec_err), correlations (e.g., see mcc accu). Computing exact accuracy values based probabilities (comp_accu_prob) may differ    accuracy values computed (possibly rounded) frequencies (comp_accu_freq). frequencies rounded integers (see default round = TRUE    comp_freq comp_freq_prob) accuracy metrics computed    comp_accu_freq correspond rounded values.    Use comp_accu_prob obtain exact accuracy metrics probabilities.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_freq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute accuracy metrics of current classification results. — comp_accu_freq","text":"Consult Wikipedia: Confusion matrix additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute accuracy metrics of current classification results. — comp_accu_freq","text":"","code":"comp_accu_freq()  # => accuracy metrics for freq of current scenario #> $acc #> [1] 0.774 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.7986667 #>  #> $mcc #> [1] 0.5279731 #>  #> $f1s #> [1] 0.6523077 #>  comp_accu_freq(hi = 1, mi = 2, fa = 3, cr = 4)  # medium accuracy, but cr > hi #> $acc #> [1] 0.5 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.452381 #>  #> $mcc #> [1] -0.08908708 #>  #> $f1s #> [1] 0.2857143 #>   # Extreme cases: comp_accu_freq(hi = 1, mi = 1, fa = 1, cr = 1)  # random performance #> $acc #> [1] 0.5 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.5 #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] 0.5 #>  comp_accu_freq(hi = 0, mi = 0, fa = 1, cr = 1)  # random performance: wacc and f1s are NaN #> Warning: accu$mcc: A denominator of 0 was corrected to 1, resulting in mcc = 0. #> $acc #> [1] 0.5 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] NaN #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] NaN #>  comp_accu_freq(hi = 1, mi = 0, fa = 0, cr = 1)  # perfect accuracy/optimal performance #> $acc #> [1] 1 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 1 #>  #> $mcc #> [1] 1 #>  #> $f1s #> [1] 1 #>  comp_accu_freq(hi = 0, mi = 1, fa = 1, cr = 0)  # zero accuracy/worst performance, but see f1s #> $acc #> [1] 0 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0 #>  #> $mcc #> [1] -1 #>  #> $f1s #> [1] NaN #>  comp_accu_freq(hi = 1, mi = 0, fa = 0, cr = 0)  # perfect accuracy, but see wacc and mcc #> Warning: accu$mcc: A denominator of 0 was corrected to 1, resulting in mcc = 0. #> $acc #> [1] 1 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] NaN #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] 1 #>   # Effects of w: comp_accu_freq(hi = 3, mi = 2, fa = 1, cr = 4, w = 1/2)  # equal weights to sens and spec #> $acc #> [1] 0.7 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.7 #>  #> $mcc #> [1] 0.4082483 #>  #> $f1s #> [1] 0.6666667 #>  comp_accu_freq(hi = 3, mi = 2, fa = 1, cr = 4, w = 2/3)  # more weight to sens #> $acc #> [1] 0.7 #>  #> $w #> [1] 0.6666667 #>  #> $wacc #> [1] 0.6666667 #>  #> $mcc #> [1] 0.4082483 #>  #> $f1s #> [1] 0.6666667 #>  comp_accu_freq(hi = 3, mi = 2, fa = 1, cr = 4, w = 1/3)  # more weight to spec #> $acc #> [1] 0.7 #>  #> $w #> [1] 0.3333333 #>  #> $wacc #> [1] 0.7333333 #>  #> $mcc #> [1] 0.4082483 #>  #> $f1s #> [1] 0.6666667 #>   ## Contrasting comp_accu_freq and comp_accu_prob: # (a) comp_accu_freq (based on rounded frequencies): freq1 <- comp_freq(N = 10, prev = 1/3, sens = 2/3, spec = 3/4)   # => hi = 2, mi = 1, fa = 2, cr = 5 accu1 <- comp_accu_freq(freq1$hi, freq1$mi, freq1$fa, freq1$cr)  # => accu1 (based on rounded freq). # accu1 # # (b) comp_accu_prob (based on probabilities): accu2 <- comp_accu_prob(prev = 1/3, sens = 2/3, spec = 3/4)      # => exact accu (based on prob). # accu2 all.equal(accu1, accu2)  # => 4 differences! #> [1] \"Component “acc”: Mean relative difference: 0.03174603\"  #> [2] \"Component “wacc”: Mean relative difference: 0.02586207\" #> [3] \"Component “mcc”: Mean relative difference: 0.1306675\"   #> [4] \"Component “f1s”: Mean relative difference: 0.07692308\"  # # (c) comp_accu_freq (exact values, i.e., without rounding): freq3 <- comp_freq(N = 10, prev = 1/3, sens = 2/3, spec = 3/4, round = FALSE) accu3 <- comp_accu_freq(freq3$hi, freq3$mi, freq3$fa, freq3$cr)  # => accu3 (based on EXACT freq). # accu3 all.equal(accu2, accu3)  # => TRUE (qed). #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute exact accuracy metrics based on probabilities. — comp_accu_prob","title":"Compute exact accuracy metrics based on probabilities. — comp_accu_prob","text":"comp_accu_prob computes list exact accuracy metrics sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute exact accuracy metrics based on probabilities. — comp_accu_prob","text":"","code":"comp_accu_prob(   prev = prob$prev,   sens = prob$sens,   mirt = NA,   spec = prob$spec,   fart = NA,   tol = 0.01,   w = 0.5 )"},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute exact accuracy metrics based on probabilities. — comp_accu_prob","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. tol numeric tolerance value is_complement. Default: tol = .01. w weighting parameter w (0 1) computing weighted accuracy wacc. Default: w = .50 (.e., yielding balanced accuracy bacc). Notes: Accuracy metrics describe correspondence decisions (predictions) actual conditions (truth). several possible interpretations accuracy:  probabilities (.e., acc proportion correct classifications,      ratio dec_cor/N), frequencies (e.g., classifying population N      individuals cases dec_cor vs. dec_err), correlations (e.g., see mcc accu). Computing exact accuracy values based probabilities (comp_accu_prob) may differ    accuracy values computed (possibly rounded) frequencies (comp_accu_freq). frequencies rounded integers (see default round = TRUE    comp_freq comp_freq_prob) accuracy metrics computed    comp_accu_freq correspond rounded values.    Use comp_accu_prob obtain exact accuracy metrics probabilities.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute exact accuracy metrics based on probabilities. — comp_accu_prob","text":"list accu containing current accuracy metrics.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_prob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute exact accuracy metrics based on probabilities. — comp_accu_prob","text":"Currently computed accuracy metrics include: acc: Overall accuracy proportion (probability)    correctly classifying cases dec_cor cases: () prob: acc = (prev x sens) + [(1 - prev) x spec] (b) freq: acc = dec_cor/N = (hi + cr)/(hi + mi + fa + cr) frequencies freq rounded, (b) coincides (). Values range 0 (correct prediction) 1 (perfect prediction). wacc: Weighted accuracy, weighted average    sensitivity sens (aka. hit rate HR, TPR,    power recall)    specificity spec (aka. TNR)    sens multiplied weighting parameter w    (ranging 0 1) spec multiplied    w's complement (1 - w): wacc = (w * sens) + ((1 - w) * spec) w = .50, wacc becomes balanced accuracy bacc. mcc: Matthews correlation coefficient (values ranging -1 +1): mcc = ((hi * cr) - (fa * mi)) / sqrt((hi + fa) * (hi + mi) * (cr + fa) * (cr + mi)) value mcc = 0 implies random performance; mcc = 1 implies perfect performance. See Wikipedia: Matthews correlation coefficient    additional information. f1s: harmonic mean positive predictive value PPV    (aka. precision)    sensitivity sens (aka. hit rate HR,    TPR, power recall): f1s =  2 * (PPV * sens) / (PPV + sens) See Wikipedia: F1 score additional information. Note accuracy metrics can interpreted probabilities (e.g., acc) correlations (e.g., mcc). Also, accuracy can viewed probability (e.g., ratio link dec_cor N) frequency type (containing dec_cor dec_err). comp_accu_prob computes exact accuracy metrics probabilities. input frequencies rounded (see default round = TRUE comp_freq comp_freq_prob) accuracy metrics computed comp_accu correspond rounded values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_prob.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute exact accuracy metrics based on probabilities. — comp_accu_prob","text":"Consult Wikipedia: Confusion matrix additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_accu_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute exact accuracy metrics based on probabilities. — comp_accu_prob","text":"","code":"comp_accu_prob()  # => accuracy metrics for prob of current scenario #> $acc #> [1] 0.775 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.8 #>  #> $mcc #> [1] 0.5303301 #>  #> $f1s #> [1] 0.6538462 #>  comp_accu_prob(prev = .2, sens = .5, spec = .5)  # medium accuracy, but cr > hi. #> $acc #> [1] 0.5 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.5 #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] 0.2857143 #>   # Extreme cases: comp_accu_prob(prev = NaN, sens = NaN, spec = NaN)  # returns list of NA values #> Warning: Please enter a valid set of essential probabilities. #> $acc #> [1] NA #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] NA #>  #> $mcc #> [1] NA #>  #> $f1s #> [1] NA #>  comp_accu_prob(prev = 0, sens = NaN, spec = 1)      # returns list of NA values #> Warning: Please enter a valid set of essential probabilities. #> $acc #> [1] NA #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] NA #>  #> $mcc #> [1] NA #>  #> $f1s #> [1] NA #>  comp_accu_prob(prev = 0, sens = 0, spec = 1)     # perfect acc = 1, but f1s is NaN #> Warning: accu$mcc: A denominator of 0 was corrected to 1, resulting in mcc = 0. #> $acc #> [1] 1 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.5 #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] NaN #>  comp_accu_prob(prev = .5, sens = .5, spec = .5)  # random performance #> $acc #> [1] 0.5 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.5 #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] 0.5 #>  comp_accu_prob(prev = .5, sens = 1,  spec = 1)   # perfect accuracy #> $acc #> [1] 1 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 1 #>  #> $mcc #> [1] 1 #>  #> $f1s #> [1] 1 #>  comp_accu_prob(prev = .5, sens = 0,  spec = 0)   # zero accuracy, but f1s is NaN #> $acc #> [1] 0 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0 #>  #> $mcc #> [1] -1 #>  #> $f1s #> [1] NaN #>  comp_accu_prob(prev = 1,  sens = 1,  spec = 0)   # perfect, but see wacc (0.5) and mcc (0) #> Warning: accu$mcc: A denominator of 0 was corrected to 1, resulting in mcc = 0. #> $acc #> [1] 1 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.5 #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] 1 #>   # Effects of w: comp_accu_prob(prev = .5, sens = .6, spec = .4, w = 1/2)  # equal weights to sens and spec #> $acc #> [1] 0.5 #>  #> $w #> [1] 0.5 #>  #> $wacc #> [1] 0.5 #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] 0.5454545 #>  comp_accu_prob(prev = .5, sens = .6, spec = .4, w = 2/3)  # more weight on sens: wacc up #> $acc #> [1] 0.5 #>  #> $w #> [1] 0.6666667 #>  #> $wacc #> [1] 0.5333333 #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] 0.5454545 #>  comp_accu_prob(prev = .5, sens = .6, spec = .4, w = 1/3)  # more weight on spec: wacc down #> $acc #> [1] 0.5 #>  #> $w #> [1] 0.3333333 #>  #> $wacc #> [1] 0.4666667 #>  #> $mcc #> [1] 0 #>  #> $f1s #> [1] 0.5454545 #>   # Contrasting comp_accu_freq and comp_accu_prob: # (a) comp_accu_freq (based on rounded frequencies): freq1 <- comp_freq(N = 10, prev = 1/3, sens = 2/3, spec = 3/4)   # => rounded frequencies! accu1 <- comp_accu_freq(freq1$hi, freq1$mi, freq1$fa, freq1$cr)  # => accu1 (based on rounded freq). # accu1  # (b) comp_accu_prob (based on probabilities): accu2 <- comp_accu_prob(prev = 1/3, sens = 2/3, spec = 3/4)      # => exact accu (based on prob). # accu2 all.equal(accu1, accu2)  # => 4 differences! #> [1] \"Component “acc”: Mean relative difference: 0.03174603\"  #> [2] \"Component “wacc”: Mean relative difference: 0.02586207\" #> [3] \"Component “mcc”: Mean relative difference: 0.1306675\"   #> [4] \"Component “f1s”: Mean relative difference: 0.07692308\"  # # (c) comp_accu_freq (exact values, i.e., without rounding): freq3 <- comp_freq(N = 10, prev = 1/3, sens = 2/3, spec = 3/4, round = FALSE) accu3 <- comp_accu_freq(freq3$hi, freq3$mi, freq3$fa, freq3$cr)  # => accu3 (based on EXACT freq). # accu3 all.equal(accu2, accu3)  # => TRUE (qed). #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/comp_comp_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a probability's (missing) complement and return both. — comp_comp_pair","title":"Compute a probability's (missing) complement and return both. — comp_comp_pair","text":"comp_comp_pair function takes 0, 1, 2 probabilities (p1 p2) inputs. either missing (NA), computes complement one returns probabilities.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_comp_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a probability's (missing) complement and return both. — comp_comp_pair","text":"","code":"comp_comp_pair(p1 = NA, p2 = NA)"},{"path":"https://hneth.github.io/riskyr/reference/comp_comp_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a probability's (missing) complement and return both. — comp_comp_pair","text":"p1 numeric probability value (range 0 1). p1 optional p2 provided. p2 numeric probability value (range 0 1). p2 optional p1 provided.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_comp_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a probability's (missing) complement and return both. — comp_comp_pair","text":"vector v containing 2 numeric probability values (range 0 1): v = c(p1, p2).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_comp_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a probability's (missing) complement and return both. — comp_comp_pair","text":"comp_comp_pair nothing arguments provided (.e., !.na(p1) & !.na(p2)) issues warning arguments missing (.e., .na(p1) & .na(p2)). Inputs verified: Use is_prob verify input probability is_complement verify two provided values actually complements.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_comp_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a probability's (missing) complement and return both. — comp_comp_pair","text":"","code":"# ways to work: comp_comp_pair(1, 0)   # => 1 0 #> [1] 1 0 comp_comp_pair(0, 1)   # => 0 1 #> [1] 0 1 comp_comp_pair(1, NA)  # => 1 0 #> [1] 1 0 comp_comp_pair(NA, 1)  # => 0 1 #> [1] 0 1  # watch out for: comp_comp_pair(NA, NA) # => NA NA + warning #> Warning: One argument (either p1 or p2) is necessary. #> [1] NA NA comp_comp_pair(8, 8)   # => 8 8 + NO warning (as is_prob is not verified) #> [1] 8 8 comp_comp_pair(1, 1)   # => 1 1 + NO warning (as is_complement is not verified) #> [1] 1 1"},{"path":"https://hneth.github.io/riskyr/reference/comp_complement.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a probability's complement probability. — comp_complement","title":"Compute a probability's complement probability. — comp_complement","text":"comp_complement computes probability complement given probability prob.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_complement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a probability's complement probability. — comp_complement","text":"","code":"comp_complement(prob)"},{"path":"https://hneth.github.io/riskyr/reference/comp_complement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a probability's complement probability. — comp_complement","text":"prob numeric probability value (range 0 1).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_complement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a probability's complement probability. — comp_complement","text":"numeric probability value (range 0 1).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_complement.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a probability's complement probability. — comp_complement","text":"type range prob verified is_prob.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_complement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a probability's complement probability. — comp_complement","text":"","code":"comp_complement(0)    # => 1 #> [1] 1 comp_complement(1)    # => 0 #> [1] 0  comp_complement(2)    # => NA + warning (beyond range) #> [1] NA comp_complement(\"p\")  # => NA + warning (non-numeric) #> [1] NA"},{"path":"https://hneth.github.io/riskyr/reference/comp_complete_prob_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a complete set of probabilities from valid probability inputs. — comp_complete_prob_set","title":"Compute a complete set of probabilities from valid probability inputs. — comp_complete_prob_set","text":"comp_complete_prob_set function takes valid set (3 5) probabilities inputs (vector) returns complete set (3 essential 2 optional) probabilities.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_complete_prob_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a complete set of probabilities from valid probability inputs. — comp_complete_prob_set","text":"","code":"comp_complete_prob_set(prev, sens = NA, mirt = NA, spec = NA, fart = NA)"},{"path":"https://hneth.github.io/riskyr/reference/comp_complete_prob_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a complete set of probabilities from valid probability inputs. — comp_complete_prob_set","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_complete_prob_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a complete set of probabilities from valid probability inputs. — comp_complete_prob_set","text":"vector 5 probabilities: c(prev, sens, mirt, spec, fart).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_complete_prob_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a complete set of probabilities from valid probability inputs. — comp_complete_prob_set","text":"Assuming is_valid_prob_set = TRUE function uses comp_comp_pair two optional pairs (.e., sens mirt, spec fart) returns complete set 5 probabilities.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_complete_prob_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a complete set of probabilities from valid probability inputs. — comp_complete_prob_set","text":"","code":"# ways to work: comp_complete_prob_set(1, .8, NA, .7, NA) # => 1.0 0.8 0.2 0.7 0.3 #> [1] 1.0 0.8 0.2 0.7 0.3 comp_complete_prob_set(1, NA, .8, NA, .4) # => 1.0 0.2 0.8 0.6 0.4 #> [1] 1.0 0.2 0.8 0.6 0.4  # watch out for: comp_complete_prob_set(8)                  # => 8 NA NA NA NA + warnings #> Warning: One argument (either p1 or p2) is necessary. #> Warning: One argument (either p1 or p2) is necessary. #> [1]  8 NA NA NA NA comp_complete_prob_set(8, 7, 6, 5, 4)      # => 8 7 6 5 4 + no warning (valid set assumed) #> [1] 8 7 6 5 4 comp_complete_prob_set(8, .8, NA, .7, NA)  # => 8.0 0.8 0.2 0.7 0.3 + no warning (sic) #> [1] 8.0 0.8 0.2 0.7 0.3 comp_complete_prob_set(8, 2, NA, 3, NA)    # => 8 2 NA 3 NA + no warning (sic) #> [1]  8  2 NA  3 NA"},{"path":"https://hneth.github.io/riskyr/reference/comp_err.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute overall error rate (err) from probabilities. — comp_err","title":"Compute overall error rate (err) from probabilities. — comp_err","text":"comp_err computes overall error rate err 3 essential probabilities prev, sens, spec.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute overall error rate (err) from probabilities. — comp_err","text":"","code":"comp_err(prev, sens, spec)"},{"path":"https://hneth.github.io/riskyr/reference/comp_err.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute overall error rate (err) from probabilities. — comp_err","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_err.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute overall error rate (err) from probabilities. — comp_err","text":"Overall error rate err probability (proportion). warning provided NaN values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_err.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute overall error rate (err) from probabilities. — comp_err","text":"comp_err uses comp_acc compute err complement acc: err = 1 - acc See comp_acc acc details accu accuracy metrics several possible interpretations accuracy.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_err.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute overall error rate (err) from probabilities. — comp_err","text":"","code":"# ways to work: comp_err(.10, .200, .300)  # => err = 0.71 #> [1] 0.71 comp_err(.50, .333, .666)  # => err = 0.5005 #> [1] 0.5005  # watch out for vectors: prev.range <- seq(0, 1, by = .1) comp_err(prev.range, .5, .5)  # => 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 #>  [1] 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5  # watch out for extreme values: comp_err(1, 1, 1)  #  => 0 #> [1] 0 comp_err(1, 1, 0)  #  => 0 #> [1] 0  comp_err(1, 0, 1)  #  => 1 #> [1] 1 comp_err(1, 0, 0)  #  => 1 #> [1] 1  comp_err(0, 1, 1)  #  => 0 #> [1] 0 comp_err(0, 1, 0)  #  => 1 #> [1] 1  comp_err(0, 0, 1)  #  => 0 #> [1] 0 comp_err(0, 0, 0)  #  => 1 #> [1] 1"},{"path":"https://hneth.github.io/riskyr/reference/comp_fart.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a decision's false alarm rate from its specificity. — comp_fart","title":"Compute a decision's false alarm rate from its specificity. — comp_fart","text":"comp_fart conversion function takes specificity spec – given probability (.e., numeric value range 0 1) – input, returns corresponding false alarm rate fart – also probability – output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_fart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a decision's false alarm rate from its specificity. — comp_fart","text":"","code":"comp_fart(spec)"},{"path":"https://hneth.github.io/riskyr/reference/comp_fart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a decision's false alarm rate from its specificity. — comp_fart","text":"spec decision's specificity value spec probability.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_fart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a decision's false alarm rate from its specificity. — comp_fart","text":"decision's false alarm rate fart probability.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_fart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a decision's false alarm rate from its specificity. — comp_fart","text":"false alarm rate fart specificity spec complements (fart = (1 - spec)) features decision process (e.g., diagnostic test). function comp_fart complementary conversion function comp_spec uses generic function comp_complement.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_fart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a decision's false alarm rate from its specificity. — comp_fart","text":"","code":"comp_fart(2)                       # => NA + warning (beyond range) #> [1] NA comp_fart(1/3)                     # => 0.6666667 #> [1] 0.6666667 comp_fart(comp_complement(0.123))  # => 0.123 #> [1] 0.123"},{"path":"https://hneth.github.io/riskyr/reference/comp_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute frequencies from (3 essential) probabilities. — comp_freq","title":"Compute frequencies from (3 essential) probabilities. — comp_freq","text":"comp_freq computes frequencies (typically rounded integers) given 3 basic probabilities – prev, sens, spec – population N individuals. returns list 11 key frequencies freq output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute frequencies from (3 essential) probabilities. — comp_freq","text":"","code":"comp_freq(   prev = num$prev,   sens = num$sens,   spec = num$spec,   N = num$N,   round = TRUE,   sample = FALSE )"},{"path":"https://hneth.github.io/riskyr/reference/comp_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute frequencies from (3 essential) probabilities. — comp_freq","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). N number individuals population. N unknown (NA), suitable minimum value computed comp_min_N. round Boolean value determines whether frequency values rounded nearest integer. Default: round = TRUE. Note: Removed n_digits parameter:  Number digits frequency values rounded round = FALSE. Default: n_digits = 5. sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. Note: Sampling uses sample() returns integer values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute frequencies from (3 essential) probabilities. — comp_freq","text":"list freq containing 11 key frequency values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute frequencies from (3 essential) probabilities. — comp_freq","text":"addition prev, sens spec necessary arguments. complements mirt fart known, use wrapper function comp_freq_prob also accepts mirt fart inputs (requires entire set provided probabilities sufficient consistent). Alternatively, use comp_complement, comp_comp_pair, comp_complete_prob_set obtain 3 essential probabilities. comp_freq frequency counterpart probability function comp_prob. default, comp_freq wrapper function comp_freq_prob round frequencies nearest integers avoid decimal values freq (.e., round = TRUE default). frequencies rounded, probabilities computed freq may differ exact probabilities. Using option round = FALSE turns rounding. Key relationships probabilities frequencies: Three perspectives population: population N individuals can split 2 subsets frequencies 3 different ways:  condition: N = cond_true + cond_false frequency cond_true depends prevalence prev       frequency cond_false depends prevalence's complement 1 - prev. decision: N = dec_pos + dec_neg frequency dec_pos depends proportion positive decisions ppod       frequency dec_neg depends proportion negative decisions 1 - ppod. accuracy (.e., correspondence decision condition): N = dec_cor + dec_err perspective combines 2 pairs 4 essential probabilities (hi, mi, fa, cr). providing probabilities, population size N free parameter (independent essential probabilities prev, sens, spec). N unknown (NA), suitable minimum value can computed comp_min_N. Defining probabilities terms frequencies: Probabilities – determine, describe, defined – relationships frequencies. Thus, can computed ratios frequencies:  prevalence prev: prev = cond_true/N  =  (hi + mi) / (hi + mi + fa + cr) sensitivity sens: sens = hi/cond_true  =  hi / (hi + mi)  =  (1 - mirt) miss rate mirt: mirt = mi/cond_true  =  mi / (hi + mi)  =  (1 - sens) specificity spec: spec = cr/cond_false  =  cr / (fa + cr)  =  (1 - fart) false alarm rate fart: fart = fa/cond_false  =  fa / (fa + cr)  =  (1 - spec) proportion positive decisions ppod: ppod = dec_pos/N  =  (hi + fa) / (hi + mi + fa + cr) positive predictive value PPV: PPV = hi/dec_pos  =  hi / (hi + fa)  =  (1 - FDR) negative predictive value NPV: NPV = cr/dec_neg  =  cr / (mi + cr)  =  (1 - ) false detection rate FDR: FDR = fa/dec_pos  =  fa / (hi + fa)  =  (1 - PPV) false omission rate : = mi/dec_neg  =  mi / (mi + cr)  =  (1 - NPV) accuracy acc: acc = dec_cor/N  =  (hi + cr) / (hi + mi + fa + cr) rate hits, given accuracy p_acc_hi: p_acc_hi = hi/dec_cor = (1 - cr/dec_cor) rate false alarms, given inaccuracy p_err_fa: p_err_fa = fa/dec_err = (1 - mi/dec_err) Beware rounding sampling issues!    frequencies rounded (round = TRUE comp_freq)    sampled probabilities (sample = TRUE),    probabilities computed freq may differ    original exact probabilities. Functions translating representational formats: comp_prob_prob, comp_prob_freq, comp_freq_prob, comp_freq_freq (see documentation comp_prob_prob details).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute frequencies from (3 essential) probabilities. — comp_freq","text":"","code":"comp_freq()          # ok, using current defaults #> $N #> [1] 1000 #>  #> $cond_true #> [1] 250 #>  #> $cond_false #> [1] 750 #>  #> $dec_pos #> [1] 400 #>  #> $dec_neg #> [1] 600 #>  #> $dec_cor #> [1] 774 #>  #> $dec_err #> [1] 226 #>  #> $hi #> [1] 212 #>  #> $mi #> [1] 38 #>  #> $fa #> [1] 188 #>  #> $cr #> [1] 562 #>  length(comp_freq())  # 11 key frequencies #> [1] 11  # Rounding: comp_freq(prev = .5, sens = .5, spec = .5, N = 1)   # yields fa = 1 (see ?round for reason) #> $N #> [1] 1 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 1 #>  #> $dec_pos #> [1] 1 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 1 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 1 #>  #> $cr #> [1] 0 #>  comp_freq(prev = .1, sens = .9, spec = .8, N = 10)  # 1 hit (TP, rounded) #> $N #> [1] 10 #>  #> $cond_true #> [1] 1 #>  #> $cond_false #> [1] 9 #>  #> $dec_pos #> [1] 3 #>  #> $dec_neg #> [1] 7 #>  #> $dec_cor #> [1] 8 #>  #> $dec_err #> [1] 2 #>  #> $hi #> [1] 1 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 2 #>  #> $cr #> [1] 7 #>  comp_freq(prev = .1, sens = .9, spec = .8, N = 10, round = FALSE)    # hi = .9 #> $N #> [1] 10 #>  #> $cond_true #> [1] 1 #>  #> $cond_false #> [1] 9 #>  #> $dec_pos #> [1] 2.7 #>  #> $dec_neg #> [1] 7.3 #>  #> $dec_cor #> [1] 8.1 #>  #> $dec_err #> [1] 1.9 #>  #> $hi #> [1] 0.9 #>  #> $mi #> [1] 0.1 #>  #> $fa #> [1] 1.8 #>  #> $cr #> [1] 7.2 #>  comp_freq(prev = 1/3, sens = 6/7, spec = 2/3, N = 1, round = FALSE)  # hi = 0.2857143 #> $N #> [1] 1 #>  #> $cond_true #> [1] 0.3333333 #>  #> $cond_false #> [1] 0.6666667 #>  #> $dec_pos #> [1] 0.5079365 #>  #> $dec_neg #> [1] 0.4920635 #>  #> $dec_cor #> [1] 0.7301587 #>  #> $dec_err #> [1] 0.2698413 #>  #> $hi #> [1] 0.2857143 #>  #> $mi #> [1] 0.04761905 #>  #> $fa #> [1] 0.2222222 #>  #> $cr #> [1] 0.4444444 #>   # Sampling (from probabilistic description): comp_freq_prob(prev = .5, sens = .5, spec = .5, N = 100, sample = TRUE)  # freq values vary #> $N #> [1] 100 #>  #> $cond_true #> [1] 54 #>  #> $cond_false #> [1] 46 #>  #> $dec_pos #> [1] 51 #>  #> $dec_neg #> [1] 49 #>  #> $dec_cor #> [1] 55 #>  #> $dec_err #> [1] 45 #>  #> $hi #> [1] 30 #>  #> $mi #> [1] 24 #>  #> $fa #> [1] 21 #>  #> $cr #> [1] 25 #>   # Extreme cases: comp_freq(prev = 1, sens = 1, spec = 1, 100)  # ok, N hits (TP) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $N #> [1] 100 #>  #> $cond_true #> [1] 100 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 100 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 100 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 100 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq(prev = 1, sens = 1, spec = 0, 100)  # ok, N hits #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $N #> [1] 100 #>  #> $cond_true #> [1] 100 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 100 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 100 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 100 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq(prev = 1, sens = 0, spec = 1, 100)  # ok, N misses (FN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> $N #> [1] 100 #>  #> $cond_true #> [1] 100 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 0 #>  #> $dec_neg #> [1] 100 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 100 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 100 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq(prev = 1, sens = 0, spec = 0, 100)  # ok, N misses #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> $N #> [1] 100 #>  #> $cond_true #> [1] 100 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 0 #>  #> $dec_neg #> [1] 100 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 100 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 100 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq(prev = 0, sens = 1, spec = 1, 100)  # ok, N correct rejections (TN) #> Warning: Extreme case (prev = 0 & spec = 1): #>   N cr (TN) cases; 0 cond_true or dec_false cases; NPV = NaN. #> $N #> [1] 100 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 100 #>  #> $dec_pos #> [1] 0 #>  #> $dec_neg #> [1] 100 #>  #> $dec_cor #> [1] 100 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 100 #>  comp_freq(prev = 0, sens = 1, spec = 0, 100)  # ok, N false alarms (FP) #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> $N #> [1] 100 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 100 #>  #> $dec_pos #> [1] 100 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 100 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 100 #>  #> $cr #> [1] 0 #>   # Watch out for: comp_freq(prev = 1, sens = 1, spec = 1, N = NA)  # ok, but warning that N = 1 was computed #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: Unknown population size N. A suitable minimum value of N = 1 was computed. #> $N #> [1] 1 #>  #> $cond_true #> [1] 1 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 1 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 1 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 1 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq(prev = 1, sens = 1, spec = 1, N =  0)  # ok, but all 0 + warning (extreme case: N hits) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $N #> [1] 0 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 0 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq(prev = .5, sens = .5, spec = .5, N = 10, round = TRUE)   # ok, rounded (see mi and fa) #> $N #> [1] 10 #>  #> $cond_true #> [1] 5 #>  #> $cond_false #> [1] 5 #>  #> $dec_pos #> [1] 5 #>  #> $dec_neg #> [1] 5 #>  #> $dec_cor #> [1] 4 #>  #> $dec_err #> [1] 6 #>  #> $hi #> [1] 2 #>  #> $mi #> [1] 3 #>  #> $fa #> [1] 3 #>  #> $cr #> [1] 2 #>  comp_freq(prev = .5, sens = .5, spec = .5, N = 10, round = FALSE)  # ok, not rounded #> $N #> [1] 10 #>  #> $cond_true #> [1] 5 #>  #> $cond_false #> [1] 5 #>  #> $dec_pos #> [1] 5 #>  #> $dec_neg #> [1] 5 #>  #> $dec_cor #> [1] 5 #>  #> $dec_err #> [1] 5 #>  #> $hi #> [1] 2.5 #>  #> $mi #> [1] 2.5 #>  #> $fa #> [1] 2.5 #>  #> $cr #> [1] 2.5 #>   # Ways to fail: comp_freq(prev = NA,  sens = 1, spec = 1,  100)   # NAs + warning (prev NA) #> $N #> [1] NA #>  #> $cond_true #> [1] NA #>  #> $cond_false #> [1] NA #>  #> $dec_pos #> [1] NA #>  #> $dec_neg #> [1] NA #>  #> $dec_cor #> [1] NA #>  #> $dec_err #> [1] NA #>  #> $hi #> [1] NA #>  #> $mi #> [1] NA #>  #> $fa #> [1] NA #>  #> $cr #> [1] NA #>  comp_freq(prev = 1,  sens = NA, spec = 1,  100)   # NAs + warning (sens NA) #> $N #> [1] NA #>  #> $cond_true #> [1] NA #>  #> $cond_false #> [1] NA #>  #> $dec_pos #> [1] NA #>  #> $dec_neg #> [1] NA #>  #> $dec_cor #> [1] NA #>  #> $dec_err #> [1] NA #>  #> $hi #> [1] NA #>  #> $mi #> [1] NA #>  #> $fa #> [1] NA #>  #> $cr #> [1] NA #>  comp_freq(prev = 1,  sens = 1,  spec = NA, 100)   # NAs + warning (spec NA) #> $N #> [1] NA #>  #> $cond_true #> [1] NA #>  #> $cond_false #> [1] NA #>  #> $dec_pos #> [1] NA #>  #> $dec_neg #> [1] NA #>  #> $dec_cor #> [1] NA #>  #> $dec_err #> [1] NA #>  #> $hi #> [1] NA #>  #> $mi #> [1] NA #>  #> $fa #> [1] NA #>  #> $cr #> [1] NA #>  comp_freq(prev = 8,  sens = 1,  spec = 1,  100)   # NAs + warning (prev beyond range) #> $N #> [1] NA #>  #> $cond_true #> [1] NA #>  #> $cond_false #> [1] NA #>  #> $dec_pos #> [1] NA #>  #> $dec_neg #> [1] NA #>  #> $dec_cor #> [1] NA #>  #> $dec_err #> [1] NA #>  #> $hi #> [1] NA #>  #> $mi #> [1] NA #>  #> $fa #> [1] NA #>  #> $cr #> [1] NA #>  comp_freq(prev = 1,  sens = 8,  spec = 1,  100)   # NAs + warning (sens beyond range) #> $N #> [1] NA #>  #> $cond_true #> [1] NA #>  #> $cond_false #> [1] NA #>  #> $dec_pos #> [1] NA #>  #> $dec_neg #> [1] NA #>  #> $dec_cor #> [1] NA #>  #> $dec_err #> [1] NA #>  #> $hi #> [1] NA #>  #> $mi #> [1] NA #>  #> $fa #> [1] NA #>  #> $cr #> [1] NA #>"},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute frequencies from (4 essential) frequencies. — comp_freq_freq","title":"Compute frequencies from (4 essential) frequencies. — comp_freq_freq","text":"comp_freq_freq computes current frequency information 4 essential frequencies (hi, mi, fa, cr). returns list 11 frequencies freq population N individuals output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute frequencies from (4 essential) frequencies. — comp_freq_freq","text":"","code":"comp_freq_freq(hi = freq$hi, mi = freq$mi, fa = freq$fa, cr = freq$cr)"},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute frequencies from (4 essential) frequencies. — comp_freq_freq","text":"hi number hits hi (true positives). mi number misses mi (false negatives). fa number false alarms fa (false positives). cr number correct rejections cr (true negatives).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_freq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute frequencies from (4 essential) frequencies. — comp_freq_freq","text":"Key relationships frequencies probabilities (see documentation comp_freq comp_prob details): Three perspectives population: condition / decision / accuracy. Defining probabilities terms frequencies: Probabilities can computed ratios frequencies, beware rounding issues. Functions translating representational formats: comp_prob_prob, comp_prob_freq, comp_freq_prob, comp_freq_freq (see documentation comp_prob_prob details).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute frequencies from (4 essential) frequencies. — comp_freq_freq","text":"","code":"## Basics: comp_freq_freq() #> $N #> [1] 1000 #>  #> $cond_true #> [1] 250 #>  #> $cond_false #> [1] 750 #>  #> $dec_pos #> [1] 400 #>  #> $dec_neg #> [1] 600 #>  #> $dec_cor #> [1] NA #>  #> $dec_err #> [1] NA #>  #> $hi #> [1] 212 #>  #> $mi #> [1] 38 #>  #> $fa #> [1] 188 #>  #> $cr #> [1] 562 #>  all.equal(freq, comp_freq_freq())  # => should be TRUE #> [1] \"Component “dec_cor”: Modes: numeric, logical\"               #> [2] \"Component “dec_cor”: target is numeric, current is logical\" #> [3] \"Component “dec_err”: Modes: numeric, logical\"               #> [4] \"Component “dec_err”: target is numeric, current is logical\"  ## Circular chain: # 1. Current numeric parameters: num #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.85 #>  #> $spec #> [1] 0.75 #>  #> $fart #> [1] 0.25 #>  #> $N #> [1] 1000 #>   # 2. Compute all 10 probabilities in prob (from essential probabilities): prob <- comp_prob() prob #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.85 #>  #> $mirt #> [1] 0.15 #>  #> $spec #> [1] 0.75 #>  #> $fart #> [1] 0.25 #>  #> $ppod #> [1] 0.4 #>  #> $PPV #> [1] 0.53125 #>  #> $FDR #> [1] 0.46875 #>  #> $NPV #> [1] 0.9375 #>  #> $FOR #> [1] 0.0625 #>  #> $acc #> [1] 0.775 #>  #> $p_acc_hi #> [1] 0.2741935 #>  #> $p_err_fa #> [1] 0.8333333 #>   # 3. Compute 9 frequencies in freq from probabilities: freq <- comp_freq(round = FALSE)   # no rounding (to obtain same probabilities later) freq #> $N #> [1] 1000 #>  #> $cond_true #> [1] 250 #>  #> $cond_false #> [1] 750 #>  #> $dec_pos #> [1] 400 #>  #> $dec_neg #> [1] 600 #>  #> $dec_cor #> [1] 775 #>  #> $dec_err #> [1] 225 #>  #> $hi #> [1] 212.5 #>  #> $mi #> [1] 37.5 #>  #> $fa #> [1] 187.5 #>  #> $cr #> [1] 562.5 #>   # 4. Compute 9 frequencies AGAIN (but now from frequencies): freq_freq <- comp_freq_freq()  # 5. Check equality of results (steps 2. and 4.): all.equal(freq, freq_freq)  # => should be TRUE! #> [1] \"Component “dec_cor”: Modes: numeric, logical\"               #> [2] \"Component “dec_cor”: target is numeric, current is logical\" #> [3] \"Component “dec_err”: Modes: numeric, logical\"               #> [4] \"Component “dec_err”: target is numeric, current is logical\" #> [5] \"Component “hi”: Mean relative difference: 0.002352941\"      #> [6] \"Component “mi”: Mean relative difference: 0.01333333\"       #> [7] \"Component “fa”: Mean relative difference: 0.002666667\"      #> [8] \"Component “cr”: Mean relative difference: 0.0008888889\""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute frequencies from (3 essential) probabilities. — comp_freq_prob","title":"Compute frequencies from (3 essential) probabilities. — comp_freq_prob","text":"comp_freq_prob computes frequency information sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart). returns list 11 key frequencies (freq) output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute frequencies from (3 essential) probabilities. — comp_freq_prob","text":"","code":"comp_freq_prob(   prev = prob$prev,   sens = prob$sens,   mirt = NA,   spec = prob$spec,   fart = NA,   tol = 0.01,   N = freq$N,   round = TRUE,   sample = FALSE )"},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute frequencies from (3 essential) probabilities. — comp_freq_prob","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. tol numeric tolerance value is_complement. Default: tol = .01. N number individuals population. N unknown (NA), suitable minimum value computed comp_min_N. round Boolean value determines whether frequencies rounded nearest integer. Default: round = TRUE. sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. Note: Sampling uses sample() returns integer values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute frequencies from (3 essential) probabilities. — comp_freq_prob","text":"list freq containing 11 key frequency values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_prob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute frequencies from (3 essential) probabilities. — comp_freq_prob","text":"comp_freq_prob wrapper function basic function comp_freq, accepts 3 essential probabilities (.e., prev, sens, spec) inputs. Defaults constraints: Initial values: default, values prev, sens,    spec initialized probability information    currently contained prob. Similarly, population size N uses frequency    information currently contained freq default.    N unknown (NA),    suitable minimum value computed comp_min_N. Constraints: using comp_freq_prob arguments    mirt fart, complements    sens spec must either    valid complements (is_complement)    set NA. addition prev, sens    spec necessary arguments.    complements mirt fart    known, first use comp_complement,    comp_comp_pair, comp_complete_prob_set    compute 3 essential probabilities. Rounding: default, comp_freq_prob basic function    comp_freq round frequencies nearest integers    avoid decimal values freq    (.e., round = TRUE default). frequencies rounded, probabilities computed    freq may differ exact probabilities. Using option round = FALSE turns rounding. Key relationships frequencies probabilities (see documentation comp_freq comp_prob details): Three perspectives population: condition / decision / accuracy. Defining probabilities terms frequencies: Probabilities can computed ratios frequencies,   beware rounding sampling issues! Functions translating representational formats: comp_prob_prob, comp_prob_freq, comp_freq_prob, comp_freq_freq (see documentation comp_prob_prob details).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_freq_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute frequencies from (3 essential) probabilities. — comp_freq_prob","text":"","code":"# Basics: comp_freq_prob(prev = .1, sens = .9, spec = .8, N = 100)  # ok: hi = 9, ... cr = 72. #> $N #> [1] 100 #>  #> $cond_true #> [1] 10 #>  #> $cond_false #> [1] 90 #>  #> $dec_pos #> [1] 27 #>  #> $dec_neg #> [1] 73 #>  #> $dec_cor #> [1] 81 #>  #> $dec_err #> [1] 19 #>  #> $hi #> [1] 9 #>  #> $mi #> [1] 1 #>  #> $fa #> [1] 18 #>  #> $cr #> [1] 72 #>  # Same case with complements (using NAs to prevent defaults): comp_freq_prob(prev = .1, sens = NA, mirt = .1, spec = NA, fart = .2, N = 100)  # same result #> $N #> [1] 100 #>  #> $cond_true #> [1] 10 #>  #> $cond_false #> [1] 90 #>  #> $dec_pos #> [1] 27 #>  #> $dec_neg #> [1] 73 #>  #> $dec_cor #> [1] 81 #>  #> $dec_err #> [1] 19 #>  #> $hi #> [1] 9 #>  #> $mi #> [1] 1 #>  #> $fa #> [1] 18 #>  #> $cr #> [1] 72 #>   comp_freq_prob()                   # ok, using probability info currently contained in prob #> $N #> [1] 1000 #>  #> $cond_true #> [1] 250 #>  #> $cond_false #> [1] 750 #>  #> $dec_pos #> [1] 400 #>  #> $dec_neg #> [1] 600 #>  #> $dec_cor #> [1] 774 #>  #> $dec_err #> [1] 226 #>  #> $hi #> [1] 212 #>  #> $mi #> [1] 38 #>  #> $fa #> [1] 188 #>  #> $cr #> [1] 562 #>  length(comp_freq_prob())           # list of 11 key frequencies #> [1] 11 all.equal(freq, comp_freq_prob())  # TRUE, unless prob has been changed after computing freq #> [1] TRUE freq <- comp_freq_prob()           # computes frequencies and stores them in freq  # Ways to work: comp_freq_prob(prev = 1, sens = 1, spec = 1, N = 101)  # ok + warning: N hits (TP) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $N #> [1] 101 #>  #> $cond_true #> [1] 101 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 101 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 101 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 101 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>   # Same case with complements (note NAs to prevent default arguments): comp_freq_prob(prev = 1, sens = NA, mirt = 0, spec = NA, fart = 0, N = 101) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $N #> [1] 101 #>  #> $cond_true #> [1] 101 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 101 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 101 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 101 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>   comp_freq_prob(prev = 1, sens = 1, spec = 0, N = 102)  # ok + warning: N hits (TP) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $N #> [1] 102 #>  #> $cond_true #> [1] 102 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 102 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 102 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 102 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq_prob(prev = 1, sens = 0, spec = 1, N = 103)  # ok + warning: N misses (FN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> $N #> [1] 103 #>  #> $cond_true #> [1] 103 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 0 #>  #> $dec_neg #> [1] 103 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 103 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 103 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq_prob(prev = 1, sens = 0, spec = 0, N = 104)  # ok + warning: N misses (FN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> $N #> [1] 104 #>  #> $cond_true #> [1] 104 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 0 #>  #> $dec_neg #> [1] 104 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 104 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 104 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq_prob(prev = 0, sens = 1, spec = 1, N = 105)  # ok + warning: N correct rejections (TN) #> Warning: Extreme case (prev = 0 & spec = 1): #>   N cr (TN) cases; 0 cond_true or dec_false cases; NPV = NaN. #> $N #> [1] 105 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 105 #>  #> $dec_pos #> [1] 0 #>  #> $dec_neg #> [1] 105 #>  #> $dec_cor #> [1] 105 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 105 #>   comp_freq_prob(prev = 0, sens = 1, spec = 0, N = 106)  # ok + warning: N false alarms (FP) #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> $N #> [1] 106 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 106 #>  #> $dec_pos #> [1] 106 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 106 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 106 #>  #> $cr #> [1] 0 #>  # Same case with complements (using NAs to prevent defaults): comp_freq_prob(prev = 0, sens = NA, mirt = 0,                spec = NA, fart = 1, N = 106)  # ok + warning: N false alarms (FP) #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> $N #> [1] 106 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 106 #>  #> $dec_pos #> [1] 106 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 106 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 106 #>  #> $cr #> [1] 0 #>   # Rounding: comp_freq_prob(prev = .5, sens = .5, spec = .5, N = 1)   # yields fa = 1 (see ?round for reason) #> $N #> [1] 1 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 1 #>  #> $dec_pos #> [1] 1 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 1 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 1 #>  #> $cr #> [1] 0 #>  comp_freq_prob(prev = .1, sens = .9, spec = .8, N = 10)  # 1 hit (TP, rounded) #> $N #> [1] 10 #>  #> $cond_true #> [1] 1 #>  #> $cond_false #> [1] 9 #>  #> $dec_pos #> [1] 3 #>  #> $dec_neg #> [1] 7 #>  #> $dec_cor #> [1] 8 #>  #> $dec_err #> [1] 2 #>  #> $hi #> [1] 1 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 2 #>  #> $cr #> [1] 7 #>  comp_freq_prob(prev = .1, sens = .9, spec = .8, N = 10, round = FALSE)  # hi = .9 #> $N #> [1] 10 #>  #> $cond_true #> [1] 1 #>  #> $cond_false #> [1] 9 #>  #> $dec_pos #> [1] 2.7 #>  #> $dec_neg #> [1] 7.3 #>  #> $dec_cor #> [1] 8.1 #>  #> $dec_err #> [1] 1.9 #>  #> $hi #> [1] 0.9 #>  #> $mi #> [1] 0.1 #>  #> $fa #> [1] 1.8 #>  #> $cr #> [1] 7.2 #>   # Sampling (from probabilistic description): comp_freq_prob(prev = .5, sens = .5, spec = .5, N = 100, sample = TRUE)  # freq values vary #> $N #> [1] 100 #>  #> $cond_true #> [1] 55 #>  #> $cond_false #> [1] 45 #>  #> $dec_pos #> [1] 58 #>  #> $dec_neg #> [1] 42 #>  #> $dec_cor #> [1] 53 #>  #> $dec_err #> [1] 47 #>  #> $hi #> [1] 33 #>  #> $mi #> [1] 22 #>  #> $fa #> [1] 25 #>  #> $cr #> [1] 20 #>   # Watch out for: comp_freq_prob(prev = 1, sens = 1, spec = 1, N = NA)  # ok + warning: N = 1 computed #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: Unknown population size N. A suitable minimum value of N = 1 was computed. #> $N #> [1] 1 #>  #> $cond_true #> [1] 1 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 1 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 1 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 1 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq_prob(prev = 1, sens = 1, spec = 1, N =  0)  # ok, but all 0 + warning (NPV = NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $N #> [1] 0 #>  #> $cond_true #> [1] 0 #>  #> $cond_false #> [1] 0 #>  #> $dec_pos #> [1] 0 #>  #> $dec_neg #> [1] 0 #>  #> $dec_cor #> [1] 0 #>  #> $dec_err #> [1] 0 #>  #> $hi #> [1] 0 #>  #> $mi #> [1] 0 #>  #> $fa #> [1] 0 #>  #> $cr #> [1] 0 #>  comp_freq_prob(prev = .5, sens = .5, spec = .5, N = 10, round = TRUE)  # ok, but all rounded #> $N #> [1] 10 #>  #> $cond_true #> [1] 5 #>  #> $cond_false #> [1] 5 #>  #> $dec_pos #> [1] 5 #>  #> $dec_neg #> [1] 5 #>  #> $dec_cor #> [1] 4 #>  #> $dec_err #> [1] 6 #>  #> $hi #> [1] 2 #>  #> $mi #> [1] 3 #>  #> $fa #> [1] 3 #>  #> $cr #> [1] 2 #>  comp_freq_prob(prev = .5, sens = .5, spec = .5, N = 10, round = FALSE) # ok, but not rounded #> $N #> [1] 10 #>  #> $cond_true #> [1] 5 #>  #> $cond_false #> [1] 5 #>  #> $dec_pos #> [1] 5 #>  #> $dec_neg #> [1] 5 #>  #> $dec_cor #> [1] 5 #>  #> $dec_err #> [1] 5 #>  #> $hi #> [1] 2.5 #>  #> $mi #> [1] 2.5 #>  #> $fa #> [1] 2.5 #>  #> $cr #> [1] 2.5 #>   # Ways to fail: comp_freq_prob(prev = NA, sens = 1, spec = 1, 100)  # NAs + no warning (prev NA) #> Warning: Please enter a valid set of essential probabilities. comp_freq_prob(prev = 1, sens = NA, spec = 1, 100)  # NAs + no warning (sens NA) #> Warning: Please enter a valid set of essential probabilities. comp_freq_prob(prev = 1, sens = 1, spec = NA, 100)  # NAs + no warning (spec NA) #> Warning: Please enter a valid set of essential probabilities. comp_freq_prob(prev = 8, sens = 1, spec = 1,  100)  # NAs + warning (prev beyond range) #> Warning: Please enter a valid set of essential probabilities. comp_freq_prob(prev = 1, sens = 8, spec = 1,  100)  # NAs + warning (sens & spec beyond range) #> Warning: Please enter a valid set of essential probabilities."},{"path":"https://hneth.github.io/riskyr/reference/comp_min_N.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a suitable minimum population size value N. — comp_min_N","title":"Compute a suitable minimum population size value N. — comp_min_N","text":"comp_min_N computes population size value N (integer power 10) frequencies 4 combinations conditions decisions (.e., cells confusion table, center row boxes frequency prism) reach exceed minimum value min_freq given basic parameters prev, sens, spec (spec = 1 - fart).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_min_N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a suitable minimum population size value N. — comp_min_N","text":"","code":"comp_min_N(prev, sens, spec, min_freq = 1)"},{"path":"https://hneth.github.io/riskyr/reference/comp_min_N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a suitable minimum population size value N. — comp_min_N","text":"prev condition's prevalence value prev (.e., probability condition TRUE). sens decision's sensitivity value  sens (.e., conditional probability positive decision provided condition TRUE). spec specificity value  spec (.e., conditional probability negative decision provided condition FALSE). min_freq minimum frequency combination condition decision (.e., hits, misses, false alarms, correct rejections). Default: min_freq = 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_min_N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a suitable minimum population size value N. — comp_min_N","text":"integer value N (power 10).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_min_N.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a suitable minimum population size value N. — comp_min_N","text":"Using function helps avoiding excessively small decimal values categories – especially hi, mi, fa, cr – expressing combinations conditions decisions natural frequencies. values zero (0) tolerable, function increases N (powers 10) current value frequency (cell confusion table leaf frequency tree) positive min_freq. default, comp_freq_prob comp_freq round frequencies nearest integers avoid decimal values freq (.e., round = TRUE default). Using option round = FALSE turns rounding.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_min_N.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a suitable minimum population size value N. — comp_min_N","text":"","code":"comp_min_N(0, 0, 0)  # => 1 #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> [1] 1 comp_min_N(1, 1, 1)  # => 1 #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> [1] 1  comp_min_N(1, 1, 1, min_freq = 10)  # =>  10 #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> [1] 10 comp_min_N(1, 1, 1, min_freq = 99)  # => 100 #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> [1] 100  comp_min_N(.1, .1, .1)        # =>       100 = 10^2 #> [1] 100 comp_min_N(.001, .1, .1)      # =>    10 000 = 10^4 #> [1] 10000 comp_min_N(.001, .001, .1)    # => 1 000 000 = 10^6 #> [1] 1e+06 comp_min_N(.001, .001, .001)  # => 1 000 000 = 10^6 #> [1] 1e+06"},{"path":"https://hneth.github.io/riskyr/reference/comp_mirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a decision's miss rate from its sensitivity. — comp_mirt","title":"Compute a decision's miss rate from its sensitivity. — comp_mirt","text":"comp_mirt conversion function takes sensitivity sens – given probability (.e., numeric value range 0 1) – input, returns corresponding miss rate mirt – also probability – output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_mirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a decision's miss rate from its sensitivity. — comp_mirt","text":"","code":"comp_mirt(sens)"},{"path":"https://hneth.github.io/riskyr/reference/comp_mirt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a decision's miss rate from its sensitivity. — comp_mirt","text":"sens decision's sensitivity sens probability.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_mirt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a decision's miss rate from its sensitivity. — comp_mirt","text":"decision's miss rate mirt probability.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_mirt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a decision's miss rate from its sensitivity. — comp_mirt","text":"miss rate mirt sensitivity sens complements (mirt = (1 - sens)) features decision process (e.g., diagnostic test). function comp_mirt complementary conversion function comp_sens uses generic function comp_complement.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_mirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a decision's miss rate from its sensitivity. — comp_mirt","text":"","code":"comp_mirt(2)                       # => NA + warning (beyond range) #> [1] NA comp_mirt(1/3)                     # => 0.6666667 #> [1] 0.6666667 comp_mirt(comp_complement(0.123))  # => 0.123 #> [1] 0.123"},{"path":"https://hneth.github.io/riskyr/reference/comp_popu.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a population table (data) from frequencies (description). — comp_popu","title":"Compute a population table (data) from frequencies (description). — comp_popu","text":"comp_popu computes table popu (R data frame) current frequency information (contained freq).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_popu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a population table (data) from frequencies (description). — comp_popu","text":"","code":"comp_popu(   hi = freq$hi,   mi = freq$mi,   fa = freq$fa,   cr = freq$cr,   cond_lbl = txt$cond_lbl,   cond_true_lbl = txt$cond_true_lbl,   cond_false_lbl = txt$cond_false_lbl,   dec_lbl = txt$dec_lbl,   dec_pos_lbl = txt$dec_pos_lbl,   dec_neg_lbl = txt$dec_neg_lbl,   sdt_lbl = txt$sdt_lbl,   hi_lbl = txt$hi_lbl,   mi_lbl = txt$mi_lbl,   fa_lbl = txt$fa_lbl,   cr_lbl = txt$cr_lbl )"},{"path":"https://hneth.github.io/riskyr/reference/comp_popu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Compute a population table (data) from frequencies (description). — comp_popu","text":"object class data.frame N rows 3 columns (e.g., \"X/truth/cd\", \"Y/test/dc\", \"SDT/cell/class\").","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_popu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a population table (data) from frequencies (description). — comp_popu","text":"hi number hits hi (true positives). mi number misses mi (false negatives). fa number false alarms fa (false positives). cr number correct rejections cr (true negatives). cond_lbl Text label condition dimension (\"cd\" perspective). cond_true_lbl Text label cond_true cases. cond_false_lbl Text label cond_false cases. dec_lbl Text label decision dimension (\"dc\" perspective). dec_pos_lbl Text label dec_pos cases. dec_neg_lbl Text label dec_neg cases. sdt_lbl Text label 4 cases/combinations (SDT classifications). hi_lbl Text label hi cases. mi_lbl Text label mi cases. fa_lbl Text label fa cases. cr_lbl Text label cr cases.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_popu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a population table (data) from frequencies (description). — comp_popu","text":"data frame popu containing N rows (individual cases) 3 columns (e.g., \"X/truth/cd\", \"Y/test/dc\", \"SDT/cell/class\"). encoded ordered factors (2, 2, 4 levels, respectively).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_popu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a population table (data) from frequencies (description). — comp_popu","text":"default, comp_popu uses text settings contained txt. visualization current population popu provided plot_icons.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_popu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a population table (data) from frequencies (description). — comp_popu","text":"","code":"popu <- comp_popu()  # => initializes popu (with current values of freq and txt) dim(popu)            # => N x 3 #> [1] 1000    3 head(popu) #>   True condition  Outcome Cases #> 1        present positive    TP #> 2        present positive    TP #> 3        present positive    TP #> 4        present positive    TP #> 5        present positive    TP #> 6        present positive    TP  # (A) Diagnostic/screening scenario (using default labels): comp_popu(hi = 4, mi = 1, fa = 2, cr = 3)  # => computes a table of N = 10 cases. #>    True condition  Outcome Cases #> 1         present positive    TP #> 2         present positive    TP #> 3         present positive    TP #> 4         present positive    TP #> 5         present negative    FN #> 6          absent positive    FP #> 7          absent positive    FP #> 8          absent negative    TN #> 9          absent negative    TN #> 10         absent negative    TN  # (B) Intervention/treatment scenario: comp_popu(hi = 3, mi = 2, fa = 1, cr = 4,           cond_lbl = \"Treatment\", cond_true_lbl = \"pill\", cond_false_lbl = \"placebo\",           dec_lbl = \"Health status\", dec_pos_lbl = \"healthy\", dec_neg_lbl = \"sick\") #>    Treatment Health status Cases #> 1       pill       healthy    TP #> 2       pill       healthy    TP #> 3       pill       healthy    TP #> 4       pill          sick    FN #> 5       pill          sick    FN #> 6    placebo       healthy    FP #> 7    placebo          sick    TN #> 8    placebo          sick    TN #> 9    placebo          sick    TN #> 10   placebo          sick    TN  # (C) Prevention scenario (e.g., vaccination): comp_popu(hi = 3, mi = 2, fa = 1, cr = 4,           cond_lbl = \"Vaccination\", cond_true_lbl = \"yes\", cond_false_lbl = \"no\",           dec_lbl = \"Disease\", dec_pos_lbl = \"no flu\", dec_neg_lbl = \"flu\") #>    Vaccination Disease Cases #> 1          yes  no flu    TP #> 2          yes  no flu    TP #> 3          yes  no flu    TP #> 4          yes     flu    FN #> 5          yes     flu    FN #> 6           no  no flu    FP #> 7           no     flu    TN #> 8           no     flu    TN #> 9           no     flu    TN #> 10          no     flu    TN"},{"path":"https://hneth.github.io/riskyr/reference/comp_ppod.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the proportion of positive decisions (ppod) from probabilities. — comp_ppod","title":"Compute the proportion of positive decisions (ppod) from probabilities. — comp_ppod","text":"comp_ppod computes proportion positive decisions ppod 3 essential probabilities prev, sens, spec.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_ppod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the proportion of positive decisions (ppod) from probabilities. — comp_ppod","text":"","code":"comp_ppod(prev, sens, spec)"},{"path":"https://hneth.github.io/riskyr/reference/comp_ppod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the proportion of positive decisions (ppod) from probabilities. — comp_ppod","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_ppod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the proportion of positive decisions (ppod) from probabilities. — comp_ppod","text":"proportion positive decisions ppod probability. warning provided NaN values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_ppod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the proportion of positive decisions (ppod) from probabilities. — comp_ppod","text":"comp_ppod uses probabilities (frequencies) inputs returns proportion (probability) without rounding. Definition: ppod proportion (probability) positive decisions: ppod = dec_pos/N = (hi + fa)/(hi + mi + fa + cr) Values range 0 (negative decisions) 1 (positive decisions). Importantly, positive decisions dec_pos necessarily correct decisions dec_cor.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_ppod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the proportion of positive decisions (ppod) from probabilities. — comp_ppod","text":"","code":"# (1) ways to work: comp_ppod(.10, .200, .300)  # => ppod = 0.65 #> [1] 0.65 comp_ppod(.50, .333, .666)  # => ppod = 0.3335 #> [1] 0.3335  # (2) watch out for vectors: prev <- seq(0, 1, .1) comp_ppod(prev, .8, .5)  # => 0.50 0.53 0.56 0.59 0.62 0.65 0.68 0.71 0.74 0.77 0.80 #>  [1] 0.50 0.53 0.56 0.59 0.62 0.65 0.68 0.71 0.74 0.77 0.80 comp_ppod(prev,  0,  1)  # => 0 0 0 0 0 0 0 0 0 0 0 #>  [1] 0 0 0 0 0 0 0 0 0 0 0  # (3) watch out for extreme values: comp_ppod(1, 1, 1)  #  => 1 #> [1] 1 comp_ppod(1, 1, 0)  #  => 1 #> [1] 1  comp_ppod(1, 0, 1)  #  => 0 #> [1] 0 comp_ppod(1, 0, 0)  #  => 0 #> [1] 0  comp_ppod(0, 1, 1)  #  => 0 #> [1] 0 comp_ppod(0, 1, 0)  #  => 1 #> [1] 1  comp_ppod(0, 0, 1)  #  => 0 #> [1] 0 comp_ppod(0, 0, 0)  #  => 1 #> [1] 1"},{"path":"https://hneth.github.io/riskyr/reference/comp_prev.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the condition's prevalence (baseline probability) from frequencies. — comp_prev","title":"Compute the condition's prevalence (baseline probability) from frequencies. — comp_prev","text":"comp_prev computes condition's prevalence value prev (baseline probability) 4 essential frequencies (hi, mi, fa, cr).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the condition's prevalence (baseline probability) from frequencies. — comp_prev","text":"","code":"comp_prev(hi = freq$hi, mi = freq$mi, fa = freq$fa, cr = freq$cr)"},{"path":"https://hneth.github.io/riskyr/reference/comp_prev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the condition's prevalence (baseline probability) from frequencies. — comp_prev","text":"hi number hits hi (true positives). mi number misses mi (false negatives). fa number false alarms fa (false positives). cr number correct rejections cr (true negatives).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the condition's prevalence (baseline probability) from frequencies. — comp_prev","text":"condition's prevalence value prev probability condition TRUE. probability prev can computed frequencies ratio cond_true (.e., hi + mi) divided N (.e., hi + mi + fa + cr): prev = cond_true/N = (hi + mi)/(hi + mi + fa + cr)","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probabilities from (3 essential) probabilities. — comp_prob","title":"Compute probabilities from (3 essential) probabilities. — comp_prob","text":"comp_prob computes current probability information 3 essential probabilities (prev, sens mirt, spec fart). returns list 13 key probabilities prob output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probabilities from (3 essential) probabilities. — comp_prob","text":"","code":"comp_prob(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   tol = 0.01 )"},{"path":"https://hneth.github.io/riskyr/reference/comp_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probabilities from (3 essential) probabilities. — comp_prob","text":"prev condition's prevalence value prev (.e., probability condition TRUE). sens decision's sensitivity value sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate value mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. tol numeric tolerance value is_complement. Default: tol = .01.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute probabilities from (3 essential) probabilities. — comp_prob","text":"list prob containing 13 key probability values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute probabilities from (3 essential) probabilities. — comp_prob","text":"comp_prob assumes sufficient consistent set essential probabilities (.e., prev either sens complement mirt, either spec complement fart) provided. comp_prob computes returns full set basic various derived probabilities (e.g., probability positive decision ppod, probability correct decision acc, predictive values PPV NPV, well complements FDR ) output list prob. Extreme probabilities (sets containing two probabilities 0 1) may yield unexpected values (e.g., predictive values PPV NPV turning NaN is_extreme_prob_set evaluates TRUE). comp_prob probability counterpart frequency function comp_freq. Key relationships probabilities frequencies: Three perspectives population: population N individuals can split 2 subsets frequencies 3 different ways:  condition: N = cond_true + cond_false frequency cond_true depends prevalence prev       frequency cond_false depends prevalence's complement 1 - prev. decision: N = dec_pos + dec_neg frequency dec_pos depends proportion positive decisions ppod       frequency dec_neg depends proportion negative decisions 1 - ppod. accuracy (.e., correspondence decision condition): N = dec_cor + dec_err perspective combines 2 pairs 4 essential probabilities (hi, mi, fa, cr). providing probabilities, population size N free parameter (independent essential probabilities prev, sens, spec). N unknown (NA), suitable minimum value can computed comp_min_N. Defining probabilities terms frequencies: Probabilities – determine, describe, defined – relationships frequencies. Thus, can computed ratios frequencies:  prevalence prev: prev = cond_true/N  =  (hi + mi) / (hi + mi + fa + cr) sensitivity sens: sens = hi/cond_true  =  hi / (hi + mi)  =  (1 - mirt) miss rate mirt: mirt = mi/cond_true  =  mi / (hi + mi)  =  (1 - sens) specificity spec: spec = cr/cond_false  =  cr / (fa + cr)  =  (1 - fart) false alarm rate fart: fart = fa/cond_false  =  fa / (fa + cr)  =  (1 - spec) proportion positive decisions ppod: ppod = dec_pos/N  =  (hi + fa) / (hi + mi + fa + cr) positive predictive value PPV: PPV = hi/dec_pos  =  hi / (hi + fa)  =  (1 - FDR) negative predictive value NPV: NPV = cr/dec_neg  =  cr / (mi + cr)  =  (1 - ) false detection rate FDR: FDR = fa/dec_pos  =  fa / (hi + fa)  =  (1 - PPV) false omission rate : = mi/dec_neg  =  mi / (mi + cr)  =  (1 - NPV) accuracy acc: acc = dec_cor/N  =  (hi + cr) / (hi + mi + fa + cr) rate hits, given accuracy p_acc_hi: p_acc_hi = hi/dec_cor = (1 - cr/dec_cor) rate false alarms, given inaccuracy p_err_fa: p_err_fa = fa/dec_err = (1 - mi/dec_err) Note: frequencies rounded (round = TRUE comp_freq),    probabilities computed freq may differ exact probabilities. Functions translating representational formats: comp_prob_prob, comp_prob_freq, comp_freq_prob, comp_freq_freq (see documentation comp_prob_prob details).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute probabilities from (3 essential) probabilities. — comp_prob","text":"","code":"# Basics: comp_prob(prev = .11, sens = .88, spec = .77)                        # => ok: PPV = 0.3210614 #> $prev #> [1] 0.11 #>  #> $sens #> [1] 0.88 #>  #> $mirt #> [1] 0.12 #>  #> $spec #> [1] 0.77 #>  #> $fart #> [1] 0.23 #>  #> $ppod #> [1] 0.3015 #>  #> $PPV #> [1] 0.3210614 #>  #> $FDR #> [1] 0.6789386 #>  #> $NPV #> [1] 0.9811024 #>  #> $FOR #> [1] 0.01889764 #>  #> $acc #> [1] 0.7821 #>  #> $p_acc_hi #> [1] 0.1237693 #>  #> $p_err_fa #> [1] 0.9394218 #>  comp_prob(prev = .11, sens = NA, mirt = .12, spec = NA, fart = .23)  # => ok: PPV = 0.3210614 #> $prev #> [1] 0.11 #>  #> $sens #> [1] 0.88 #>  #> $mirt #> [1] 0.12 #>  #> $spec #> [1] 0.77 #>  #> $fart #> [1] 0.23 #>  #> $ppod #> [1] 0.3015 #>  #> $PPV #> [1] 0.3210614 #>  #> $FDR #> [1] 0.6789386 #>  #> $NPV #> [1] 0.9811024 #>  #> $FOR #> [1] 0.01889764 #>  #> $acc #> [1] 0.7821 #>  #> $p_acc_hi #> [1] 0.1237693 #>  #> $p_err_fa #> [1] 0.9394218 #>  comp_prob()          # => ok, using current defaults #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.85 #>  #> $mirt #> [1] 0.15 #>  #> $spec #> [1] 0.75 #>  #> $fart #> [1] 0.25 #>  #> $ppod #> [1] 0.4 #>  #> $PPV #> [1] 0.53125 #>  #> $FDR #> [1] 0.46875 #>  #> $NPV #> [1] 0.9375 #>  #> $FOR #> [1] 0.0625 #>  #> $acc #> [1] 0.775 #>  #> $p_acc_hi #> [1] 0.2741935 #>  #> $p_err_fa #> [1] 0.8333333 #>  length(comp_prob())  # => 13 probabilities #> [1] 13  # Ways to work: comp_prob(.99, sens = .99, spec = .99)              # => ok: PPV = 0.999898 #> $prev #> [1] 0.99 #>  #> $sens #> [1] 0.99 #>  #> $mirt #> [1] 0.01 #>  #> $spec #> [1] 0.99 #>  #> $fart #> [1] 0.01 #>  #> $ppod #> [1] 0.9802 #>  #> $PPV #> [1] 0.999898 #>  #> $FDR #> [1] 0.00010202 #>  #> $NPV #> [1] 0.5 #>  #> $FOR #> [1] 0.5 #>  #> $acc #> [1] 0.99 #>  #> $p_acc_hi #> [1] 0.99 #>  #> $p_err_fa #> [1] 0.01 #>  comp_prob(.99, sens = .90, spec = NA, fart = .10)   # => ok: PPV = 0.9988789 #> $prev #> [1] 0.99 #>  #> $sens #> [1] 0.9 #>  #> $mirt #> [1] 0.1 #>  #> $spec #> [1] 0.9 #>  #> $fart #> [1] 0.1 #>  #> $ppod #> [1] 0.892 #>  #> $PPV #> [1] 0.9988789 #>  #> $FDR #> [1] 0.001121076 #>  #> $NPV #> [1] 0.08333333 #>  #> $FOR #> [1] 0.9166667 #>  #> $acc #> [1] 0.9 #>  #> $p_acc_hi #> [1] 0.99 #>  #> $p_err_fa #> [1] 0.01 #>   # Watch out for extreme cases: comp_prob(1, sens = 0, spec = 1)      # => ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob(1, sens = 0, spec = 0)      # => ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob(1, sens = 0, spec = NA, fart = 0)  # => ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob(1, sens = 0, spec = NA, fart = 1)  # => ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>   # Watch out for extreme cases: comp_prob(1, sens = 0, spec = 1)      # => ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob(1, sens = 0, spec = 0)      # => ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob(1, sens = 0, spec = NA, fart = 0)  # => ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob(1, sens = 0, spec = NA, fart = 1)  # => ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>   comp_prob(1, sens = 1, spec = 0)      # => ok, but with warnings (as NPV & FOR are NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $mirt #> [1] 0 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 1 #>  #> $PPV #> [1] 1 #>  #> $FDR #> [1] 0 #>  #> $NPV #> [1] NaN #>  #> $FOR #> [1] NaN #>  #> $acc #> [1] 1 #>  #> $p_acc_hi #> [1] 1 #>  #> $p_err_fa #> [1] NaN #>  comp_prob(1, sens = 1, spec = 1)      # => ok, but with warnings (as NPV & FOR are NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $mirt #> [1] 0 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 1 #>  #> $PPV #> [1] 1 #>  #> $FDR #> [1] 0 #>  #> $NPV #> [1] NaN #>  #> $FOR #> [1] NaN #>  #> $acc #> [1] 1 #>  #> $p_acc_hi #> [1] 1 #>  #> $p_err_fa #> [1] NaN #>  comp_prob(1, sens = 1, spec = NA, fart = 0)  # => ok, but with warnings (as NPV & FOR are NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $mirt #> [1] 0 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 1 #>  #> $PPV #> [1] 1 #>  #> $FDR #> [1] 0 #>  #> $NPV #> [1] NaN #>  #> $FOR #> [1] NaN #>  #> $acc #> [1] 1 #>  #> $p_acc_hi #> [1] 1 #>  #> $p_err_fa #> [1] NaN #>  comp_prob(1, sens = 1, spec = NA, fart = 1)  # => ok, but with warnings (as NPV & FOR are NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $mirt #> [1] 0 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 1 #>  #> $PPV #> [1] 1 #>  #> $FDR #> [1] 0 #>  #> $NPV #> [1] NaN #>  #> $FOR #> [1] NaN #>  #> $acc #> [1] 1 #>  #> $p_acc_hi #> [1] 1 #>  #> $p_err_fa #> [1] NaN #>   # Ways to fail: comp_prob(NA, 1, 1, NA)  # => only warning: invalid set (prev not numeric) #> Warning: Invalid probabilities. Please enter a valid set of essential probabilities. comp_prob(8,  1, 1, NA)  # => only warning: prev no probability #> Warning: Invalid probabilities. Please enter a valid set of essential probabilities. comp_prob(1,  8, 1, NA)  # => only warning: sens no probability #> Warning: Invalid probabilities. Please enter a valid set of essential probabilities. comp_prob(1,  1, 1,  1)  # => only warning: is_complement not in tolerated range #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> Warning: Invalid probabilities. Please enter a valid set of essential probabilities."},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probabilities from (4 essential) frequencies. — comp_prob_freq","title":"Compute probabilities from (4 essential) frequencies. — comp_prob_freq","text":"comp_prob_freq computes current probability information 4 essential frequencies (hi, mi, fa, cr). returns list 11 frequencies freq population N individuals output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probabilities from (4 essential) frequencies. — comp_prob_freq","text":"","code":"comp_prob_freq(hi = freq$hi, mi = freq$mi, fa = freq$fa, cr = freq$cr)"},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probabilities from (4 essential) frequencies. — comp_prob_freq","text":"hi number hits hi (true positives). mi number misses mi (false negatives). fa number false alarms fa (false positives). cr number correct rejections cr (true negatives).","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_freq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute probabilities from (4 essential) frequencies. — comp_prob_freq","text":"Key relationships frequencies probabilities (see documentation comp_freq comp_prob details): Three perspectives population: condition / decision / accuracy. Defining probabilities terms frequencies: Probabilities can computed ratios frequencies, beware rounding issues. Functions translating representational formats: comp_prob_prob, comp_prob_freq, comp_freq_prob, comp_freq_freq (see documentation comp_prob_prob details).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute probabilities from (4 essential) frequencies. — comp_prob_freq","text":"","code":"## Basics: comp_prob_freq()  # => computes prob from current freq #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.848 #>  #> $mirt #> [1] 0.152 #>  #> $spec #> [1] 0.7493333 #>  #> $fart #> [1] 0.2506667 #>  #> $ppod #> [1] 0.4 #>  #> $PPV #> [1] 0.53 #>  #> $FDR #> [1] 0.47 #>  #> $NPV #> [1] 0.9366667 #>  #> $FOR #> [1] 0.06333333 #>  #> $acc #> [1] 0.774 #>  #> $p_acc_hi #> [1] 0.2739018 #>  #> $p_err_fa #> [1] 0.8318584 #>   ## Beware of rounding: all.equal(prob, comp_prob_freq())  # => would be TRUE (IF freq were NOT rounded)! #>  [1] \"Component “sens”: Mean relative difference: 0.002352941\"     #>  [2] \"Component “mirt”: Mean relative difference: 0.01333333\"      #>  [3] \"Component “spec”: Mean relative difference: 0.0008888889\"    #>  [4] \"Component “fart”: Mean relative difference: 0.002666667\"     #>  [5] \"Component “PPV”: Mean relative difference: 0.002352941\"      #>  [6] \"Component “FDR”: Mean relative difference: 0.002666667\"      #>  [7] \"Component “NPV”: Mean relative difference: 0.0008888889\"     #>  [8] \"Component “FOR”: Mean relative difference: 0.01333333\"       #>  [9] \"Component “acc”: Mean relative difference: 0.001290323\"      #> [10] \"Component “p_acc_hi”: Mean relative difference: 0.001063991\" #> [11] \"Component “p_err_fa”: Mean relative difference: 0.001769912\" fe <- comp_freq(round = FALSE)     # compute exact freq (not rounded) all.equal(prob, comp_prob_freq(fe$hi, fe$mi, fe$fa, fe$cr))  # is TRUE (qed). #> [1] TRUE  ## Explain by circular chain (compute prob 1. from num and 2. from freq) # 0. Inspect current numeric parameters: num #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.85 #>  #> $spec #> [1] 0.75 #>  #> $fart #> [1] 0.25 #>  #> $N #> [1] 1000 #>   # 1. Compute currently 11 probabilities in prob (from essential probabilities): prob <- comp_prob() prob #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.85 #>  #> $mirt #> [1] 0.15 #>  #> $spec #> [1] 0.75 #>  #> $fart #> [1] 0.25 #>  #> $ppod #> [1] 0.4 #>  #> $PPV #> [1] 0.53125 #>  #> $FDR #> [1] 0.46875 #>  #> $NPV #> [1] 0.9375 #>  #> $FOR #> [1] 0.0625 #>  #> $acc #> [1] 0.775 #>  #> $p_acc_hi #> [1] 0.2741935 #>  #> $p_err_fa #> [1] 0.8333333 #>   # 2. Compute currently 11 frequencies in freq (from essential probabilities): freq <- comp_freq(round = FALSE)   # no rounding (to obtain same probabilities later) freq #> $N #> [1] 1000 #>  #> $cond_true #> [1] 250 #>  #> $cond_false #> [1] 750 #>  #> $dec_pos #> [1] 400 #>  #> $dec_neg #> [1] 600 #>  #> $dec_cor #> [1] 775 #>  #> $dec_err #> [1] 225 #>  #> $hi #> [1] 212.5 #>  #> $mi #> [1] 37.5 #>  #> $fa #> [1] 187.5 #>  #> $cr #> [1] 562.5 #>   # 3. Compute currently 11 probabilities again (but now from frequencies): prob_freq <- comp_prob_freq() prob_freq #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.848 #>  #> $mirt #> [1] 0.152 #>  #> $spec #> [1] 0.7493333 #>  #> $fart #> [1] 0.2506667 #>  #> $ppod #> [1] 0.4 #>  #> $PPV #> [1] 0.53 #>  #> $FDR #> [1] 0.47 #>  #> $NPV #> [1] 0.9366667 #>  #> $FOR #> [1] 0.06333333 #>  #> $acc #> [1] 0.774 #>  #> $p_acc_hi #> [1] 0.2739018 #>  #> $p_err_fa #> [1] 0.8318584 #>   # 4. Check equality of probabilities (in steps 1. and 3.): all.equal(prob, prob_freq)  # => should be TRUE! #>  [1] \"Component “sens”: Mean relative difference: 0.002352941\"     #>  [2] \"Component “mirt”: Mean relative difference: 0.01333333\"      #>  [3] \"Component “spec”: Mean relative difference: 0.0008888889\"    #>  [4] \"Component “fart”: Mean relative difference: 0.002666667\"     #>  [5] \"Component “PPV”: Mean relative difference: 0.002352941\"      #>  [6] \"Component “FDR”: Mean relative difference: 0.002666667\"      #>  [7] \"Component “NPV”: Mean relative difference: 0.0008888889\"     #>  [8] \"Component “FOR”: Mean relative difference: 0.01333333\"       #>  [9] \"Component “acc”: Mean relative difference: 0.001290323\"      #> [10] \"Component “p_acc_hi”: Mean relative difference: 0.001063991\" #> [11] \"Component “p_err_fa”: Mean relative difference: 0.001769912\""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute probabilities from (3 essential) probabilities. — comp_prob_prob","title":"Compute probabilities from (3 essential) probabilities. — comp_prob_prob","text":"comp_prob_prob computes current probability information sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart). returns list 13 key probabilities (prob) output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute probabilities from (3 essential) probabilities. — comp_prob_prob","text":"","code":"comp_prob_prob(   prev = prob$prev,   sens = prob$sens,   mirt = NA,   spec = prob$spec,   fart = NA,   tol = 0.01 )"},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute probabilities from (3 essential) probabilities. — comp_prob_prob","text":"prev condition's prevalence value prev (.e., probability condition TRUE). sens decision's sensitivity value sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate value mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. tol numeric tolerance value is_complement. Default: tol = .01.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute probabilities from (3 essential) probabilities. — comp_prob_prob","text":"list prob containing 13 key probability values.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_prob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute probabilities from (3 essential) probabilities. — comp_prob_prob","text":"comp_prob_prob wrapper function basic function comp_prob. Extreme probabilities (sets containing 2 probabilities 0 1) may yield unexpected values (e.g., predictive values PPV NPV turning NaN is_extreme_prob_set evaluates TRUE). Key relationships frequencies probabilities (see documentation comp_freq comp_prob details): Three perspectives population: condition / decision / accuracy. Defining probabilities terms frequencies: Probabilities can computed ratios frequencies, beware rounding issues. Functions translating representational formats: comp_prob_prob (defined )    wrapper function comp_prob    analog 3 format conversion functions: comp_prob_freq computes    current probability information contained prob    4 essential frequencies    (hi, mi, fa, cr). comp_freq_prob computes    current frequency information contained freq    3 essential probabilities    (prev, sens, spec). comp_freq_freq computes    current frequency information contained freq    4 essential frequencies    (hi, mi, fa, cr).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_prob_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute probabilities from (3 essential) probabilities. — comp_prob_prob","text":"","code":"# Basics: comp_prob_prob(prev = .11, sens = .88, spec = .77)                        # ok: PPV = 0.3210614 #> $prev #> [1] 0.11 #>  #> $sens #> [1] 0.88 #>  #> $mirt #> [1] 0.12 #>  #> $spec #> [1] 0.77 #>  #> $fart #> [1] 0.23 #>  #> $ppod #> [1] 0.3015 #>  #> $PPV #> [1] 0.3210614 #>  #> $FDR #> [1] 0.6789386 #>  #> $NPV #> [1] 0.9811024 #>  #> $FOR #> [1] 0.01889764 #>  #> $acc #> [1] 0.7821 #>  #> $p_acc_hi #> [1] 0.1237693 #>  #> $p_err_fa #> [1] 0.9394218 #>  comp_prob_prob(prev = .11, sens = NA, mirt = .12, spec = NA, fart = .23)  # ok: PPV = 0.3210614 #> $prev #> [1] 0.11 #>  #> $sens #> [1] 0.88 #>  #> $mirt #> [1] 0.12 #>  #> $spec #> [1] 0.77 #>  #> $fart #> [1] 0.23 #>  #> $ppod #> [1] 0.3015 #>  #> $PPV #> [1] 0.3210614 #>  #> $FDR #> [1] 0.6789386 #>  #> $NPV #> [1] 0.9811024 #>  #> $FOR #> [1] 0.01889764 #>  #> $acc #> [1] 0.7821 #>  #> $p_acc_hi #> [1] 0.1237693 #>  #> $p_err_fa #> [1] 0.9394218 #>  comp_prob_prob()          # ok, using current defaults #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.85 #>  #> $mirt #> [1] 0.15 #>  #> $spec #> [1] 0.75 #>  #> $fart #> [1] 0.25 #>  #> $ppod #> [1] 0.4 #>  #> $PPV #> [1] 0.53125 #>  #> $FDR #> [1] 0.46875 #>  #> $NPV #> [1] 0.9375 #>  #> $FOR #> [1] 0.0625 #>  #> $acc #> [1] 0.775 #>  #> $p_acc_hi #> [1] 0.2741935 #>  #> $p_err_fa #> [1] 0.8333333 #>  length(comp_prob_prob())  # 13 key probability values #> [1] 13  # Ways to work: comp_prob_prob(.99, sens = .99, spec = .99)              # ok: PPV = 0.999898 #> $prev #> [1] 0.99 #>  #> $sens #> [1] 0.99 #>  #> $mirt #> [1] 0.01 #>  #> $spec #> [1] 0.99 #>  #> $fart #> [1] 0.01 #>  #> $ppod #> [1] 0.9802 #>  #> $PPV #> [1] 0.999898 #>  #> $FDR #> [1] 0.00010202 #>  #> $NPV #> [1] 0.5 #>  #> $FOR #> [1] 0.5 #>  #> $acc #> [1] 0.99 #>  #> $p_acc_hi #> [1] 0.99 #>  #> $p_err_fa #> [1] 0.01 #>  comp_prob_prob(.99, sens = .90, spec = NA, fart = .10)   # ok: PPV = 0.9988789 #> $prev #> [1] 0.99 #>  #> $sens #> [1] 0.9 #>  #> $mirt #> [1] 0.1 #>  #> $spec #> [1] 0.9 #>  #> $fart #> [1] 0.1 #>  #> $ppod #> [1] 0.892 #>  #> $PPV #> [1] 0.9988789 #>  #> $FDR #> [1] 0.001121076 #>  #> $NPV #> [1] 0.08333333 #>  #> $FOR #> [1] 0.9166667 #>  #> $acc #> [1] 0.9 #>  #> $p_acc_hi #> [1] 0.99 #>  #> $p_err_fa #> [1] 0.01 #>   # Watch out for extreme cases: comp_prob_prob(1, sens = 0, spec = 1)      # ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob_prob(1, sens = 0, spec = 0)      # ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob_prob(1, sens = 0, spec = NA, fart = 0)  # ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>  comp_prob_prob(1, sens = 0, spec = NA, fart = 1)  # ok, but with warnings (as PPV & FDR are NaN) #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 0 #>  #> $mirt #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 0 #>  #> $PPV #> [1] NaN #>  #> $FDR #> [1] NaN #>  #> $NPV #> [1] 0 #>  #> $FOR #> [1] 1 #>  #> $acc #> [1] 0 #>  #> $p_acc_hi #> [1] NaN #>  #> $p_err_fa #> [1] 0 #>   comp_prob_prob(1, sens = 1, spec = 0)      # ok, but with warnings (as NPV & FOR are NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $mirt #> [1] 0 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 1 #>  #> $PPV #> [1] 1 #>  #> $FDR #> [1] 0 #>  #> $NPV #> [1] NaN #>  #> $FOR #> [1] NaN #>  #> $acc #> [1] 1 #>  #> $p_acc_hi #> [1] 1 #>  #> $p_err_fa #> [1] NaN #>  comp_prob_prob(1, sens = 1, spec = 1)      # ok, but with warnings (as NPV & FOR are NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $mirt #> [1] 0 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 1 #>  #> $PPV #> [1] 1 #>  #> $FDR #> [1] 0 #>  #> $NPV #> [1] NaN #>  #> $FOR #> [1] NaN #>  #> $acc #> [1] 1 #>  #> $p_acc_hi #> [1] 1 #>  #> $p_err_fa #> [1] NaN #>  comp_prob_prob(1, sens = 1, spec = NA, fart = 0)  # ok, but with warnings (as NPV & FOR are NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $mirt #> [1] 0 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $ppod #> [1] 1 #>  #> $PPV #> [1] 1 #>  #> $FDR #> [1] 0 #>  #> $NPV #> [1] NaN #>  #> $FOR #> [1] NaN #>  #> $acc #> [1] 1 #>  #> $p_acc_hi #> [1] 1 #>  #> $p_err_fa #> [1] NaN #>  comp_prob_prob(1, sens = 1, spec = NA, fart = 1)  # ok, but with warnings (as NPV & FOR are NaN) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $mirt #> [1] 0 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $ppod #> [1] 1 #>  #> $PPV #> [1] 1 #>  #> $FDR #> [1] 0 #>  #> $NPV #> [1] NaN #>  #> $FOR #> [1] NaN #>  #> $acc #> [1] 1 #>  #> $p_acc_hi #> [1] 1 #>  #> $p_err_fa #> [1] NaN #>   # Ways to fail: comp_prob_prob(NA, 1, 1, NA)  # only warning: invalid set (prev not numeric) #> Warning: Invalid probabilities. Please enter a valid set of essential probabilities. #> [1] \"Invalid probabilities. Please enter a valid set of essential probabilities.\" comp_prob_prob(8,  1, 1, NA)  # only warning: prev no probability #> Warning: Invalid probabilities. Please enter a valid set of essential probabilities. #> [1] \"Invalid probabilities. Please enter a valid set of essential probabilities.\" comp_prob_prob(1,  8, 1, NA)  # only warning: sens no probability #> Warning: Invalid probabilities. Please enter a valid set of essential probabilities. #> [1] \"Invalid probabilities. Please enter a valid set of essential probabilities.\" comp_prob_prob(1,  1, 1,  1)  # only warning: is_complement not in tolerated range #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> Warning: Invalid probabilities. Please enter a valid set of essential probabilities. #> [1] \"Invalid probabilities. Please enter a valid set of essential probabilities.\""},{"path":"https://hneth.github.io/riskyr/reference/comp_sens.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a decision's sensitivity from its miss rate. — comp_sens","title":"Compute a decision's sensitivity from its miss rate. — comp_sens","text":"comp_sens conversion function takes miss rate mirt – given probability (.e., numeric value range 0 1) – input, returns corresponding sensitivity sens – also probability – output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a decision's sensitivity from its miss rate. — comp_sens","text":"","code":"comp_sens(mirt)"},{"path":"https://hneth.github.io/riskyr/reference/comp_sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a decision's sensitivity from its miss rate. — comp_sens","text":"mirt decision's miss rate mirt probability.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_sens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a decision's sensitivity from its miss rate. — comp_sens","text":"decision's sensitivity sens probability.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_sens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a decision's sensitivity from its miss rate. — comp_sens","text":"sensitivity sens miss rate mirt complements (sens = (1 - mirt)) features decision process (e.g., diagnostic test). function comp_sens complementary conversion function comp_mirt uses generic function comp_complement.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a decision's sensitivity from its miss rate. — comp_sens","text":"","code":"comp_sens(2)                       # => NA + warning (beyond range) #> [1] NA comp_sens(1/3)                     # => 0.6666667 #> [1] 0.6666667 comp_sens(comp_complement(0.123))  # => 0.123 #> [1] 0.123"},{"path":"https://hneth.github.io/riskyr/reference/comp_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a decision's specificity from its false alarm rate. — comp_spec","title":"Compute a decision's specificity from its false alarm rate. — comp_spec","text":"comp_spec conversion function takes false alarm rate fart – given probability (.e., numeric value range 0 1) – input, returns corresponding specificity spec – also probability – output.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a decision's specificity from its false alarm rate. — comp_spec","text":"","code":"comp_spec(fart)"},{"path":"https://hneth.github.io/riskyr/reference/comp_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a decision's specificity from its false alarm rate. — comp_spec","text":"fart decision's false alarm rate fart probability.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a decision's specificity from its false alarm rate. — comp_spec","text":"decision's specificity spec probability.","code":""},{"path":"https://hneth.github.io/riskyr/reference/comp_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a decision's specificity from its false alarm rate. — comp_spec","text":"specificity spec false alarm rate fart complements (spec = (1 - fart)) features decision process (e.g., diagnostic test). function comp_spec complementary conversion function comp_fart uses generic function comp_complement.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/comp_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a decision's specificity from its false alarm rate. — comp_spec","text":"","code":"comp_spec(2)                       # => NA + warning (beyond range) #> [1] NA comp_spec(1/3)                     # => 0.6666667 #> [1] 0.6666667 comp_spec(comp_complement(0.123))  # => 0.123 #> [1] 0.123"},{"path":"https://hneth.github.io/riskyr/reference/cond_false.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of individuals for which the condition is false. — cond_false","title":"Number of individuals for which the condition is false. — cond_false","text":"cond_false frequency describes number individuals current population N condition FALSE (.e., actually false cases).","code":""},{"path":"https://hneth.github.io/riskyr/reference/cond_false.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of individuals for which the condition is false. — cond_false","text":"","code":"cond_false"},{"path":"https://hneth.github.io/riskyr/reference/cond_false.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of individuals for which the condition is false. — cond_false","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/cond_false.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of individuals for which the condition is false. — cond_false","text":"Key relationships: probabilities: frequency cond_false individuals depends population size N complement condition's prevalence 1 - prev split two subsets fa false alarm rate fart cr specificity spec. Perspectives: condition: frequency cond_false determined population size N times complement prevalence (1 - prev): cond_false= N x (1 - prev) decision: . frequency fa determined cond_false times false alarm rate fart = (1 - spec)   (aka. FPR): fa = cond_false x fart = cond_false x (1 - spec) b. frequency cr determined cond_false times specificity spec = (1 - fart): cr  =  cond_false x spec  =  cond_false x (1 - fart) frequencies:   population size N following relationships hold:  N = cond_true + cond_false (condition) N = dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) N = hi + mi + fa + cr (condition x decision) Current frequency information computed comp_freq contained list freq.","code":""},{"path":"https://hneth.github.io/riskyr/reference/cond_false.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of individuals for which the condition is false. — cond_false","text":"Consult Wikipedia: Confusion matrix additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/cond_false.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of individuals for which the condition is false. — cond_false","text":"","code":"cond_false <- 1000 * .90  # => sets cond_false to 90% of 1000 = 900 cases. is_freq(cond_false)       # => TRUE #> [1] TRUE is_prob(cond_false)       # => FALSE, as cond_false is no probability [but (1 - prev) and spec are] #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/cond_true.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of individuals for which the condition is true. — cond_true","title":"Number of individuals for which the condition is true. — cond_true","text":"cond_true frequency describes number individuals current population N condition TRUE (.e., actually true cases).","code":""},{"path":"https://hneth.github.io/riskyr/reference/cond_true.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of individuals for which the condition is true. — cond_true","text":"","code":"cond_true"},{"path":"https://hneth.github.io/riskyr/reference/cond_true.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of individuals for which the condition is true. — cond_true","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/cond_true.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of individuals for which the condition is true. — cond_true","text":"Key relationships: probabilities: frequency cond_true individuals depends population size N condition's prevalence prev split two subsets hi sensitivity sens mi miss rate mirt. Perspectives: condition: frequency cond_true determined population size N times prevalence prev: cond_true = N x prev decision: . frequency hi determined cond_true times sensitivity sens   (aka. hit rate HR): hi = cond_true x sens b. frequency mi determined cond_true times miss rate mirt = (1 - sens): mi = cond_true x mirt  =  cond_true x (1 - sens) frequencies:   population size N following relationships hold:  N = cond_true + cond_false (condition) N = dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) N = hi + mi + fa + cr (condition x decision) Current frequency information computed comp_freq contained list freq.","code":""},{"path":"https://hneth.github.io/riskyr/reference/cond_true.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of individuals for which the condition is true. — cond_true","text":"Consult Wikipedia: Confusion matrix additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/cond_true.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of individuals for which the condition is true. — cond_true","text":"","code":"cond_true <- 1000 * .10   # => sets cond_true to 10% of 1000 = 100 cases. is_freq(cond_true)        # => TRUE #> [1] TRUE is_prob(cond_true)        # => FALSE, as cond_true is no probability (but prev and sens are) #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/cr.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency of correct rejections or true negatives (TN). — cr","title":"Frequency of correct rejections or true negatives (TN). — cr","text":"cr frequency correct rejections true negatives (TN) population N individuals.","code":""},{"path":"https://hneth.github.io/riskyr/reference/cr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency of correct rejections or true negatives (TN). — cr","text":"","code":"cr"},{"path":"https://hneth.github.io/riskyr/reference/cr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Frequency of correct rejections or true negatives (TN). — cr","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/cr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frequency of correct rejections or true negatives (TN). — cr","text":"Definition: cr frequency individuals Condition = FALSE Decision = FALSE (negative). cr measure correct classifications, individual case. Relationships: probabilities: frequency cr depends specificity spec (aka. true negative rate, TNR) conditional prevalence prev. frequencies: population size N following relationships hold:  N = cond_true + cond_false (condition) N = dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) N = hi + mi + fa + cr (condition x decision)","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/dec_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of individuals for which the decision is correct. — dec_cor","title":"Number of individuals for which the decision is correct. — dec_cor","text":"dec_cor frequency describes number individuals current population N decision correct/accurate (.e., cases decision corresponds condition).","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of individuals for which the decision is correct. — dec_cor","text":"","code":"dec_cor"},{"path":"https://hneth.github.io/riskyr/reference/dec_cor.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of individuals for which the decision is correct. — dec_cor","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_cor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of individuals for which the decision is correct. — dec_cor","text":"Key relationships: probabilities: frequency dec_cor individuals depends population size N accuracy acc. frequencies: population size N following relationships hold:  N = cond_true + cond_false (condition) N = dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) dec_cor = hi + cr dec_err = mi + fa N = hi + mi + fa + cr (condition x decision) correspondence: rounding frequencies freq dec_cor = N x acc = hi + cr (.e., dec_cor corresponds sum true positives hi true negatives cr. Current frequency information computed comp_freq contained list freq.","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_cor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of individuals for which the decision is correct. — dec_cor","text":"Consult Wikipedia: Confusion matrix additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/dec_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of individuals for which the decision is correct. — dec_cor","text":"","code":"dec_cor <- 1000 * .50   # => sets dec_cor to 50% of 1000 = 500 cases. is_freq(dec_cor)        # => TRUE #> [1] TRUE is_prob(dec_cor)        # => FALSE, as dec_cor is no probability (but acc, bacc/wacc ARE) #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/dec_err.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of individuals for which the decision is erroneous. — dec_err","title":"Number of individuals for which the decision is erroneous. — dec_err","text":"dec_err frequency describes number individuals current population N decision incorrect erroneous (.e., cases decision correspond condition).","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of individuals for which the decision is erroneous. — dec_err","text":"","code":"dec_err"},{"path":"https://hneth.github.io/riskyr/reference/dec_err.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of individuals for which the decision is erroneous. — dec_err","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_err.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of individuals for which the decision is erroneous. — dec_err","text":"Key relationships: probabilities: frequency dec_err individuals depends population size N equal sum false negatives mi false positives fa. frequencies: population size N following relationships hold:  N = cond_true + cond_false (condition) N = dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) dec_cor = hi + cr dec_err = mi + fa N  =  hi + mi + fa + cr (condition x decision) Current frequency information computed comp_freq contained list freq.","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_err.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of individuals for which the decision is erroneous. — dec_err","text":"Consult Wikipedia: Confusion matrix additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/dec_err.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of individuals for which the decision is erroneous. — dec_err","text":"","code":"dec_err <- 1000 * .50   # => sets dec_err to 50% of 1000 = 500 cases. is_freq(dec_err)        # => TRUE #> [1] TRUE is_prob(dec_err)        # => FALSE, as dec_err is no probability (but acc, bacc/wacc ARE) #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/dec_neg.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of individuals for which the decision is negative. — dec_neg","title":"Number of individuals for which the decision is negative. — dec_neg","text":"dec_neg frequency describes number individuals current population N decision negative (.e., cases called predicted).","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_neg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of individuals for which the decision is negative. — dec_neg","text":"","code":"dec_neg"},{"path":"https://hneth.github.io/riskyr/reference/dec_neg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of individuals for which the decision is negative. — dec_neg","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_neg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of individuals for which the decision is negative. — dec_neg","text":"Key relationships: probabilities: frequency dec_neg individuals depends population size N decision's proportion negative decisions (1 - ppod) split two subsets cr negative predictive value NPV mi false omission rate = 1 - NPV. Perspectives: condition: frequency dec_neg determined population size N times   proportion negative decisions (1 - ppod): dec_neg  =  N x (1 - ppod) decision: . frequency cr determined dec_neg times negative predictive value NPV: cr  =  dec_neg x NPV b. frequency mi determined dec_neg times false omission rate = (1 - NPV): mi  =  dec_neg x  =  dec_neg x (1 - NPV) frequencies:   population size N following relationships hold:  N  =  cond_true + cond_false (condition) N  =  dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) N  =  hi + mi + fa + cr (condition x decision) Current frequency information computed comp_freq contained list freq.","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_neg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of individuals for which the decision is negative. — dec_neg","text":"Consult Wikipedia: Confusion matrix additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/dec_neg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of individuals for which the decision is negative. — dec_neg","text":"","code":"dec_neg <- 1000 * .67   # => sets dec_neg to 67% of 1000 = 670 cases. is_freq(dec_neg)        # => TRUE #> [1] TRUE is_prob(dec_neg)        # => FALSE, as dec_neg is no probability (but ppod, NPV and FOR are) #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/dec_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of individuals for which the decision is positive. — dec_pos","title":"Number of individuals for which the decision is positive. — dec_pos","text":"dec_pos frequency describes number individuals current population N decision positive (.e., called predicted cases).","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of individuals for which the decision is positive. — dec_pos","text":"","code":"dec_pos"},{"path":"https://hneth.github.io/riskyr/reference/dec_pos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of individuals for which the decision is positive. — dec_pos","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_pos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of individuals for which the decision is positive. — dec_pos","text":"Key relationships: probabilities: frequency dec_pos individuals depends population size N decision's proportion positive decisions ppod split two subsets hi positive predictive value PPV fa false detection rate FDR = 1 - PPV. Perspectives: condition: frequency dec_pos determined population size N times   proportion positive decisions ppod: dec_pos  =  N x ppod decision: . frequency hi determined dec_pos times positive predictive value PPV   (aka. precision): hi  =  dec_pos x PPV b. frequency fa determined dec_pos times false detection rate FDR = (1 - PPV): fa  =  dec_pos x FDR  =  dec_pos x (1 - PPV) frequencies:   population size N following relationships hold:  N  =  cond_true + cond_false (condition) N  =  dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) N  =  hi + mi + fa + cr (condition x decision) Current frequency information computed comp_freq contained list freq.","code":""},{"path":"https://hneth.github.io/riskyr/reference/dec_pos.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Number of individuals for which the decision is positive. — dec_pos","text":"Consult Wikipedia: Confusion matrix additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/dec_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of individuals for which the decision is positive. — dec_pos","text":"","code":"dec_pos <- 1000 * .33   # => sets dec_pos to 33% of 1000 = 330 cases. is_freq(dec_pos)        # => TRUE #> [1] TRUE is_prob(dec_pos)        # => FALSE, as dec_pos is no probability (but ppod and PPV are) #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/df_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"A collection of riskyr scenarios from various sources (as df). — df_scenarios","title":"A collection of riskyr scenarios from various sources (as df). — df_scenarios","text":"df_scenarios R data frame contains collection scenarios scientific literature sources.","code":""},{"path":"https://hneth.github.io/riskyr/reference/df_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A collection of riskyr scenarios from various sources (as df). — df_scenarios","text":"","code":"df_scenarios"},{"path":"https://hneth.github.io/riskyr/reference/df_scenarios.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A collection of riskyr scenarios from various sources (as df). — df_scenarios","text":"data frame currently 25 rows (.e., scenarios) 21 columns (variables describing scenario): See scenarios list scenarios variables currently contained df_scenarios. Note names variables (columns) correspond subset init_txt (initialize txt) init_num (initialize num). variables scen_src scen_apa provide scenario's source information.","code":""},{"path":"https://hneth.github.io/riskyr/reference/df_scenarios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A collection of riskyr scenarios from various sources (as df). — df_scenarios","text":"loading riskyr, scenarios contained df_scenarios converted list riskyr objects scenarios.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/err.html","id":null,"dir":"Reference","previous_headings":"","what":"Error rate (err) as the probability of an incorrect decision. — err","title":"Error rate (err) as the probability of an incorrect decision. — err","text":"err defines error rate complement accuracy acc lack correspondence decisions conditions.","code":""},{"path":"https://hneth.github.io/riskyr/reference/err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error rate (err) as the probability of an incorrect decision. — err","text":"","code":"err"},{"path":"https://hneth.github.io/riskyr/reference/err.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Error rate (err) as the probability of an incorrect decision. — err","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/err.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Error rate (err) as the probability of an incorrect decision. — err","text":"Definition: err = (1 - acc) freq rounded (round = FALSE) err = dec_err/N = (mi + fa)/N err currently included prob, shown plots. See err's complement accuracy acc computation accu current accuracy metrics several possible interpretations accuracy.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/err.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error rate (err) as the probability of an incorrect decision. — err","text":"","code":"err <- .50     # sets a rate of incorrect decisions of 50% err <- 50/100  # (dec_err) for 50 out of 100 individuals is_prob(err)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/fa.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency of false alarms or false positives (FP). — fa","title":"Frequency of false alarms or false positives (FP). — fa","text":"fa frequency false alarms false positives (FP) population N individuals.","code":""},{"path":"https://hneth.github.io/riskyr/reference/fa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency of false alarms or false positives (FP). — fa","text":"","code":"fa"},{"path":"https://hneth.github.io/riskyr/reference/fa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Frequency of false alarms or false positives (FP). — fa","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/fa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frequency of false alarms or false positives (FP). — fa","text":"Definition: fa frequency individuals Condition = FALSE Decision = TRUE (positive). fa measure incorrect classifications (type--errors), individual case. Relationships: probabilities: frequency fa depends false alarm rate fart (aka. false positive rate, FPR) conditional prevalence prev. frequencies: population size N following relationships hold:  N = cond_true + cond_false (condition) N = dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) N = hi + mi + fa + cr (condition x decision)","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/fart.html","id":null,"dir":"Reference","previous_headings":"","what":"The false alarm rate (or false positive rate) of a decision process or diagnostic procedure. — fart","title":"The false alarm rate (or false positive rate) of a decision process or diagnostic procedure. — fart","text":"fart defines decision's false alarm rate (rate false positives): conditional probability decision positive condition FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/fart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The false alarm rate (or false positive rate) of a decision process or diagnostic procedure. — fart","text":"","code":"fart"},{"path":"https://hneth.github.io/riskyr/reference/fart.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The false alarm rate (or false positive rate) of a decision process or diagnostic procedure. — fart","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/fart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The false alarm rate (or false positive rate) of a decision process or diagnostic procedure. — fart","text":"Understanding obtaining false alarm rate fart: Definition:   fart conditional probability   incorrect positive decision given   condition FALSE: fart = p(decision = positive | condition = FALSE) probability false alarm. Perspective:   fart classifies   subset cond_false individuals   decision (fart = fa/cond_false). Alternative names:   false positive rate (FPR),   rate type-errors (alpha),   statistical significance level,   fallout Relationships: . fart complement   specificity spec: fart = 1 - spec b. fart opposite conditional probability   – complement –   false discovery rate   false detection rate FDR: FDR = p(condition = FALSE | decision = positive) terms frequencies,   fart ratio   fa divided cond_false   (.e., fa + cr): fart = fa/cond_false = fa/(fa + cr) Dependencies:   fart feature decision process   diagnostic procedure measure   incorrect decisions (false positives). However, due conditional probability,   value fart intrinsic   decision process, also depends   condition's prevalence value prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/fart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The false alarm rate (or false positive rate) of a decision process or diagnostic procedure. — fart","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/fart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The false alarm rate (or false positive rate) of a decision process or diagnostic procedure. — fart","text":"","code":"fart <- .25     # sets a false alarm rate of 25% fart <- 25/100  # (decision = positive) for 25 out of 100 people with (condition = FALSE) is_prob(fart)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/freq.html","id":null,"dir":"Reference","previous_headings":"","what":"List current frequency information. — freq","title":"List current frequency information. — freq","text":"freq list named numeric variables containing 11 key frequencies (values):","code":""},{"path":"https://hneth.github.io/riskyr/reference/freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List current frequency information. — freq","text":"","code":"freq"},{"path":"https://hneth.github.io/riskyr/reference/freq.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List current frequency information. — freq","text":"object class list length 11.","code":""},{"path":"https://hneth.github.io/riskyr/reference/freq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List current frequency information. — freq","text":"population size N number cases cond_true number cases cond_false number cases dec_pos number cases dec_neg number cases dec_cor number cases dec_err number true positives, hits hi number false negatives, misses mi number false positives, false alarms fa number true negatives, correct rejections cr frequencies computed basic parameters (contained num) computed using comp_freq. list freq frequency counterpart list containing probability information prob. Natural frequencies always expressed relation current population size N. Key relationships frequencies probabilities (see documentation comp_freq comp_prob details): Three perspectives population: condition / decision / accuracy. Defining probabilities terms frequencies: Probabilities can computed ratios frequencies, beware rounding issues. Functions translating representational formats: comp_prob_prob, comp_prob_freq, comp_freq_prob, comp_freq_freq (see documentation comp_prob_prob details). Visualizations current frequency information provided plot_prism plot_icons.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List current frequency information. — freq","text":"","code":"freq <- comp_freq()  # initialize freq to default parameters freq                 # show current values #> $N #> [1] 1000 #>  #> $cond_true #> [1] 250 #>  #> $cond_false #> [1] 750 #>  #> $dec_pos #> [1] 400 #>  #> $dec_neg #> [1] 600 #>  #> $dec_cor #> [1] 774 #>  #> $dec_err #> [1] 226 #>  #> $hi #> [1] 212 #>  #> $mi #> [1] 38 #>  #> $fa #> [1] 188 #>  #> $cr #> [1] 562 #>  length(freq)         # 11 known frequencies #> [1] 11 names(freq)          # show names of known frequencies #>  [1] \"N\"          \"cond_true\"  \"cond_false\" \"dec_pos\"    \"dec_neg\"    #>  [6] \"dec_cor\"    \"dec_err\"    \"hi\"         \"mi\"         \"fa\"         #> [11] \"cr\""},{"path":"https://hneth.github.io/riskyr/reference/hi.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency of hits or true positives (TP). — hi","title":"Frequency of hits or true positives (TP). — hi","text":"hi frequency hits true positives (TP) population N individuals.","code":""},{"path":"https://hneth.github.io/riskyr/reference/hi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency of hits or true positives (TP). — hi","text":"","code":"hi"},{"path":"https://hneth.github.io/riskyr/reference/hi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Frequency of hits or true positives (TP). — hi","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/hi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frequency of hits or true positives (TP). — hi","text":"Definition: hi frequency individuals Condition = TRUE Decision = TRUE (positive). hi measure correct classifications, individual case. Relationships: probabilities: frequency hi depends sensitivity sens (aka. hit rate true positive rate, TPR) conditional prevalence prev. frequencies: population size N following relationships hold:  N = cond_true + cond_false (condition) N = dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) N = hi + mi + fa + cr (condition x decision)","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/init_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize basic numeric variables. — init_num","title":"Initialize basic numeric variables. — init_num","text":"init_num initializes basic numeric variables define num list named elements containing four basic probabilities (prev, sens, spec, fart) one frequency parameter (population size N).","code":""},{"path":"https://hneth.github.io/riskyr/reference/init_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize basic numeric variables. — init_num","text":"","code":"init_num(   prev = num.def$prev,   sens = num.def$sens,   spec = num.def$spec,   fart = num.def$fart,   N = num.def$N )"},{"path":"https://hneth.github.io/riskyr/reference/init_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize basic numeric variables. — init_num","text":"prev condition's prevalence value prev (.e., probability condition TRUE). sens decision's sensitivity value sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. N population size N.","code":""},{"path":"https://hneth.github.io/riskyr/reference/init_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize basic numeric variables. — init_num","text":"list containing valid quadruple probabilities (prev, sens, spec, fart) one frequency (population size N).","code":""},{"path":"https://hneth.github.io/riskyr/reference/init_num.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize basic numeric variables. — init_num","text":"spec provided, complement fart optional. fart provided, complement spec optional. N provided, suitable minimum value computed comp_min_N.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/init_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize basic numeric variables. — init_num","text":"","code":"# ways to succeed: init_num(1, 1, 1, 0, 100)  # => succeeds #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $spec #> [1] 1 #>  #> $fart #> [1] 0 #>  #> $N #> [1] 100 #>  init_num(1, 1, 0, 1, 100)  # => succeeds #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $N #> [1] 100 #>   # watch out for: init_num(1, 1, 0, 1)           # => succeeds (with N computed) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $N #> [1] 1000 #>  init_num(1, 1, NA, 1, 100)     # => succeeds (with spec computed) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $N #> [1] 100 #>  init_num(1, 1, 0, NA, 100)     # => succeeds (with fart computed) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $N #> [1] 100 #>  init_num(1, 1, NA, 1)          # => succeeds (with spec and N computed) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $N #> [1] 1000 #>  init_num(1, 1, 0, NA)          # => succeeds (with fart and N computed) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $spec #> [1] 0 #>  #> $fart #> [1] 1 #>  #> $N #> [1] 1000 #>  init_num(1, 1, .51, .50, 100)  # => succeeds (as spec and fart are within tolarated range) #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> $prev #> [1] 1 #>  #> $sens #> [1] 1 #>  #> $spec #> [1] 0.51 #>  #> $fart #> [1] 0.5 #>  #> $N #> [1] 100 #>   # ways to fail: init_num(prev = NA)                                  # => NAs + warning (NA) #> $prev #> [1] NA #>  #> $sens #> [1] NA #>  #> $spec #> [1] NA #>  #> $fart #> [1] NA #>  #> $N #> [1] NA #>  init_num(prev = 88)                                  # => NAs + warning (beyond range) #> $prev #> [1] NA #>  #> $sens #> [1] NA #>  #> $spec #> [1] NA #>  #> $fart #> [1] NA #>  #> $N #> [1] NA #>  init_num(prev =  1, sens = NA)                       # => NAs + warning (NA) #> $prev #> [1] NA #>  #> $sens #> [1] NA #>  #> $spec #> [1] NA #>  #> $fart #> [1] NA #>  #> $N #> [1] NA #>  init_num(prev =  1, sens = 1, spec = NA, fart = NA)  # => NAs + warning (NAs) #> $prev #> [1] NA #>  #> $sens #> [1] NA #>  #> $spec #> [1] NA #>  #> $fart #> [1] NA #>  #> $N #> [1] NA #>  init_num(1, 1, .52, .50, 100)   # => NAs + warning (complements beyond range) #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> $prev #> [1] NA #>  #> $sens #> [1] NA #>  #> $spec #> [1] NA #>  #> $fart #> [1] NA #>  #> $N #> [1] NA #>"},{"path":"https://hneth.github.io/riskyr/reference/init_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize basic color information. — init_pal","title":"Initialize basic color information. — init_pal","text":"init_pal initializes basic color information (.e., colors corresponding functional roles current scenario used throughout riskyr package).","code":""},{"path":"https://hneth.github.io/riskyr/reference/init_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize basic color information. — init_pal","text":"","code":"init_pal(   N_col = pal_def[\"N\"],   cond_true_col = pal_def[\"cond_true\"],   cond_false_col = pal_def[\"cond_false\"],   dec_pos_col = pal_def[\"dec_pos\"],   dec_neg_col = pal_def[\"dec_neg\"],   dec_cor_col = pal_def[\"dec_cor\"],   dec_err_col = pal_def[\"dec_err\"],   hi_col = pal_def[\"hi\"],   mi_col = pal_def[\"mi\"],   fa_col = pal_def[\"fa\"],   cr_col = pal_def[\"cr\"],   PPV_col = pal_def[\"ppv\"],   NPV_col = pal_def[\"npv\"],   txt_col = pal_def[\"txt\"],   bg_col = pal_def[\"bg\"],   brd_col = pal_def[\"brd\"] )"},{"path":"https://hneth.github.io/riskyr/reference/init_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize basic color information. — init_pal","text":"N_col Color representing population N cases individuals. cond_true_col Color representing cases cond_true, current condition TRUE. cond_false_col Color representing cases cond_false, current condition FALSE. dec_pos_col Color representing cases dec_pos, current decision positive. dec_neg_col Color representing cases dec_neg, current decision negative. dec_cor_col Color representing cases correct decisions dec_cor, current decision accurate. dec_err_col Color representing cases erroneous decisions dec_err, current decision inaccurate. hi_col Color representing hits true positives hi (.e., correct cases current condition TRUE decision positive). mi_col Color representing misses false negatives mi (.e., incorrect cases current condition TRUE decision negative). fa_col Color representing false alarms false positives fa (.e., incorrect cases current condition FALSE decision positive). cr_col Color representing correct rejections true negatives cr (.e., correct cases current condition FALSE decision negative). PPV_col Color representing positive predictive values PPV (.e., conditional probability condition TRUE, provided decision positive). NPV_col Color representing negative predictive values NPV (.e., conditional probability condition FALSE, provided decision negative). txt_col Color used text labels. bg_col Background color plot (used set par(bg = bg_col)). brd_col Color used borders (e.g., around bars boxes).","code":""},{"path":"https://hneth.github.io/riskyr/reference/init_pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize basic color information. — init_pal","text":"color information current scenario stored named colors list pal. init_pal allows changing colors assigning new colors existing names.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/init_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize basic color information. — init_pal","text":"","code":"init_pal()          # => define and return a vector of current (default) colors #>                 N         cond_true        cond_false           dec_pos  #>       \"#E6E6E6FC\" \"lightgoldenrod1\"   \"lightskyblue2\"      \"rosybrown3\"  #>           dec_neg           dec_cor           dec_err                hi  #> \"lightsteelblue3\"      \"palegreen3\"      \"firebrick3\"      \"olivedrab4\"  #>                mi                fa                cr               ppv  #>         \"tomato3\"    \"lightsalmon2\"      \"olivedrab3\"         \"sienna1\"  #>               npv               txt               brd                bg  #>      \"steelblue3\"       \"#030303FC\"       \"#333333FC\"           \"white\"  length(init_pal())  # => 15 named colors #> [1] 16 pal <- init_pal(N_col = \"steelblue4\")  # => change a color (stored in pal) pal <- init_pal(brd_col = NA)          # => remove a color"},{"path":"https://hneth.github.io/riskyr/reference/init_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize basic text elements. — init_txt","title":"Initialize basic text elements. — init_txt","text":"init_txt initializes basic text elements txt (.e., titles labels corresponding current scenario) used throughout riskyr package.","code":""},{"path":"https://hneth.github.io/riskyr/reference/init_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize basic text elements. — init_txt","text":"","code":"init_txt(   scen_lbl = txt_lbl_def$scen_lbl,   scen_txt = txt_lbl_def$scen_txt,   scen_src = txt_lbl_def$scen_src,   scen_apa = txt_lbl_def$scen_apa,   scen_lng = txt_lbl_def$scen_lng,   popu_lbl = txt_lbl_def$popu_lbl,   N_lbl = txt_lbl_def$N_lbl,   cond_lbl = txt_lbl_def$cond_lbl,   cond_true_lbl = txt_lbl_def$cond_true_lbl,   cond_false_lbl = txt_lbl_def$cond_false_lbl,   dec_lbl = txt_lbl_def$dec_lbl,   dec_pos_lbl = txt_lbl_def$dec_pos_lbl,   dec_neg_lbl = txt_lbl_def$dec_neg_lbl,   acc_lbl = txt_lbl_def$acc_lbl,   dec_cor_lbl = txt_lbl_def$dec_cor_lbl,   dec_err_lbl = txt_lbl_def$dec_err_lbl,   sdt_lbl = txt_lbl_def$sdt_lbl,   hi_lbl = txt_lbl_def$hi_lbl,   mi_lbl = txt_lbl_def$mi_lbl,   fa_lbl = txt_lbl_def$fa_lbl,   cr_lbl = txt_lbl_def$cr_lbl )"},{"path":"https://hneth.github.io/riskyr/reference/init_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize basic text elements. — init_txt","text":"scen_lbl current scenario title (sometimes Title Caps). scen_txt longer text description current scenario (may extend several lines). scen_src source information current scenario. scen_apa Source information APA format. scen_lng Language current scenario (character code). Options: \"en\": English, \"de\": German. popu_lbl general name describing current population. N_lbl brief label current population popu sample. cond_lbl general name condition dimension currently considered (e.g., clinical condition). cond_true_lbl short label presence current condition cond_true cases (condition's true state TRUE). cond_false_lbl short label absence current condition cond_false cases (condition's true state FALSE). dec_lbl general name decision dimension (e.g., diagnostic test) currently made. dec_pos_lbl short label positive decisions dec_pos cases (e.g., predicting presence condition). dec_neg_lbl short label negative decisions dec_neg cases (e.g., predicting absence condition). acc_lbl general name accuracy dimension (e.g., correspondence decision condition). dec_cor_lbl short label correct decisions dec_cor cases (e.g., accurately predicting condition). dec_err_lbl short label erroneous decisions dec_err cases (e.g., inaccurately predicting condition). sdt_lbl name case/category/cell dimension 2x2 contingency table (SDT: condition x decision). hi_lbl short label hits true positives hi (.e., correct decisions presence condition, condition actually present). mi_lbl short label misses false negatives mi (.e., incorrect decisions absence condition condition actually present). fa_lbl short label false alarms false positives fa (.e., incorrect decisions presence condition condition actually absent). cr_lbl short label correct rejections true negatives cr (.e., correct decision absence condition, condition actually absent).","code":""},{"path":"https://hneth.github.io/riskyr/reference/init_txt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize basic text elements. — init_txt","text":"textual elements specify titles details current scenario stored named elements (type character) list txt. init_txt allows changing elements assigning new character objects existing names. However, can directly specify scenario-specific text elements defining scenario riskyr function.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/init_txt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize basic text elements. — init_txt","text":"","code":"init_txt()          # defines a list of (default) text elements #> $scen_lbl #> [1] \"Scenario\" #>  #> $scen_txt #> [1] \"Description of the current scenario in a short paragraph of text. This description may include several sentences.\" #>  #> $scen_src #> [1] \"Source information\" #>  #> $scen_apa #> [1] \"Source information in APA format\" #>  #> $scen_lng #> [1] \"en/de\" #>  #> $popu_lbl #> [1] \"Population\" #>  #> $N_lbl #> [1] \"N\" #>  #> $cond_lbl #> [1] \"Condition\" #>  #> $cond_true_lbl #> [1] \"True\" #>  #> $cond_false_lbl #> [1] \"False\" #>  #> $dec_lbl #> [1] \"Decision\" #>  #> $dec_pos_lbl #> [1] \"Positive\" #>  #> $dec_neg_lbl #> [1] \"Negative\" #>  #> $acc_lbl #> [1] \"Accuracy\" #>  #> $dec_cor_lbl #> [1] \"Correct\" #>  #> $dec_err_lbl #> [1] \"Erroneous\" #>  #> $sdt_lbl #> [1] \"Cases\" #>  #> $hi_lbl #> [1] \"hi\" #>  #> $mi_lbl #> [1] \"mi\" #>  #> $fa_lbl #> [1] \"fa\" #>  #> $cr_lbl #> [1] \"cr\" #>  length(init_txt())  # 21 #> [1] 21  # Customizing current text elements: txt <- init_txt(scen_lbl = \"My scenario\",                 scen_src = \"My source\",                 N_lbl    = \"My population\")"},{"path":"https://hneth.github.io/riskyr/reference/is_complement.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that two numbers are complements. — is_complement","title":"Verify that two numbers are complements. — is_complement","text":"is_complement function takes 2 numeric arguments (typically probabilities) inputs verifies complements (.e., add 1, within tolerance range tol).","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_complement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that two numbers are complements. — is_complement","text":"","code":"is_complement(p1, p2, tol = 0.01)"},{"path":"https://hneth.github.io/riskyr/reference/is_complement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that two numbers are complements. — is_complement","text":"p1 numeric argument (typically probability range 0 1). p2 numeric argument (typically probability range 0 1). tol numeric tolerance value. Default: tol = .01.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_complement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that two numbers are complements. — is_complement","text":"NA Boolean value: NA one arguments NA; TRUE arguments provided complements (tol range); otherwise FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_complement.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify that two numbers are complements. — is_complement","text":"p1 p2 necessary arguments. one arguments NA, is_complement returns NA (.e., neither TRUE FALSE). argument tol optional (default value .01) Numeric near-complements differ less value still considered complements. function verify type, range, sufficiency inputs provided. See is_prob is_suff_prob_set purpose.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_complement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that two numbers are complements. — is_complement","text":"","code":"# Basics: is_complement(0, 1)           # => TRUE #> [1] TRUE is_complement(1/3, 2/3)       # => TRUE #> [1] TRUE is_complement(.33, .66)       # => TRUE  (as within default tol = .01) #> [1] TRUE is_complement(.33, .65)       # => FALSE (as beyond default tol = .01) #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> [1] FALSE  # watch out for: is_complement(NA, NA)            # => NA (but not FALSE) #> [1] NA is_complement(1, NA)             # => NA (but not FALSE) #> [1] NA is_complement(2, -1)             # => TRUE + warnings (p1 and p2 beyond range) #> [1] TRUE is_complement(8, -7)             # => TRUE + warnings (p1 and p2 beyond range) #> [1] TRUE is_complement(.3, .6)            # => FALSE + warning (beyond tolerance) #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> [1] FALSE is_complement(.3, .6, tol = .1)  # => TRUE (due to increased tolerance) #> [1] TRUE  # ways to fail: # is_complement(0, 0)            # => FALSE + warning (beyond tolerance) # is_complement(1, 1)            # => FALSE + warning (beyond tolerance) # is_complement(8, 8)            # => FALSE + warning (beyond tolerance)"},{"path":"https://hneth.github.io/riskyr/reference/is_extreme_prob_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that a set of probabilities describes an extreme case. — is_extreme_prob_set","title":"Verify that a set of probabilities describes an extreme case. — is_extreme_prob_set","text":"is_extreme_prob_set verifies set probabilities (.e., prev, sens mirt, spec fart) describe extreme case.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_extreme_prob_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that a set of probabilities describes an extreme case. — is_extreme_prob_set","text":"","code":"is_extreme_prob_set(prev, sens = NA, mirt = NA, spec = NA, fart = NA)"},{"path":"https://hneth.github.io/riskyr/reference/is_extreme_prob_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that a set of probabilities describes an extreme case. — is_extreme_prob_set","text":"prev condition's prevalence value prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_extreme_prob_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that a set of probabilities describes an extreme case. — is_extreme_prob_set","text":"Boolean value: TRUE extreme case identified; otherwise FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_extreme_prob_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify that a set of probabilities describes an extreme case. — is_extreme_prob_set","text":"TRUE, warning message describing nature extreme case printed allow anticipating peculiar effects (e.g., PPV NPV values computed NaN). function verify type, range, sufficiency, consistency arguments. See is_prob, is_suff_prob_set, is_complement, is_valid_prob_pair is_valid_prob_set purposes.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_extreme_prob_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that a set of probabilities describes an extreme case. — is_extreme_prob_set","text":"","code":"# Identify 6 extreme cases (+ 4 variants): is_extreme_prob_set(1, 1, NA, 1, NA)       # => TRUE + warning: N true positives #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> [1] TRUE plot_tree(1, 1, NA, 1, NA, N = 100)        # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: Extreme case (prev = 1 & sens = 1): #>   N hi (TP) cases; 0 cond_false or dec_false cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.   is_extreme_prob_set(1, 0, NA, 1, NA)       # => TRUE + warning: N false negatives #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> [1] TRUE plot_tree(1, 0, NA, 1, NA, N = 200)        # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: Extreme case (prev = 1 & sens = 0): #>   N mi (FN) cases; 0 cond_false or dec_true cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.   sens <- .50 is_extreme_prob_set(0, sens, NA, 0, NA)    # => TRUE + warning: N false positives #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> [1] TRUE plot_tree(0, sens, NA, 0, N = 300)         # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.  # Variant: is_extreme_prob_set(0, sens, NA, NA, 1)    # => TRUE + warning: N false positives #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> [1] TRUE plot_tree(0, sens, NA, NA, 1, N = 350)     # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.   sens <- .50 is_extreme_prob_set(0, sens, NA, 1)        # => TRUE + warning: N true negatives #> Warning: Extreme case (prev = 0 & spec = 1): #>   N cr (TN) cases; 0 cond_true or dec_false cases; NPV = NaN. #> [1] TRUE plot_tree(0, sens, NA, NA, 1, N = 400)     # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> Warning: Extreme case (prev = 0 & spec = 0): #>   N fa (FP) cases; 0 cond_true or dec_true cases; PPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.  # Variant: is_extreme_prob_set(0, sens, NA, NA, 0)    # => TRUE + warning: N true negatives #> Warning: Extreme case (prev = 0 & spec = 1): #>   N cr (TN) cases; 0 cond_true or dec_false cases; NPV = NaN. #> [1] TRUE plot_tree(0, sens, NA, NA, 0, N = 450)     # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (prev = 0 & spec = 1): #>   N cr (TN) cases; 0 cond_true or dec_false cases; NPV = NaN. #> Warning: Extreme case (prev = 0 & spec = 1): #>   N cr (TN) cases; 0 cond_true or dec_false cases; NPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.   prev <- .50 is_extreme_prob_set(prev, 0, NA, 1, NA)    # => TRUE + warning: 0 hi and 0 fa (0 dec_pos cases) #> Warning: Extreme case (sens = 0 & spec = 1): #>   0 hi (TP) and 0 fa (FP) cases; 0 dec_pos cases; PPV = NaN. #> [1] TRUE plot_tree(prev, 0, NA, 1, NA, N = 500)     # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (sens = 0 & spec = 1): #>   0 hi (TP) and 0 fa (FP) cases; 0 dec_pos cases; PPV = NaN. #> Warning: Extreme case (sens = 0 & spec = 1): #>   0 hi (TP) and 0 fa (FP) cases; 0 dec_pos cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.  # # Variant: is_extreme_prob_set(prev, 0, 0, NA, 0)     # => TRUE + warning: 0 hi and 0 fa (0 dec_pos cases) #> Warning: Extreme case (sens = 0 & spec = 1): #>   0 hi (TP) and 0 fa (FP) cases; 0 dec_pos cases; PPV = NaN. #> [1] TRUE plot_tree(prev, 0, NA, 1, NA, N = 550)     # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (sens = 0 & spec = 1): #>   0 hi (TP) and 0 fa (FP) cases; 0 dec_pos cases; PPV = NaN. #> Warning: Extreme case (sens = 0 & spec = 1): #>   0 hi (TP) and 0 fa (FP) cases; 0 dec_pos cases; PPV = NaN. #> Warning: PPV is NaN. #> Warning: FDR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.   prev <- .50 is_extreme_prob_set(prev, 1, NA, 0, NA)    # => TRUE + warning: 0 mi and 0 cr (0 dec_neg cases) #> Warning: Extreme case (sens = 1 & spec = 0): #>   0 mi (FN) and 0 cr (TN) cases; 0 dec_neg cases; NPV = NaN. #> [1] TRUE plot_tree(prev, 1, NA, 0, NA, N = 600)     # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (sens = 1 & spec = 0): #>   0 mi (FN) and 0 cr (TN) cases; 0 dec_neg cases; NPV = NaN. #> Warning: Extreme case (sens = 1 & spec = 0): #>   0 mi (FN) and 0 cr (TN) cases; 0 dec_neg cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead.  # # Variant: is_extreme_prob_set(prev, 1, NA, 0, NA)    # => TRUE + warning: 0 mi and 0 cr (0 dec_neg cases) #> Warning: Extreme case (sens = 1 & spec = 0): #>   0 mi (FN) and 0 cr (TN) cases; 0 dec_neg cases; NPV = NaN. #> [1] TRUE plot_tree(prev, 1, NA, 0, NA, N = 650)     # => illustrates this case #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Warning: Extreme case (sens = 1 & spec = 0): #>   0 mi (FN) and 0 cr (TN) cases; 0 dec_neg cases; NPV = NaN. #> Warning: Extreme case (sens = 1 & spec = 0): #>   0 mi (FN) and 0 cr (TN) cases; 0 dec_neg cases; NPV = NaN. #> Warning: NPV is NaN. #> Warning: FOR is NaN. #> Warning: Some derived prob values are peculiar. Check for extreme probabilities! #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/reference/is_freq.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that input is a frequency (positive integer value). — is_freq","title":"Verify that input is a frequency (positive integer value). — is_freq","text":"is_freq function checks whether single argument freq frequency (.e., positive numeric integer value).","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_freq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that input is a frequency (positive integer value). — is_freq","text":"","code":"is_freq(freq)"},{"path":"https://hneth.github.io/riskyr/reference/is_freq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that input is a frequency (positive integer value). — is_freq","text":"freq single (typically numeric) argument.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_freq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that input is a frequency (positive integer value). — is_freq","text":"Boolean value: TRUE freq frequency (positive integer), otherwise FALSE.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_freq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that input is a frequency (positive integer value). — is_freq","text":"","code":"# ways to succeed: is_freq(2)    # => TRUE, but does NOT return the frequency 2. #> [1] TRUE is_freq(0:3)  # => TRUE (for vector) #> [1] TRUE  ## ways to fail: # is_freq(-1)            # => FALSE + warning (negative values) # is_freq(1:-1)          # => FALSE (for vector) + warning (negative values) # is_freq(c(1, 1.5, 2))  # => FALSE (for vector) + warning (non-integer values)  ## note: # is.integer(2)          # => FALSE!"},{"path":"https://hneth.github.io/riskyr/reference/is_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for inters (i.e., whole numbers). — is_integer","title":"Test for inters (i.e., whole numbers). — is_integer","text":"is_integer tests x contains integer numbers.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for inters (i.e., whole numbers). — is_integer","text":"","code":"is_integer(x, tol = .Machine$double.eps^0.5)"},{"path":"https://hneth.github.io/riskyr/reference/is_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for inters (i.e., whole numbers). — is_integer","text":"x Number(s) test (required, accepts numeric vectors). tol Numeric tolerance value. Default: tol = .Machine$double.eps^0.5 (see ?.Machine details).","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_integer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for inters (i.e., whole numbers). — is_integer","text":"Thus, is_integer base R function .integer designed : is_integer() returns TRUE FALSE depending whether numeric argument x integer value (.e., \"whole\" number). .integer() returns TRUE FALSE depending whether argument type \"integer\", FALSE argument factor. See documentation .integer definition details.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_integer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for inters (i.e., whole numbers). — is_integer","text":"","code":"is_integer(2)    # TRUE #> [1] TRUE is_integer(2/1)  # TRUE #> [1] TRUE is_integer(2/3)  # FALSE #> [1] FALSE x <- seq(1, 2, by = 0.5) is_integer(x) #> [1]  TRUE FALSE  TRUE  # Note contrast to base R: is.integer(2/1)  # FALSE! #> [1] FALSE  # Compare: is.integer(1 + 2) #> [1] FALSE is_integer(1 + 2) #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/is_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify a 2x2 matrix as a numeric contingency table. — is_matrix","title":"Verify a 2x2 matrix as a numeric contingency table. — is_matrix","text":"is_matrix verifies mx valid 2x2 matrix (.e., numeric contingency table).","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify a 2x2 matrix as a numeric contingency table. — is_matrix","text":"","code":"is_matrix(mx)"},{"path":"https://hneth.github.io/riskyr/reference/is_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify a 2x2 matrix as a numeric contingency table. — is_matrix","text":"mx object verify (required).","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify a 2x2 matrix as a numeric contingency table. — is_matrix","text":"Boolean value: TRUE mx numeric matrix 2x2 contingency table; otherwise FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify a 2x2 matrix as a numeric contingency table. — is_matrix","text":"is_matrix restrictive .matrix, also requires mx .numeric, .table, nrows(mx) == 2, ncols(mx) == 2.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_matrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Verify a 2x2 matrix as a numeric contingency table. — is_matrix","text":"Neth, H., Gradwohl, N., Streeb, D., Keim, D.., & Gaissmaier, W. (2021). Perspectives 2×2 matrix: Solving semantically distinct problems based shared structure binary contingencies. Frontiers Psychology, 11, 567817. doi: doi:10.3389/fpsyg.2020.567817","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify a 2x2 matrix as a numeric contingency table. — is_matrix","text":"","code":"is_matrix(1:4) #> is_matrix: mx is no matrix. #> [1] FALSE is_matrix(matrix(\"A\")) #> is_matrix: mx is no contingency table. #> [1] FALSE is_matrix(matrix(1:4)) #> is_matrix: mx is no contingency table. #> [1] FALSE is_matrix(as.table(matrix(1:4, nrow = 1, ncol = 4))) #> is_matrix: mx does not have 2 rows. #> [1] FALSE is_matrix(as.table(matrix(1:4, nrow = 4, ncol = 1))) #> is_matrix: mx does not have 2 rows. #> [1] FALSE is_matrix(as.table(matrix(1:4, nrow = 2, ncol = 2))) #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/is_perc.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that input is a percentage (numeric value from 0 to 100). — is_perc","title":"Verify that input is a percentage (numeric value from 0 to 100). — is_perc","text":"is_perc function checks whether single argument perc percentage (proportion, .e., numeric value range 0 100).","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_perc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that input is a percentage (numeric value from 0 to 100). — is_perc","text":"","code":"is_perc(perc)"},{"path":"https://hneth.github.io/riskyr/reference/is_perc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that input is a percentage (numeric value from 0 to 100). — is_perc","text":"perc single (typically numeric) argument.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_perc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that input is a percentage (numeric value from 0 to 100). — is_perc","text":"Boolean value: TRUE perc percentage (proportion), otherwise FALSE.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_perc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that input is a percentage (numeric value from 0 to 100). — is_perc","text":"","code":"# ways to succeed: is_perc(2)    # => TRUE, but does NOT return the percentage 2. #> [1] TRUE is_perc(1/2)  # => TRUE, but does NOT return the percentage 0.5. #> [1] TRUE  ## note: # pc_sq <- seq(0, 100, by = 10) # is_perc(pc_sq)       # => TRUE (for vector)  ## ways to fail: # is_perc(NA)          # => FALSE + warning (NA values) # is_perc(NaN)         # => FALSE + warning (NaN values) # is_perc(\"Bernoulli\") # => FALSE + warning (non-numeric values) # is_perc(101)         # => FALSE + warning (beyond range)"},{"path":"https://hneth.github.io/riskyr/reference/is_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that input is a probability (numeric value from 0 to 1). — is_prob","title":"Verify that input is a probability (numeric value from 0 to 1). — is_prob","text":"is_prob function checks whether argument prob (scalar vector) probability (.e., numeric value range 0 1).","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that input is a probability (numeric value from 0 to 1). — is_prob","text":"","code":"is_prob(prob, NA_warn = FALSE)"},{"path":"https://hneth.github.io/riskyr/reference/is_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that input is a probability (numeric value from 0 to 1). — is_prob","text":"prob numeric argument (scalar vector) checked. NA_warn Boolean value determining whether warning shown NA values. Default: NA_warn = FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that input is a probability (numeric value from 0 to 1). — is_prob","text":"Boolean value: TRUE prob probability, otherwise FALSE.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that input is a probability (numeric value from 0 to 1). — is_prob","text":"","code":"is_prob(1/2)                  # TRUE #> [1] TRUE is_prob(2)                    # FALSE #> [1] FALSE  # vectors: p_seq <- seq(0, 1, by = .1)   # Vector of probabilities is_prob(p_seq)                # TRUE (as scalar, not: TRUE TRUE etc.) #> [1] TRUE is_prob(c(.1, 2, .9))         # FALSE (as scalar, not: TRUE FALSE etc.) #> [1] FALSE  ## watch out for: # is_prob(NA)                   # => FALSE + NO warning! # is_prob(0/0)                  # => FALSE + NO warning (NA + NaN values) # is_prob(0/0, NA_warn = TRUE)  # => FALSE + warning (NA values)  ## ways to fail: # is_prob(8, NA_warn = TRUE)         # => FALSE + warning (outside range element) # is_prob(c(.5, 8), NA_warn = TRUE)  # => FALSE + warning (outside range vector element) # is_prob(\"Laplace\", NA_warn = TRUE) # => FALSE + warning (non-numeric values)"},{"path":"https://hneth.github.io/riskyr/reference/is_suff_prob_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify a sufficient set of probability inputs. — is_suff_prob_set","title":"Verify a sufficient set of probability inputs. — is_suff_prob_set","text":"is_suff_prob_set function takes 3 5 probabilities inputs verifies sufficient compute derived probabilities combined frequencies population N individuals.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_suff_prob_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify a sufficient set of probability inputs. — is_suff_prob_set","text":"","code":"is_suff_prob_set(prev, sens = NA, mirt = NA, spec = NA, fart = NA)"},{"path":"https://hneth.github.io/riskyr/reference/is_suff_prob_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify a sufficient set of probability inputs. — is_suff_prob_set","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_suff_prob_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify a sufficient set of probability inputs. — is_suff_prob_set","text":"Boolean value: TRUE probabilities provided sufficient, otherwise FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_suff_prob_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify a sufficient set of probability inputs. — is_suff_prob_set","text":"alternative input option frequencies provided, specification essential probability prev always necessary. However, 2 essential probabilities choice: either sens mirt necessary (complements). either spec fart necessary (complements). is_suff_prob_set verify type, range, consistency arguments. See is_prob is_complement purpose.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_suff_prob_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify a sufficient set of probability inputs. — is_suff_prob_set","text":"","code":"# ways to work: is_suff_prob_set(prev = 1, sens = 1, spec = 1)  # => TRUE #> [1] TRUE is_suff_prob_set(prev = 1, mirt = 1, spec = 1)  # => TRUE #> [1] TRUE is_suff_prob_set(prev = 1, sens = 1, fart = 1)  # => TRUE #> [1] TRUE is_suff_prob_set(prev = 1, mirt = 1, fart = 1)  # => TRUE #> [1] TRUE  # watch out for: is_suff_prob_set(prev = 1, sens = 2, spec = 3)  # => TRUE, but is_prob is FALSE #> [1] TRUE is_suff_prob_set(prev = 1, mirt = 2, fart = 4)  # => TRUE, but is_prob is FALSE #> [1] TRUE is_suff_prob_set(prev = 1, sens = 2, spec = 3, fart = 4)  # => TRUE, but is_prob is FALSE #> [1] TRUE  ## ways to fail: # is_suff_prob_set()                    # => FALSE + warning (prev missing) # is_suff_prob_set(prev = 1)            # => FALSE + warning (sens or mirt missing) # is_suff_prob_set(prev = 1, sens = 1)  # => FALSE + warning (spec or fart missing)"},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_pair.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that a pair of probability inputs can be a pair of complementary probabilities. — is_valid_prob_pair","title":"Verify that a pair of probability inputs can be a pair of complementary probabilities. — is_valid_prob_pair","text":"is_valid_prob_pair function verifies pair 2 numeric inputs p1 p2 can interpreted valid pair probabilities.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_pair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that a pair of probability inputs can be a pair of complementary probabilities. — is_valid_prob_pair","text":"","code":"is_valid_prob_pair(p1, p2, tol = 0.01)"},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_pair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that a pair of probability inputs can be a pair of complementary probabilities. — is_valid_prob_pair","text":"p1 numeric argument (typically probability range 0 1). p2 numeric argument (typically probability range 0 1). tol numeric tolerance value.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_pair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that a pair of probability inputs can be a pair of complementary probabilities. — is_valid_prob_pair","text":"Boolean value: TRUE exactly one argument probability, arguments probabilities complements, otherwise FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_pair.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify that a pair of probability inputs can be a pair of complementary probabilities. — is_valid_prob_pair","text":"is_valid_prob_pair wrapper function combines is_prob is_complement one function. Either p1 p2 must probability (verified via is_prob). arguments provided must probabilities complements (verified via is_complement). argument tol optional (default value .01) Numeric near-complements differ less value still considered complements.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_pair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that a pair of probability inputs can be a pair of complementary probabilities. — is_valid_prob_pair","text":"","code":"# ways to succeed: is_valid_prob_pair(1, 0)      # => TRUE #> [1] TRUE is_valid_prob_pair(0, 1)      # => TRUE #> [1] TRUE is_valid_prob_pair(1, NA)     # => TRUE + warning (NA) #> [1] TRUE is_valid_prob_pair(NA, 1)     # => TRUE + warning (NA) #> [1] TRUE is_valid_prob_pair(.50, .51)  # => TRUE (as within tol) #> [1] TRUE  # ways to fail: is_valid_prob_pair(.50, .52)  # => FALSE (as beyond tol) #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> [1] FALSE is_valid_prob_pair(1, 2)      # => FALSE + warning (beyond range) #> [1] FALSE is_valid_prob_pair(NA, NA)    # => FALSE + warning (NA) #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that a set of probability inputs is valid. — is_valid_prob_set","title":"Verify that a set of probability inputs is valid. — is_valid_prob_set","text":"is_valid_prob_set function verifies set (3 5) numeric inputs can interpreted valid set (3 essential 2 optional) probabilities.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that a set of probability inputs is valid. — is_valid_prob_set","text":"","code":"is_valid_prob_set(prev, sens = NA, mirt = NA, spec = NA, fart = NA, tol = 0.01)"},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that a set of probability inputs is valid. — is_valid_prob_set","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. tol numeric tolerance value used is_complement.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that a set of probability inputs is valid. — is_valid_prob_set","text":"Boolean value: TRUE probabilities provided valid; otherwise FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_set.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify that a set of probability inputs is valid. — is_valid_prob_set","text":"is_valid_prob_set wrapper function combines is_prob, is_suff_prob_set, is_complement one function. alternative input option frequencies provided, specification essential probability prev always necessary. However, 2 essential probabilities choice: Either sens mirt necessary         (complements). Either spec fart necessary        (complements). argument tol optional (default value .01) used tolerance value is_complement. is_valid_prob_set verifies validity inputs, compute return numeric variables. Use is_extreme_prob_set verify sets probabilities describe extreme cases init_num initializing basic parameters.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that a set of probability inputs is valid. — is_valid_prob_set","text":"","code":"# ways to succeed: is_valid_prob_set(1, 1, 0, 1, 0)                 # => TRUE #> [1] TRUE is_valid_prob_set(.3, .9, .1, .8, .2)            # => TRUE #> [1] TRUE is_valid_prob_set(.3, .9, .1, .8, NA)            # => TRUE + warning (NA) #> [1] TRUE is_valid_prob_set(.3, .9, NA, .8, NA)            # => TRUE + warning (NAs) #> [1] TRUE is_valid_prob_set(.3, .9, NA, NA, .8)            # => TRUE + warning (NAs) #> [1] TRUE is_valid_prob_set(.3, .8, .1, .7, .2, tol = .1)  # => TRUE (due to increased tol) #> [1] TRUE  # watch out for: is_valid_prob_set(1, 0, 1, 0, 1)    # => TRUE, but NO warning about extreme case! #> [1] TRUE is_valid_prob_set(1, 1, 0, 1, 0)    # => TRUE, but NO warning about extreme case! #> [1] TRUE is_valid_prob_set(1, 1, 0, 1, NA)   # => TRUE, but NO warning about extreme case! #> [1] TRUE is_valid_prob_set(1, 1, 0, NA, 1)   # => TRUE, but NO warning about extreme case! #> [1] TRUE is_valid_prob_set(1, 1, 0, NA, 0)   # => TRUE, but NO warning about extreme case! #> [1] TRUE  # ways to fail: is_valid_prob_set(8, 1, 0, 1, 0)      # => FALSE + warning (is_prob fails) #> [1] FALSE is_valid_prob_set(1, 1, 8, 1, 0)      # => FALSE + warning (is_prob fails) #> [1] FALSE is_valid_prob_set(2, 1, 3, 1, 4)      # => FALSE + warning (is_prob fails) #> [1] FALSE is_valid_prob_set(1, .8, .2, .7, .2)  # => FALSE + warning (beyond complement range) #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> [1] FALSE is_valid_prob_set(1, .8, .3, .7, .3)  # => FALSE + warning (beyond complement range) #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> [1] FALSE is_valid_prob_set(1, 1, 1, 1, 1)      # => FALSE + warning (beyond complement range) #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> [1] FALSE is_valid_prob_set(1, 1, 0, 1, 1)      # => FALSE + warning (beyond complement range) #> Warning: Probabilities (p1 and p2) are not complements (in tolerated range). #> [1] FALSE"},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_triple.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that a triple of essential probability inputs is valid. — is_valid_prob_triple","title":"Verify that a triple of essential probability inputs is valid. — is_valid_prob_triple","text":"is_valid_prob_triple deprecated function verifies set 3 numeric inputs can interpreted valid set 3 probabilities.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_triple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that a triple of essential probability inputs is valid. — is_valid_prob_triple","text":"","code":"is_valid_prob_triple(prev, sens, spec)"},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_triple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that a triple of essential probability inputs is valid. — is_valid_prob_triple","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE).","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_triple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that a triple of essential probability inputs is valid. — is_valid_prob_triple","text":"Boolean value: TRUE probabilities provided valid; otherwise FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_triple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify that a triple of essential probability inputs is valid. — is_valid_prob_triple","text":"is_valid_prob_triple simplified version is_valid_prob_set. quick wrapper function verifies is_prob 3 arguments. is_valid_prob_triple compute return numeric variables. Use is_extreme_prob_set verify extreme cases comp_complete_prob_set complete sets valid probabilities.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/is_valid_prob_triple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that a triple of essential probability inputs is valid. — is_valid_prob_triple","text":"","code":"# ways to work: is_valid_prob_triple(0, 0, 0)    # => TRUE #> [1] TRUE is_valid_prob_triple(1, 1, 1)    # => TRUE #> [1] TRUE  ## ways to fail: # is_valid_prob_triple(0, 0)       # => ERROR (as no triple) # is_valid_prob_triple(0, 0, 7)    # => FALSE + warning (beyond range) # is_valid_prob_triple(0, NA, 0)   # => FALSE + warning (NA) # is_valid_prob_triple(\"p\", 0, 0)  # => FALSE + warning (non-numeric)"},{"path":"https://hneth.github.io/riskyr/reference/mi.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency of misses or false negatives (FN). — mi","title":"Frequency of misses or false negatives (FN). — mi","text":"mi frequency misses false negatives (FN) population N individuals.","code":""},{"path":"https://hneth.github.io/riskyr/reference/mi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency of misses or false negatives (FN). — mi","text":"","code":"mi"},{"path":"https://hneth.github.io/riskyr/reference/mi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Frequency of misses or false negatives (FN). — mi","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/mi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Frequency of misses or false negatives (FN). — mi","text":"Definition: mi frequency individuals Condition = TRUE Decision = FALSE (negative). mi measure incorrect classifications (type-II errors), individual case. Relationships: probabilities: frequency mi depends miss rate mirt (aka. false negative rate, FNR) conditional prevalence prev. frequencies: population size N following relationships hold:  N = cond_true + cond_false (condition) N = dec_pos + dec_neg (decision) N = dec_cor + dec_err (correspondence decision condition) N = hi + mi + fa + cr (condition x decision)","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/mirt.html","id":null,"dir":"Reference","previous_headings":"","what":"The miss rate of a decision process or diagnostic procedure. — mirt","title":"The miss rate of a decision process or diagnostic procedure. — mirt","text":"mirt defines decision's miss rate value: conditional probability decision negative condition TRUE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/mirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The miss rate of a decision process or diagnostic procedure. — mirt","text":"","code":"mirt"},{"path":"https://hneth.github.io/riskyr/reference/mirt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The miss rate of a decision process or diagnostic procedure. — mirt","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/mirt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The miss rate of a decision process or diagnostic procedure. — mirt","text":"Understanding obtaining miss rate mirt: Definition: sens conditional probability   incorrect negative decision given   condition TRUE: mirt = p(decision = negative | condition = TRUE) probability failing detect true cases   (condition = TRUE). Perspective:   mirt classifies   subset cond_true individuals   decision (mirt = mi/cond_true). Alternative names:   false negative rate (FNR),   rate type-II errors (beta) Relationships: . mirt complement   sensitivity sens (aka. hit rate HR): mirt = (1 - sens) = (1 - HR) b. mirt _opposite_ conditional probability   – complement –   false omission rate : = p(condition = TRUE | decision = negative) terms frequencies,   mirt ratio   mi divided cond_true   (.e., hi + mi): mirt = mi/cond_true = mi/(hi + mi) Dependencies:   mirt feature decision process   diagnostic procedure measure   incorrect decisions (false negatives). However, due conditional probability,   value mirt intrinsic   decision process, also depends   condition's prevalence value prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/mirt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The miss rate of a decision process or diagnostic procedure. — mirt","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/mirt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The miss rate of a decision process or diagnostic procedure. — mirt","text":"","code":"mirt <- .15     # => sets a miss rate of 15% mirt <- 15/100  # => (decision = negative) for 15 out of 100 people with (condition = TRUE)"},{"path":"https://hneth.github.io/riskyr/reference/num.html","id":null,"dir":"Reference","previous_headings":"","what":"List current values of basic numeric variables. — num","title":"List current values of basic numeric variables. — num","text":"num list named numeric variables containing 4 basic probabilities (prev, sens, spec, fart) 1 frequency parameter (population size N).","code":""},{"path":"https://hneth.github.io/riskyr/reference/num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List current values of basic numeric variables. — num","text":"","code":"num"},{"path":"https://hneth.github.io/riskyr/reference/num.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List current values of basic numeric variables. — num","text":"object class list length 5.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List current values of basic numeric variables. — num","text":"","code":"num <- init_num()  # => initialize num to default parameters num                # => show defaults #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.85 #>  #> $spec #> [1] 0.75 #>  #> $fart #> [1] 0.25 #>  #> $N #> [1] 1000 #>  length(num)        # => 5 #> [1] 5"},{"path":"https://hneth.github.io/riskyr/reference/pal.html","id":null,"dir":"Reference","previous_headings":"","what":"List current values of scenario color palette. — pal","title":"List current values of scenario color palette. — pal","text":"pal initialized vector named elements (colors) define scenario color scheme used throughout riskyr package.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List current values of scenario color palette. — pal","text":"","code":"pal"},{"path":"https://hneth.github.io/riskyr/reference/pal.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List current values of scenario color palette. — pal","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List current values of scenario color palette. — pal","text":"color information corresponding current scenario stored named colors vector pal. change color, assign new color existing element name. pal currently contains colors following names: N Color representing population N cases individuals. cond_true Color representing cases cond_true, current condition TRUE. cond_false Color representing cases cond_false, current condition FALSE. dec_pos Color representing cases dec_pos, current decision positive. dec_neg Color representing cases dec_neg, current decision negative. dec_cor Color representing cases correct decisions dec_cor, current decision accurate. dec_err Color representing cases erroneous decisions dec_err, current decision inaccurate. hi Color representing hits true positives hi (.e., correct cases current condition TRUE decision positive). mi Color representing misses false negatives mi (.e., incorrect cases current condition TRUE decision negative). fa Color representing false alarms false positives fa (.e., incorrect cases current condition FALSE decision positive). cr Color representing correct rejections true negatives cr (.e., correct cases current condition FALSE decision negative). ppv Color representing positive predictive values PPV (.e., conditional probability condition TRUE, provided decision positive). npv Color representing negative predictive values NPV (.e., conditional probability condition FALSE, provided decision negative). txt Color used text labels. brd Color used borders. bg Color used plot background (used set par(bg = bg_col)). Note color names frequencies correspond frequency names, different probabilities (written lowercase PPV NPV assigned colors).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List current values of scenario color palette. — pal","text":"","code":"pal        # shows all color names and current values #>                 N         cond_true        cond_false           dec_pos  #>       \"#E6E6E6FC\" \"lightgoldenrod1\"       \"#BFBFBFFC\"         \"#F7A97F\"  #>           dec_neg           dec_cor           dec_err                hi  #>       \"#A6A6A6FC\"      \"olivedrab4\"      \"steelblue3\"         \"#B8D989\"  #>                mi                fa                cr               ppv  #>         \"#73C8EA\"         \"#1D95C6\"         \"#80B139\"         \"#F26418\"  #>               npv               txt               brd                bg  #>         \"#1D95C6\"       \"#000000FC\"         \"#3E3F3A\"           \"white\"  pal[\"hi\"]  # shows the current color for hits (true positives, TP) #>        hi  #> \"#B8D989\"  pal[\"hi\"] <- \"gold\"  # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative color palette for black-and-white (greyscale) graphs. — pal_bw","title":"Alternative color palette for black-and-white (greyscale) graphs. — pal_bw","text":"pal_bw initialized vector named elements (colors) define alternative (black--white, b/w) scenario color scheme.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative color palette for black-and-white (greyscale) graphs. — pal_bw","text":"","code":"pal_bw"},{"path":"https://hneth.github.io/riskyr/reference/pal_bw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternative color palette for black-and-white (greyscale) graphs. — pal_bw","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_bw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative color palette for black-and-white (greyscale) graphs. — pal_bw","text":"Note pal_bw uses various shades grey frequency boxes bounds remain visible white background f_lwd = 0 (per default graphs). See pal_bwp stricter version enforces black text lines white boxes (e.g., printing purposes). See pal default color information. Assign pal <- pal_bw use default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_bw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative color palette for black-and-white (greyscale) graphs. — pal_bw","text":"","code":"pal_bw        # shows all color names and current values #>           N   cond_true  cond_false     dec_pos     dec_neg     dec_cor  #> \"#F2F2F2FC\" \"#E6E6E6FC\" \"#CCCCCCFC\" \"#D9D9D9FC\" \"#B3B3B3FC\" \"#BFBFBFFC\"  #>     dec_err          hi          mi          fa          cr         ppv  #> \"#999999FC\" \"#CCCCCCFC\" \"#999999FC\" \"#808080FC\" \"#B3B3B3FC\" \"#999999FC\"  #>         npv         txt         brd          bg  #> \"#737373FC\" \"#000000FC\" \"#1A1A1AFC\"     \"white\"  pal_bw[\"hi\"]  # shows the current color for hits (true positives, TP) #>          hi  #> \"#CCCCCCFC\"  pal_bw[\"hi\"] <- \"gold\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_bwp.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative color palette for black-and-white graphs (for printing purposes). — pal_bwp","title":"Alternative color palette for black-and-white graphs (for printing purposes). — pal_bwp","text":"pal_bwp initialized vector named elements (colors) define strict (black--white, b/w) scenario color scheme suited printing graphs black--white.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_bwp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative color palette for black-and-white graphs (for printing purposes). — pal_bwp","text":"","code":"pal_bwp"},{"path":"https://hneth.github.io/riskyr/reference/pal_bwp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternative color palette for black-and-white graphs (for printing purposes). — pal_bwp","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_bwp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative color palette for black-and-white graphs (for printing purposes). — pal_bwp","text":"pal_bwp stricter version greyscale palette pal_bw enforces black text lines white boxes. Thus, bounds frequency boxes invisible white backgrounds unless default f_lwd = 0 changed (e.g., f_lwd = 1). background colors (frequencies) also used foreground colors (probabilities, e.g., plot_curve plot_plane). reason, plotting functions detect adjust colors /line settings pal_bwp used. See pal_bw permissible black--white palette uses various shades grey frequency boxes bounds remain visible white background f_lwd = 0 (per default graphs). See pal default color information. Assign pal <- pal_bwp use default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_bwp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative color palette for black-and-white graphs (for printing purposes). — pal_bwp","text":"","code":"pal_bwp        # shows all color names and current values #>          N  cond_true cond_false    dec_pos    dec_neg    dec_cor    dec_err  #>    \"white\"    \"white\"    \"white\"    \"white\"    \"white\"    \"white\"    \"white\"  #>         hi         mi         fa         cr        ppv        npv        txt  #>    \"white\"    \"white\"    \"white\"    \"white\"    \"black\"    \"black\"    \"black\"  #>        brd         bg  #>    \"black\"    \"white\"  pal_bwp[\"hi\"]  # shows the current color for hits (true positives, TP) #>      hi  #> \"white\"  pal_bwp[\"hi\"] <- \"gold\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_crisk.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palette for cumulative risk curve. — pal_crisk","title":"Color palette for cumulative risk curve. — pal_crisk","text":"pal_crisk defines default color palette plot_crisk function (named vector).","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_crisk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palette for cumulative risk curve. — pal_crisk","text":"","code":"pal_crisk"},{"path":"https://hneth.github.io/riskyr/reference/pal_crisk.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color palette for cumulative risk curve. — pal_crisk","text":"object class character length 10.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_crisk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color palette for cumulative risk curve. — pal_crisk","text":"Color names referents plots generated plot_crisk: \"cum\": Cumulative risk curve \"rinc\": Relative risk increments \"txt\": Text labels \"aux\": Auxiliary labels lines \"high\": Highlighting elements \"pas\": Past/passed risk \"rem\": Remaining risk \"delta\": Delta-X- -Y increments \"poly\": Polygon increments \"popu\": Population partitions","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_crisk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palette for cumulative risk curve. — pal_crisk","text":"","code":"pal_crisk  # show color palette (and names) #>               cum              rinc               txt               aux  #>     \"deepskyblue\"         \"#D23430\"           \"black\"          \"grey50\"  #>              high               pas               rem             delta  #>        \"deeppink\"         \"#8E8C84\" \"lightgoldenrod1\"         \"#284A6C\"  #>              poly              popu  #>     \"deepskyblue\"         \"#80B139\""},{"path":"https://hneth.github.io/riskyr/reference/pal_kn.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative color palette for kn. — pal_kn","title":"Alternative color palette for kn. — pal_kn","text":"pal_kn initialized vector named elements (colors) define alternative (kn) scenario color scheme.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_kn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative color palette for kn. — pal_kn","text":"","code":"pal_kn"},{"path":"https://hneth.github.io/riskyr/reference/pal_kn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternative color palette for kn. — pal_kn","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_kn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative color palette for kn. — pal_kn","text":"See pal default color information. Assign pal <- pal_kn use default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_kn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative color palette for kn. — pal_kn","text":"","code":"pal_kn        # shows all color names and current values #>           N   cond_true  cond_false     dec_pos     dec_neg     dec_cor  #> \"#F2F2F2FC\" \"#B3B3B3FC\" \"#D9D9D9FC\" \"#999999FC\" \"#BFBFBFFC\" \"#808080FC\"  #>     dec_err          hi          mi          fa          cr         ppv  #> \"#A6A6A6FC\"   \"#00A9E0\"   \"#A6E1F4\"   \"#CCEEF9\"   \"#59C7EB\"   \"#F26418\"  #>         npv         txt         brd          bg  #>   \"#008ECE\" \"#000000FC\" \"#1A1A1AFC\"     \"white\"  pal_kn[\"hi\"]  # shows the current color for hits (true positives, TP) #>        hi  #> \"#00A9E0\"  pal_kn[\"hi\"] <- \"grey\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_mbw.html","id":null,"dir":"Reference","previous_headings":"","what":"Modern and reduced color palette (in green/blue/bw). — pal_mbw","title":"Modern and reduced color palette (in green/blue/bw). — pal_mbw","text":"pal_mod initialized vector named colors define reduced modern scenario color scheme (green/blue/bw).","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_mbw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modern and reduced color palette (in green/blue/bw). — pal_mbw","text":"","code":"pal_mbw"},{"path":"https://hneth.github.io/riskyr/reference/pal_mbw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modern and reduced color palette (in green/blue/bw). — pal_mbw","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_mbw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modern and reduced color palette (in green/blue/bw). — pal_mbw","text":"See pal_org original color information; pal_mod richer modern color palette; pal_bw reduced black--white color palette. Assign pal <- pal_mbw use default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_mbw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modern and reduced color palette (in green/blue/bw). — pal_mbw","text":"","code":"pal_mbw        # shows all color names and current values #>            N    cond_true   cond_false      dec_pos      dec_neg      dec_cor  #>  \"#E6E6E6FC\"  \"#CCCCCCFC\"  \"#BFBFBFFC\"  \"#D9D9D9FC\"  \"#A6A6A6FC\" \"olivedrab4\"  #>      dec_err           hi           mi           fa           cr          ppv  #> \"steelblue3\"    \"#B8D989\"    \"#73C8EA\"    \"#1D95C6\"    \"#80B139\"    \"#F26418\"  #>          npv          txt          brd           bg  #>    \"#1D95C6\"  \"#000000FC\"    \"#3E3F3A\"      \"white\"  pal_mbw[\"hi\"]  # shows the current color for hits (true positives, TP) #>        hi  #> \"#B8D989\"  pal_mbw[\"hi\"] <- \"gold\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Modern color palette (in green/blue/orange). — pal_mod","title":"Modern color palette (in green/blue/orange). — pal_mod","text":"pal_mod initialized vector named colors define modern scenario color scheme (green/blue/orange).","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modern color palette (in green/blue/orange). — pal_mod","text":"","code":"pal_mod"},{"path":"https://hneth.github.io/riskyr/reference/pal_mod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Modern color palette (in green/blue/orange). — pal_mod","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_mod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modern color palette (in green/blue/orange). — pal_mod","text":"See pal default color information. Assign pal <- pal_mod use default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modern color palette (in green/blue/orange). — pal_mod","text":"","code":"pal_mod        # shows all color names and current values #>                 N         cond_true        cond_false           dec_pos  #>       \"#E6E6E6FC\" \"lightgoldenrod1\"       \"#BFBFBFFC\"         \"#F7A97F\"  #>           dec_neg           dec_cor           dec_err                hi  #>       \"#A6A6A6FC\"      \"olivedrab4\"      \"steelblue3\"         \"#B8D989\"  #>                mi                fa                cr               ppv  #>         \"#73C8EA\"         \"#1D95C6\"         \"#80B139\"         \"#F26418\"  #>               npv               txt               brd                bg  #>         \"#1D95C6\"       \"#000000FC\"         \"#3E3F3A\"           \"white\"  pal_mod[\"hi\"]  # shows the current color for hits (true positives, TP) #>        hi  #> \"#B8D989\"  pal_mod[\"hi\"] <- \"gold\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_org.html","id":null,"dir":"Reference","previous_headings":"","what":"Original color palette. — pal_org","title":"Original color palette. — pal_org","text":"pal_org copy pal (retrieve original set colors case pal changed).","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_org.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Original color palette. — pal_org","text":"","code":"pal_org"},{"path":"https://hneth.github.io/riskyr/reference/pal_org.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Original color palette. — pal_org","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_org.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Original color palette. — pal_org","text":"See pal default color information. Assign pal <- pal_org re-set default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_org.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Original color palette. — pal_org","text":"","code":"pal_org        # shows all color names and current values #>                 N         cond_true        cond_false           dec_pos  #>       \"#E6E6E6FC\" \"lightgoldenrod1\"   \"lightskyblue2\"      \"rosybrown3\"  #>           dec_neg           dec_cor           dec_err                hi  #> \"lightsteelblue3\"      \"palegreen3\"      \"firebrick3\"      \"olivedrab4\"  #>                mi                fa                cr               ppv  #>         \"tomato3\"    \"lightsalmon2\"      \"olivedrab3\"         \"sienna1\"  #>               npv               txt               brd                bg  #>      \"steelblue3\"       \"#030303FC\"       \"#333333FC\"           \"white\"  pal_org[\"hi\"]  # shows the current color for hits (true positives, TP) #>           hi  #> \"olivedrab4\"  pal_org[\"hi\"] <- \"gold\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative color palette for graphs (with RGB colors). — pal_rgb","title":"Alternative color palette for graphs (with RGB colors). — pal_rgb","text":"pal_rgb initialized vector named elements (colors) define alternative (reduced) scenario color scheme (using red, green, blue colors).","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative color palette for graphs (with RGB colors). — pal_rgb","text":"","code":"pal_rgb"},{"path":"https://hneth.github.io/riskyr/reference/pal_rgb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternative color palette for graphs (with RGB colors). — pal_rgb","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_rgb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative color palette for graphs (with RGB colors). — pal_rgb","text":"See pal default color information. Assign pal <- pal_rgb use default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_rgb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative color palette for graphs (with RGB colors). — pal_rgb","text":"","code":"pal_rgb        # shows all color names and current values #>              N      cond_true     cond_false        dec_pos        dec_neg  #>    \"#F2F2F2FC\"    \"#E6E6E6FC\"    \"#BFBFBFFC\"    \"#D9D9D9FC\"    \"#B3B3B3FC\"  #>        dec_cor        dec_err             hi             mi             fa  #>    \"#BFBFBFFC\"    \"#999999FC\"   \"olivedrab4\"      \"tomato3\" \"lightsalmon2\"  #>             cr            ppv            npv            txt            brd  #>   \"olivedrab3\"      \"sienna1\"   \"steelblue3\"    \"#000000FC\"    \"#1A1A1AFC\"  #>             bg  #>        \"white\"  pal_rgb[\"hi\"]  # shows the current color for hits (true positives, TP) #>           hi  #> \"olivedrab4\"  pal_rgb[\"hi\"] <- \"gold\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_unikn.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative color palette for unikn. — pal_unikn","title":"Alternative color palette for unikn. — pal_unikn","text":"pal_unikn initialized vector named elements (colors) define alternative (unikn) scenario color scheme.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_unikn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative color palette for unikn. — pal_unikn","text":"","code":"pal_unikn"},{"path":"https://hneth.github.io/riskyr/reference/pal_unikn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternative color palette for unikn. — pal_unikn","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_unikn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative color palette for unikn. — pal_unikn","text":"See pal default color information. Assign pal <- pal_unikn use default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_unikn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative color palette for unikn. — pal_unikn","text":"","code":"pal_unikn        # shows all color names and current values #>           N   cond_true  cond_false     dec_pos     dec_neg     dec_cor  #> \"#F2F2F2FF\"   \"#59C7EB\"   \"#CCEEF9\"   \"#ECA0B2\"   \"#8290BB\"   \"#54BFB7\"  #>     dec_err          hi          mi          fa          cr         ppv  #>   \"#BC7A8F\"   \"#6AAAB7\"   \"#D2A6B4\"   \"#BC7A8F\"   \"#9CC6CF\"   \"#E0607E\"  #>         npv         txt         brd          bg  #>   \"#3E5496\" \"#000000FF\" \"#1A1A1AFF\"     \"white\"  pal_unikn[\"hi\"]  # shows the current color for hits (true positives, TP) #>        hi  #> \"#6AAAB7\"  pal_unikn[\"hi\"] <- \"grey\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/pal_vir.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative color palette using viridis colors. — pal_vir","title":"Alternative color palette using viridis colors. — pal_vir","text":"pal_vir initialized vector named elements (colors) define scenario color scheme modeled viridis color scale.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_vir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative color palette using viridis colors. — pal_vir","text":"","code":"pal_vir"},{"path":"https://hneth.github.io/riskyr/reference/pal_vir.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternative color palette using viridis colors. — pal_vir","text":"object class character length 16.","code":""},{"path":"https://hneth.github.io/riskyr/reference/pal_vir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative color palette using viridis colors. — pal_vir","text":"colors select Matplotlib viridis color map created Stéfan van der Walt Nathaniel Smith. See viridisLite package (maintained Simon Garnier) information. Assign pal <- pal_vir use default color scheme throughout riskyr package.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/pal_vir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative color palette using viridis colors. — pal_vir","text":"","code":"pal_vir        # shows all color names and current values #>           N   cond_true  cond_false     dec_pos     dec_neg     dec_cor  #> \"#B3B3B3FC\" \"#D9D9D9FC\" \"#8C8C8CFC\" \"#CCCCCCFC\" \"#999999FC\" \"#E6E6E6FC\"  #>     dec_err          hi          mi          fa          cr         ppv  #> \"#808080FC\" \"#85D54AFF\" \"#FDE725FF\" \"#2D708EFF\" \"#2BB07FFF\" \"#51C56AFF\"  #>         npv         txt         brd          bg  #> \"#433E85FF\" \"#000000FC\" \"#1A1A1AFC\"     \"white\"  pal_vir[\"hi\"]  # shows the current color for hits (true positives, TP) #>          hi  #> \"#85D54AFF\"  pal_vir[\"hi\"] <- \"green3\" # defines a new color for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/plot.box.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a frequency box object — plot.box","title":"Plot a frequency box object — plot.box","text":"plot.box utility method allows plot low level boxes riskyr plots.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot.box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a frequency box object — plot.box","text":"","code":"# S3 method for class 'box' plot(x, cur_freq = freq, lbl_txt = txt, col_pal = pal, ...)"},{"path":"https://hneth.github.io/riskyr/reference/plot.box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a frequency box object — plot.box","text":"x box (.e., object class box) plotted. cur_freq Current frequency information (see freq details). lbl_txt Current text information (see txt details). col_pal Current color palette (see pal details). ... Additional (graphical) parameters passed underlying plotting functions.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot.box.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a frequency box object — plot.box","text":"plot.riskyr also uses text settings specified \"riskyr\" object.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot.riskyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a riskyr scenario. — plot.riskyr","title":"Plot a riskyr scenario. — plot.riskyr","text":"plot.riskyr method allows generate different plot types \"riskyr\" object.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot.riskyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a riskyr scenario. — plot.riskyr","text":"","code":"# S3 method for class 'riskyr' plot(x = NULL, type = \"prism\", main = NULL, sub = NULL, ...)"},{"path":"https://hneth.github.io/riskyr/reference/plot.riskyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a riskyr scenario. — plot.riskyr","text":"x riskyr object, usually result call riskyr. Pre-defined scenarios also type riskyr. type type plot generated. main Text label main plot title. Default: main = NULL (using x$scen_lbl per default). sub Text label plot subtitle (2nd line). Default: sub = NULL (using sub = \"type\" shows plot type). following plot types currently available: type = \"prism\" type = \"net\" type = \"tree\":   Risk information plotted network diagram frequencies probabilities (default).   See plot_prism options. type = \"tab\" type = \"ftab\":   Risk information plotted 2--2 frequency contingency table.   See plot_tab options. type = \"area\" type = \"mosaic\":   Risk information plotted mosaic plot (scaled area).   See plot_area options. type = \"bar\" type = \"fbar\":   Risk information plotted bar chart.   See plot_bar options. type = \"icons\" type = \"iconarray\":   underlying population plotted array icons.   See plot_icons options. type = \"curve\" type = \"curves\":   Draws curves selected values (including PPV, NPV)   See plot_curve options. type = \"plane\" type = \"planes\":   Draws 3D-plane selected values (e.g., predictive values PPV NPV)   See plot_plane options. ... Additional parameters passed underlying plotting functions.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot.riskyr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a riskyr scenario. — plot.riskyr","text":"plot.riskyr also uses text settings specified \"riskyr\" object.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot.riskyr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a riskyr scenario. — plot.riskyr","text":"","code":"# Select a scenario (from list of scenarios): s1 <- scenarios$n1  # select scenario 1 from scenarios plot(s1)  # default plot (type = \"prism\")   # Plot types currently available: plot(s1, type = \"prism\")                # prism/network diagram (default) plot(s1, type = \"tree\", by = \"cd\")      # tree diagram (only 1 perspective)  plot(s1, type = \"area\")                 # area/mosaic plot  plot(s1, type = \"tab\")                  # 2x2 frequency/contingency table  plot(s1, type = \"bar\", dir = 2)         # bar plot  plot(s1, type = \"icons\")                # icon array  plot(s1, type = \"curve\", what = \"all\")  # curves as fn. of prev  plot(s1, type = \"plane\", what = \"NPV\")  # plane as function of sens & spec  plot(s1, type = \"default\")              # unknown type: use default plot #> Unknown plot type (in plot.riskyr): Using type = 'prism'."},{"path":"https://hneth.github.io/riskyr/reference/plot_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an area diagram of probabilities or frequencies. — plot_area","title":"Plot an area diagram of probabilities or frequencies. — plot_area","text":"plot_area assigns total probability population frequency area (square rectangle) shows probability frequency 4 classification cases (hi, mi, fa, cr) relative proportions area.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an area diagram of probabilities or frequencies. — plot_area","text":"","code":"plot_area(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   N = num$N,   by = \"cddc\",   p_split = \"v\",   area = \"sq\",   scale = \"p\",   round = TRUE,   sample = FALSE,   sum_w = 0.1,   gaps = c(NA, NA),   f_lbl = \"num\",   f_lbl_sep = NA,   f_lbl_sum = \"num\",   f_lbl_hd = \"nam\",   f_lwd = 0,   p_lbl = NA,   arr_c = -3,   col_p = c(grey(0.15, 0.99), \"yellow\", \"yellow\"),   brd_dis = 0.06,   lbl_txt = txt,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   cex_lbl = 0.9,   cex_p_lbl = NA,   col_pal = pal,   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an area diagram of probabilities or frequencies. — plot_area","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. N number individuals population. suitable value N computed, provided. Note: N represented plot, used computing frequency information freq current probabilities prob. character code specifying 2 perspectives split population subsets, 6 options: \"cddc\": condition (cd) decision (dc) (default); \"cdac\": condition (cd) accuracy (ac); \"dccd\": decision (dc) condition (cd); \"dcac\": decision (dc) accuracy (ac); \"accd\": accuracy (ac) condition (cd); \"acdc\": accuracy (ac) decision (dc). p_split Primary perspective population split, 2 options: \"v\": vertical (default); \"h\": horizontal. area character code specifying shape main area, 2 options: \"sq\": main area scaled square (default); \"\": scaling (rectangular area fills plot size). scale Scale probabilities corresponding area dimensions either exact probability (rounded non-rounded) frequency, 2 options: \"p\": scale main area dimensions exact probability (default); \"f\": re-compute probabilities (rounded non-rounded) frequencies   scale main area dimensions frequency. Note: scale setting matters display probability values  area plots small population sizes N round = TRUE. round Boolean option specifying whether computed frequencies rounded integers. Default: round = TRUE. sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. sum_w Border width 2 perspective summaries (top left borders) main area proportion area size (.e., range 0 <= sum_w <= 1). Default: sum_w = .10. Setting sum_w = 0, NA, NULL removes summaries; setting sum_w = 1 scales summaries size main areas. gaps Size gaps (binary numeric vector) specifying width vertical horizontal gaps proportions area size. Defaults: gaps = c(.02, .00) p_split = \"v\" gaps = c(.00, .02) p_split = \"h\". f_lbl Type label showing frequency values 4 main areas, 6 options: \"def\": abbreviated names frequency values; \"abb\": abbreviated frequency names (specified code); \"nam\": names (specified lbl_txt = txt); \"num\": numeric frequency values (default); \"namnum\": names (specified lbl_txt = txt) numeric values; \"\": frequency labels (f_lbl = NA NULL). f_lbl_sep Label separator main frequencies (used f_lbl = \"def\" \"namnum\"). Use f_lbl_sep = \":\\n\" add line break name numeric value. Default: f_lbl_sep = NA (set \" = \" \":\\n\" based f_lbl). f_lbl_sum Type label showing frequency values summary cells, 6 options f_lbl (). Default: f_lbl_sum = \"num\": numeric values . f_lbl_hd Type label showing frequency values header, 6 options f_lbl (). Default: f_lbl_hd = \"nam\": names (specified lbl_txt = txt). f_lwd Line width areas. Default: f_lwd = 0. p_lbl Type label showing 3 key probability links values, 7 options: \"def\": show links abbreviated names probability values; \"abb\": show links abbreviated probability names; \"nam\": show links probability names (specified code); \"num\": show links numeric probability values; \"namnum\": show links names numeric probability values; \"\": show links labels; NA: show labels links (p_lbl = NULL, default). arr_c Arrow code symbols ends probability links (numeric value -3 <= arr_c <= +6), following options: -1 -3: points one//end/s; 0: symbols; +1 +3: V-arrow one//end/s; +4 +6: T-arrow one//end/s. Default: arr_c = -3 (points ends). col_p Colors probability links (vector 3 colors). Default: col_p = c(grey(.15, .99), \"yellow\", \"yellow\"). (Also consider: \"black\", \"cornsilk\", \"whitesmoke\"). brd_dis Distance probability links area border (proportion area width). Default: brd_dis = .06. Note: Adjust avoid overlapping labels. Negative values show links outside main area. lbl_txt Default label set text elements. Default: lbl_txt = txt. main Text label main plot title. Default: main = txt$scen_lbl. sub Text label plot subtitle (2nd line). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. cex_lbl Scaling factor text labels (frequencies headers). Default: cex_lbl = .90. cex_p_lbl Scaling factor text labels (probabilities). Default: cex_p_lbl = cex_lbl - .05. col_pal Color palette. Default: col_pal = pal. mar_notes Boolean option showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an area diagram of probabilities or frequencies. — plot_area","text":"Nothing (NULL).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot an area diagram of probabilities or frequencies. — plot_area","text":"plot_area computes probabilities prob frequencies freq sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart) existing frequency information freq population size N individuals. plot_area generalizes replaces plot_mosaic. removing dependency R packages vcd grid providing many additional options.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an area diagram of probabilities or frequencies. — plot_area","text":"","code":"## Basics: # (1) Using global prob and freq values: plot_area()  # default area plot,  # same as: # plot_area(by = \"cddc\", p_split = \"v\", area = \"sq\", scale = \"p\")  # (2) Providing values: plot_area(prev = .5, sens = 4/5, spec = 3/5, N = 10)   # (3) Rounding and sampling: plot_area(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, area = \"hr\", round = FALSE)  plot_area(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, area = \"hr\", sample = TRUE, scale = \"freq\")   # (4) Custom colors and text: plot_area(prev = .2, sens = 4/5, spec = 3/5, N = 10,           by = \"cddc\", p_split = \"v\", scale = \"p\",           main = \"Custom text and color:\",           lbl_txt = txt_org, f_lbl = \"namnum\",           f_lbl_sep = \":\\n\", f_lwd = 2, col_pal = pal_rgb)   ## Versions: ## by x p_split (= [3 x 2 x 2] = 12 versions): plot_area(by = \"cddc\", p_split = \"v\")  # v01 (see v07)  plot_area(by = \"cdac\", p_split = \"v\")  # v02 (see v11)  # plot_area(by = \"cddc\", p_split = \"h\")  # v03 (see v05) # plot_area(by = \"cdac\", p_split = \"h\")  # v04 (see v09)  # plot_area(by = \"dccd\", p_split = \"v\")  # v05 (is v03 rotated) plot_area(by = \"dcac\", p_split = \"v\")  # v06 (see v12)  # plot_area(by = \"dccd\", p_split = \"h\")  # v07 (is v01 rotated) # plot_area(by = \"dcac\", p_split = \"h\")  # v08 (see v10)  # plot_area(by = \"accd\", p_split = \"v\")  # v09 (is v04 rotated) # plot_area(by = \"acdc\", p_split = \"v\")  # v10 (is v08 rotated) # plot_area(by = \"accd\", p_split = \"h\")  # v11 (is v02 rotated) # plot_area(by = \"acdc\", p_split = \"h\")  # v12 (is v06 rotated)  ## Options: # area: plot_area(area = \"sq\")  # main area as square (by scaling x-values)  plot_area(area = \"no\")  # rectangular main area (using full plotting region)   # scale (matters for small N): plot_area(N = 5, prev = .5, sens = .8, spec = .6,           by = \"cddc\", p_split = \"v\", scale = \"p\", p_lbl = \"def\")  # scaled by prob (default)  plot_area(N = 5, prev = .5, sens = .8, spec = .6,           by = \"cddc\", p_split = \"v\", scale = \"f\", p_lbl = \"def\")  # scaled by freq (for small N)  plot_area(N = 4, prev = .4, sens = .8, spec = .6,           by = \"cdac\", p_split = \"h\", scale = \"p\", p_lbl = \"def\")  # scaled by prob (default)  plot_area(N = 4, prev = .4, sens = .8, spec = .6,           by = \"cdac\", p_split = \"h\", scale = \"f\", p_lbl = \"def\")  # scaled by freq (for small N)   # gaps (sensible range: 0--.10): plot_area(gaps = NA)             # default gaps (based on p_split)  plot_area(gaps = c(0, 0))        # no gaps  # plot_area(gaps = c(.05, .01))  # v_gap > h_gap  # freq labels: plot_area(f_lbl = \"def\", f_lbl_sep = \" = \")  # default  plot_area(f_lbl = NA)       # NA/NULL: no freq labels (in main area & top/left boxes)  plot_area(f_lbl = \"abb\")    # abbreviated name (i.e., variable name)  # plot_area(f_lbl = \"nam\")  # only freq name # plot_area(f_lbl = \"num\")  # only freq number plot_area(f_lbl = \"namnum\", f_lbl_sep = \":\\n\", cex_lbl = .75)  # explicit & smaller   # prob labels: plot_area(p_lbl = NA)      # default: no prob labels, no links  # plot_area(p_lbl = \"no\")  # show links, but no labels plot_area(p_lbl = \"namnum\", cex_lbl = .70)  # explicit & smaller labels   # prob arrows: plot_area(arr_c = +3, p_lbl = \"def\", f_lbl = NA)  # V-shape arrows  # plot_area(arr_c = +6, p_lbl = \"def\", f_lbl = NA)  # T-shape arrows # plot_area(arr_c = +6, p_lbl = \"def\", f_lbl = NA, #           brd_dis = -.02, col_p = c(\"black\")) # adjust arrow type/position  # f_lwd: plot_area(f_lwd =  3)    # thicker lines  plot_area(f_lwd = .5)    # thinner lines  # plot_area(f_lwd =  0)  # no lines (if f_lwd = 0/NULL/NA: lty = 0)  # sum_w: # plot_area(sum_w = .10)  # default (showing top and left freq panels & labels) plot_area(sum_w =  0)   # remove top and left freq panels  plot_area(sum_w =  1,         # top and left freq panels scaled to size of main areas           col_pal = pal_org)  # custom colors   ## Plain and suggested plot versions: plot_area(sum_w = 0, f_lbl = \"abb\", p_lbl = NA)  # no compound indicators (on top/left)  plot_area(gap = c(0, 0), sum_w = 0, f_lbl = \"num\", p_lbl = \"num\",  # no gaps, numeric labels           f_lwd = .5, col_pal = pal_bw, main = \"Black-and-white\")  # b+w print version  # plot_area(f_lbl = \"nam\", p_lbl = NA, col_pal = pal_mod)  # plot with freq labels plot_area(f_lbl = \"num\", p_lbl = NA, col_pal = pal_rgb)  # no borders around boxes"},{"path":"https://hneth.github.io/riskyr/reference/plot_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot bar charts of population frequencies. — plot_bar","title":"Plot bar charts of population frequencies. — plot_bar","text":"plot_bar draws bar charts represent proportions frequencies current population popu relatives sizes rectangular areas.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot bar charts of population frequencies. — plot_bar","text":"","code":"plot_bar(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   N = num$N,   by = \"all\",   dir = 1,   scale = \"f\",   round = TRUE,   sample = FALSE,   f_lbl = \"num\",   f_lwd = 1,   lty = 0,   lbl_txt = txt,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   col_pal = pal,   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot bar charts of population frequencies. — plot_bar","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. N number individuals population. (value represented plot, used new frequency information freq new population table popu computed scratch current probabilities.) character code specifying perspective (dimension population split 2 subsets) following options: = \"cd\": condition; = \"dc\": decision; = \"ac\": accuracy; = \"\" combines perspectives (5 bars, default). dir Number directions bars plotted. Options: dir = 1: uni-directional bars (, default); dir = 2: bi-directional bars (vs. ). scale Scale heights bars either current frequencies (scale = \"f\") exact probabilities (scale = \"p\"). Default: scale = \"f\". large population sizes N round = FALSE, settings yield bar heights. round Boolean option specifying whether computed frequencies rounded integers. Default: round = TRUE. sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. f_lbl Type frequency labels, character code following options: f_lbl = \"nam\": names; f_lbl = \"num\": numeric values (default); f_lbl = \"abb\": abbreviated names; f_lbl = NA/NULL/\"\": labels; f_lbl = \"\": abbreviated names numeric values (abb = num). f_lwd Line width frequency box (border). Values NA/NULL/0 set lwd invisible tiny_lwd <- .001 lty <- 0 (\"blank\"). Default: f_lwd = 1. lty Line type frequency box (border). Values NA/NULL/0 set lty lty <- 0. Default: lty = 0 (.e., line). lbl_txt Current text information (labels, titles, etc.). Default: lbl_txt = txt (see init_txt). main Text label main plot title. Default: main = txt$scen_lbl. sub Text label plot subtitle (2nd line). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. col_pal Current color palette. Default: col_pal = pal (see init_pal). mar_notes Boolean option showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters (e.g., cex, font, lty, etc.).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_bar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot bar charts of population frequencies. — plot_bar","text":"sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart) provided, new frequency information freq new population table popu computed scratch.  Otherwise, existing population popu shown. default, plot_bar uses current frequencies (.e., rounded rounded, depending value round) bar heights, rather using exact probabilities scale bar heights (.e., default scaling scale = \"f\"). Using option scale = \"p\" scales bar heights probabilities (e.g., showing bars non-natural frequencies even frequencies rounded). round = FALSE, bar heights scale = \"f\" scale = \"p\" identical. distinction scale = \"f\" scale = \"p\" matters mostly small populations sizes N (e.g., N < 100). rounded small frequency values (e.g., freq < 10) switching scale = \"f\" scale = \"p\" yields different plots. plot_bar contrasts compound frequencies along 1 dimension (height). See plot_mosaic 2-dimensional visualizations (areas) various box) options plot_tree plot_fnet related functions.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot bar charts of population frequencies. — plot_bar","text":"","code":"# Basics: # (1) Using global prob and freq values: plot_bar()   # (2) Providing values: plot_bar(prev = .33, sens = .75, spec = .66, main = \"Test 1\")  plot_bar(N = 1000, prev = .33, sens = .75, spec = .60, main = \"Test 2\")  # by \"all\" (default)   # (3) Rounding and sampling: plot_bar(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, area = \"hr\", round = FALSE) #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter  plot_bar(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, area = \"hr\", sample = TRUE, scale = \"freq\") #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter #> Warning: \"area\" is not a graphical parameter   # Perspectives (by): # plot_bar(N = 1000, prev = .33, sens = .75, spec = .60, by = \"cd\", #          main = \"Test 3a\")  # by condition plot_bar(N = 1000, prev = .33, sens = .75, spec = .60, by = \"cd\", dir = 2,          main = \"Test 3b\", f_lbl = \"num\")  # bi-directional   # plot_bar(N = 1000, prev = .33, sens = .75, spec = .60, by = \"dc\", #          main = \"Test 4a\")  # by decision plot_bar(N = 1000, prev = .33, sens = .75, spec = .60, by = \"dc\", dir = 2,          main = \"Test 4b\", f_lbl = \"num\")  # bi-directional   # plot_bar(N = 1000, prev = .33, sens = .75, spec = .60, by = \"ac\", #          main = \"Test 5a\")  # by accuracy plot_bar(N = 1000, prev = .33, sens = .75, spec = .60, by = \"ac\", dir = 2,          main = \"Test 5b\", f_lbl = \"num\")  # bi-directional   # Customize colors and text: plot_bar(dir = 1, f_lbl = \"num\", col_pal = pal_org)  # plot_bar(dir = 2, f_lbl = \"nam\", col_pal = pal_bw)  # Frequency labels (f_lbl): # plot_bar(f_lbl = \"def\")  # default labels: name = num plot_bar(f_lbl = \"nam\")  # name only  plot_bar(f_lbl = \"num\")  # numeric value only  # plot_bar(f_lbl = \"abb\")  # abbreviated name # plot_bar(f_lbl = NA)     # no labels (NA/NULL/\"no\")  # Scaling and rounding effects: plot_bar(N = 3, prev = .1, sens = .7, spec = .6, dir = 2,          scale = \"f\", round = TRUE,          main = \"Rounding (1)\") # => Scale by freq and round freq.  plot_bar(N = 3, prev = .1, sens = .7, spec = .6, dir = 2,          scale = \"p\", round = TRUE,          main = \"Rounding (2)\") # => Scale by prob and round freq.  plot_bar(N = 3, prev = .1, sens = .7, spec = .6, dir = 2,          scale = \"f\", round = FALSE,          main = \"Rounding (3)\") # => Scale by freq and do NOT round freq.  plot_bar(N = 3, prev = .1, sens = .7, spec = .6, dir = 2,          scale = \"p\", round = FALSE,          main = \"Rounding (4)\") # => Scale by prob and do NOT round freq."},{"path":"https://hneth.github.io/riskyr/reference/plot_crisk.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a cumulative risk curve. — plot_crisk","title":"Plot a cumulative risk curve. — plot_crisk","text":"plot_crisk creates visualizations cumulative risks.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_crisk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a cumulative risk curve. — plot_crisk","text":"","code":"plot_crisk(   x,   y = NULL,   x_from = NA,   x_to = NA,   fit_curve = FALSE,   show_pas = FALSE,   show_rem = FALSE,   show_pop = FALSE,   show_aux = FALSE,   show_num = FALSE,   show_inc = FALSE,   show_grid = FALSE,   col_pal = pal_crisk,   arr_c = -3,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   x_lbl = \"Age (in years)\",   y_lbl = \"Population risk\",   y2_lbl = \"\",   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_crisk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a cumulative risk curve. — plot_crisk","text":"x Data values x-dimension risk expressed (required). x y provided, xy.coords grDevices used determine x- y-values. y Values cumulative risks y-dimension (optional, x appropriate structure), monotonically increasing percentage values (ranging 0 100). Default: y = NULL. x_from Start value risk increment. Default: x_from = NA. x_to End value risk increment. Default: x_to = NA. fit_curve Boolean: Fit curve x-y-data? Default: fit_curve = FALSE. show_pas Boolean: Show past/passed risk? Default: show_pas = FALSE. show_rem Boolean: Show remaining risk? Default: show_rem = FALSE. show_pop Boolean: Show population partitions? Default: show_pop = FALSE. show_aux Boolean: Show auxiliary elements (.e., explanatory lines, points, labels)? Default: show_aux = FALSE. show_num Boolean: Show numeric values, provided show_aux = TRUE. Default: show_num = FALSE. show_inc Boolean: Show risk increments? Default: show_inc = FALSE. show_grid Boolean: Show grid lines? Default: show_grid = FALSE. col_pal Color palette (named vector). Default: col_pal = pal_crisk. arr_c Arrow code symbols ends population links (numeric value -3 <= arr_c <= +6), following options: -1 -3: points one//end/s; 0: symbols; +1 +3: V-arrow one//end/s; +4 +6: T-arrow one//end/s. Default: arr_c = -3 (points ends). main Text label main plot title. Default: main = txt$scen_lbl. sub Text label plot subtitle (2nd line). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. x_lbl Text label x-axis (bottom). Default: x_lbl = \"Age (years)\". y_lbl Text label y-axis (left). Default: y_lbl = \"Population risk\". y2_lbl Text label 2nd y-axis (right). Default: y2_lbl = \"\" (formerly \"Remaining risk\"). mar_notes Boolean option showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_crisk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a cumulative risk curve. — plot_crisk","text":"Nothing (NULL).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_crisk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a cumulative risk curve. — plot_crisk","text":"plot_crisk assumes data inputs x y correspond y (monotonically increasing) probability density function (cumulative risk amounts represented y function x). Inputs x y must typically length. x y provided, xy.coords grDevices used determine x- y-values. risk events quantified cumulative risk values y assumed uni-directional, non-reversible, expressed percentages (ranging 0 100). Thus, element population can switch status ('unaffected' 'affected' risk factor). cumulative risk increment computed interval ranging x_from x_to. risk values x_from x_to provided (.e., x y), curve fitted predict y x (fit_curve = TRUE). Note naive interpretations allow overestimation (e.g., reading population values) underestimation (e.g., reading future risk increases without re-scaling remaining population). instructional purposes, plot_crisk provides options showing/hiding various elements required computing comprehending cumulative risk increments. Color information based vector named colors col_pal = pal_crisk.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_crisk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a cumulative risk curve. — plot_crisk","text":"","code":"# Data: x <- seq(0, 100, by = 10) y <- c(0, 0, 0, 8, 24, 50, 70, 80, 83, 85, 85)  # Basic versions: plot_crisk(x, y)  # using data provided  plot_crisk(x, y, x_from = 40)  # use and mark 1 provided point  plot_crisk(x, y, x_from = 44)  # use and mark 1 predicted point #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.  plot_crisk(x, y, x_from = 40, x_to = 60)  # use 2 provided points  plot_crisk(x, y, x_from = 44, x_to = 64)  # use 2 predicted points #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.  plot_crisk(x, y, fit_curve = TRUE)  # fitting curve to provided data   # Training versions: plot_crisk(x, y, 44, 64, show_pas = TRUE)  # past/passed risk only #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.  plot_crisk(x, y, 44, 64, show_rem = TRUE)  # remaining risk only #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.  plot_crisk(x, y, 44, 64, show_pas = TRUE, show_rem = TRUE) # both risks #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.  plot_crisk(x, y, 44, 64, show_aux = TRUE)  # auxiliary lines + axis #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.  plot_crisk(x, y, 44, 64, show_aux = TRUE, show_pop = TRUE)  # + population parts #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.  plot_crisk(x, y, 44, 64, show_aux = TRUE, show_num = TRUE)  # + numeric values #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.  plot_crisk(x, y, 44, 85, show_aux = TRUE, show_pop = TRUE, show_num = TRUE) # + aux/pop/num #> plot_crisk: x_from is not in x: Using fit_curve = TRUE.   # Note: Showing ALL is likely to overplot/overwhelm: plot_crisk(x, y, x_from = 47, x_to = 67, fit_curve = TRUE,            main = \"The main title\", sub = \"Some subtitle\",            show_pas = TRUE, show_rem = TRUE, show_aux = TRUE, show_pop = TRUE,            show_num = TRUE, show_inc = TRUE, show_grid = TRUE, mar_notes = TRUE)   # Small x- and y-values and linear increases: plot_crisk(x = 2:10, y = seq(12, 28, by = 2), x_from = 4.5, x_to = 8.5,            show_pas = TRUE, show_rem = TRUE, show_aux = TRUE, show_pop = TRUE,            show_num = TRUE, show_inc = TRUE) #> plot_crisk: x_from is not in x: Using fit_curve = TRUE."},{"path":"https://hneth.github.io/riskyr/reference/plot_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot curves of selected values (e.g., PPV or NPV) as a function of prevalence. — plot_curve","title":"Plot curves of selected values (e.g., PPV or NPV) as a function of prevalence. — plot_curve","text":"plot_curve draws curves selected values (including PPV, NPV) function prevalence (prev) given values sensitivity sens (miss rate mirt) specificity spec (false alarm rate fart).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot curves of selected values (e.g., PPV or NPV) as a function of prevalence. — plot_curve","text":"","code":"plot_curve(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   what = c(\"prev\", \"PPV\", \"NPV\"),   p_lbl = \"def\",   p_lwd = 2,   what_col = pal,   uc = 0,   show_points = TRUE,   log_scale = FALSE,   prev_range = c(0, 1),   lbl_txt = txt,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   cex_lbl = 0.85,   col_pal = pal,   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot curves of selected values (e.g., PPV or NPV) as a function of prevalence. — plot_curve","text":"prev condition's prevalence prev (.e., probability condition TRUE). prev = NA, curves plotted without points (.e., show_points = FALSE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. Vector character codes specify selection curves plotted. Currently available options c(\"prev\", \"PPV\", \"NPV\", \"ppod\", \"acc\") (shortcut: = \"\"). Default: = c(\"prev\", \"PPV\", \"NPV\"). p_lbl Type label shown probability values, following options: \"abb\": show abbreviated probability names; \"def\": show abbreviated probability names values (default); \"nam\": show probability names (specified code); \"num\": show numeric probability values; \"namnum\": show names numeric probability values; \"\": hide labels (p_lbl = NA NULL). p_lwd Line widths probability curves plotted. Default: p_lwd = 2. what_col Vector colors corresponding elements specified . Default: what_col = pal. uc Uncertainty range, given percentage current prev, sens, spec values (added directions). Default: uc = .00 (.e., uncertainty). Plausible ranges 0 < uc < .25. show_points Boolean value showing point intersection current prevalence prev selected curves. Default: show_points = TRUE. log_scale Boolean value switching linear logarithmic x-axis. Default: log_scale = FALSE. prev_range Range (minimum maximum) prev values x-axis (.e., values c(0, 1) range). Default: prev_range = c(0, 1). lbl_txt Labels text elements. Default: lbl_txt = txt. main Text label main plot title. Default: main = txt$scen_lbl. sub Text label plot subtitle (2nd line). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. cex_lbl Scaling factor size text labels (e.g., axes, legend, margin text). Default: cex_lbl = .85. col_pal Color palette (what_col unspecified). Default: col_pal = pal. mar_notes Boolean value showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_curve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot curves of selected values (e.g., PPV or NPV) as a function of prevalence. — plot_curve","text":"prevalence value provided (.e., prev = NA), desired probability curves plotted without showing specific points (.e., show_points = FALSE). Note population size N needed computing probability information prob. (arbitrary value can used computing frequency information freq current probabilities prob.) plot_curve generalization plot_PV (see legacy code) allows plotting additional dependent values.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot curves of selected values (e.g., PPV or NPV) as a function of prevalence. — plot_curve","text":"","code":"# Basics: plot_curve()  # default curve plot, same as:  # plot_curve(what = c(\"prev\", \"PPV\", \"NPV\"), uc = 0, prev_range = c(0, 1))  # Showing no/multiple prev values/points and uncertainty ranges: plot_curve(prev = NA)  # default curves without prev value (and point) shown #> No prevalence value provided: Plotting curves without points.  plot_curve(show_points = FALSE, uc = .10)  # curves w/o points, 10% uncertainty range  plot_curve(prev = c(.10, .33, .75))  # 3 prev values, with numeric point labels #> Multiple prevalence values provided: Using numeric values to label points.  plot_curve(prev = c(.10, .33, .75), p_lbl = \"no\", uc = .10) # 3 prev, no labels, 10% uc #> Multiple prevalence values provided: Using numeric values to label points.   # Provide local parameters and select curves: plot_curve(prev = .2, sens = .8, spec = .6, what = c(\"PPV\", \"NPV\", \"acc\"), uc = .2)   # Selecting curves: what = (\"prev\", \"PPV\", \"NPV\", \"ppod\", \"acc\") = \"all\" plot_curve(prev = .3, sens = .9, spec = .8, what = \"all\")  # all curves  # plot_curve(what = c(\"PPV\", \"NPV\"))                  # PPV and NPV plot_curve(what = c(\"prev\", \"PPV\", \"NPV\", \"acc\"))     # prev, PPV, NPV, and acc  # plot_curve(what = c(\"prev\", \"PPV\", \"NPV\", \"ppod\"))  # prev, PPV, NPV, and ppod  # Visualizing uncertainty (uc as percentage range): plot_curve(prev = .2, sens = .9, spec = .8, what = \"all\",            uc = .10)  # all with a 10% uncertainty range  # plot_curve(prev = .3, sens = .9, spec = .8, what = c(\"prev\", \"PPV\", \"NPV\"), #            uc = .05)  # prev, PPV and NPV with a 5% uncertainty range  # X-axis on linear vs. log scale: plot_curve(prev = .01, sens = .9, spec = .8)                    # linear scale  plot_curve(prev = .01, sens = .9, spec = .8, log_scale = TRUE)  # log scale  # Several small prev values: plot_curve(prev = c(.00001, .0001, .001, .01, .05),            sens = .9, spec = .8, log_scale = TRUE) #> Multiple prevalence values provided: Using numeric values to label points.   # Zooming in by setting prev_range (of prevalence values): plot_curve(prev = c(.25, .33, .40), prev_range = c(.20, .50),            what = \"all\", uc = .05) #> Multiple prevalence values provided: Using numeric values to label points.   # Probability labels: plot_curve(p_lbl = \"abb\", what = \"all\")     # abbreviated names  plot_curve(p_lbl = \"nam\", what = \"all\")     # names only  plot_curve(p_lbl = \"num\", what = \"all\")     # numeric values only  plot_curve(p_lbl = \"namnum\", what = \"all\")  # names and values   # Text and color settings: plot_curve(main = \"Tiny text labels\", p_lbl = \"namnum\", cex_lbl = .60)  plot_curve(main = \"Specific colors\", what = \"all\",            uc = .1, what_col = c(\"grey\", \"red3\", \"green3\", \"blue3\", \"gold\"))  plot_curve(main = \"Black-and-white print version\",            what = \"all\", col_pal = pal_bwp)"},{"path":"https://hneth.github.io/riskyr/reference/plot_fnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot frequency net diagram of frequencies and probabilities. — plot_fnet","title":"Plot frequency net diagram of frequencies and probabilities. — plot_fnet","text":"plot_fnet plots frequency net sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart) existing frequency information freq population size N individuals.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_fnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot frequency net diagram of frequencies and probabilities. — plot_fnet","text":"","code":"plot_fnet(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   N = num$N,   by = \"cddc\",   area = \"no\",   scale = \"p\",   round = TRUE,   sample = FALSE,   f_lbl = \"num\",   f_lbl_sep = NA,   f_lwd = 0,   p_lwd = 1,   p_scale = FALSE,   p_lbl = \"mix\",   arr_c = NA,   joint_p = TRUE,   lbl_txt = txt,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   cex_lbl = 0.9,   cex_p_lbl = NA,   col_pal = pal,   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_fnet.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Plot frequency net diagram of frequencies and probabilities. — plot_fnet","text":"Binder, K., Krauss, S., Wiesner, P. (2020). new visualization probabilistic situations containing two binary events: frequency net. Frontiers Psychology, 11, 750. doi: 10.3389/fpsyg.2020.00750","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_fnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot frequency net diagram of frequencies and probabilities. — plot_fnet","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. N number individuals population. suitable value N computed, provided. Note population size N needed computing current probability information prob, needed computing frequency information freq current probabilities prob. character code specifying 1 2 perspective(s) split(s) population 2 subsets. Specifying 1 perspective plots frequency tree (single tree) 3 options: \"cd\": condition ; \"dc\": decision ; \"ac\": accuracy . Specifying 2 perspectives plots frequency prism (double tree) 6 options: \"cddc\": condition (cd) decision (dc) (default); \"cdac\": condition (cd) accuracy (ac); \"dccd\": decision (dc) condition (cd); \"dcac\": decision (dc) accuracy (ac); \"accd\": accuracy (ac) condition (cd); \"acdc\": accuracy (ac) decision (dc). area character code specifying shapes frequency boxes, 2 options: \"\": rectangular frequency boxes, scaled (default); \"sq\": frequency boxes squares (scaled relative N). scale Scale probabilities corresponding area dimensions either exact probability (rounded non-rounded) frequency, 2 options: \"p\": scale main area dimensions exact probability (default); \"f\": re-compute probabilities (rounded non-rounded) frequencies   scale main area dimensions frequency. Note: scale setting matters display probability values  area plots small population sizes N round = TRUE. round Boolean option specifying whether computed frequencies rounded integers. Default: round = TRUE. sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. f_lbl Type label showing frequency values 4 main areas, 6 options: \"def\": abbreviated names frequency values; \"abb\": abbreviated frequency names (specified code); \"nam\": names (specified lbl_txt = txt); \"num\": numeric frequency values (default); \"namnum\": names (specified lbl_txt = txt) numeric values; \"\": frequency labels (f_lbl = NA NULL). f_lbl_sep Label separator main frequencies (used f_lbl = \"def\" \"namnum\"). Use f_lbl_sep = \":\\n\" add line break name numeric value. Default: f_lbl_sep = NA (set \" = \" \":\\n\" based f_lbl). f_lwd Line width areas. Default: f_lwd = 0. p_lwd Line width probability links. Default: p_lwd = 1, consider increasing setting p_scale = TRUE. p_scale Boolean option scaling current widths probability links (set p_lwd) current probability values. Default: p_scale = FALSE. p_lbl Type label showing probability links values, many options: \"abb\": show links abbreviated probability names; \"def\": show links abbreviated probability names values; \"min\": show links minimum (prominent) probability names; \"mix\": show links prominent probability names values (default); \"nam\": show links probability names (specified code); \"num\": show links numeric probability values; \"namnum\": show links names numeric probability values; \"\": show links labels (p_lbl = NA NULL). arr_c Arrow code symbols ends probability links (numeric value -3 <= arr_c <= +6), following options: -1 -3: points one//end/s; 0: symbols; +1 +3: V-arrow one//end/s; +4 +6: T-arrow one//end/s. Default: arr_c = NA, adjusted area. joint_p Boolean options showing links joint probabilities (.e., diagonals N center joint frequencies 4 corners). Default: joint_p = TRUE. lbl_txt Default label set text elements. Default: lbl_txt = txt. main Text label main plot title. Default: main = txt$scen_lbl. sub Text label plot subtitle (2nd line). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. cex_lbl Scaling factor text labels (frequencies headers). Default: cex_lbl = .90. cex_p_lbl Scaling factor text labels (probabilities). Default: cex_p_lbl = cex_lbl - .05. col_pal Color palette. Default: col_pal = pal. mar_notes Boolean option showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_fnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot frequency net diagram of frequencies and probabilities. — plot_fnet","text":"Nothing (NULL).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_fnet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot frequency net diagram of frequencies and probabilities. — plot_fnet","text":"plot_fnet shows frequencies nodes probabilities links (like trees double trees generated plot_prism), combines elements 2x2 tables (see plot_tab) tree diagrams. Similar 2D-visualizations (e.g., , plot_area, plot_prism plot_tab), frequency net selects combines two perspectives (e.g., = \"cddc\"). However, frequency net similar 2x2 table insofar perspectives (shown arranging marginal frequencies vertical vs. horizontal fashion) suggest order dependency (contrast trees mosaic plots). Additionally, frequency net allows showing 3 kinds (marginal, conditional, joint) probabilities. See article Binder K, Krauss S Wiesner P (2020). new visualization probabilistic situations containing two binary events: frequency net. Frontiers Psychology, 11, 750. doi: 10.3389/fpsyg.2020.00750 analysis details.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_fnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot frequency net diagram of frequencies and probabilities. — plot_fnet","text":"","code":"# (1) Basics: ---- # A. Using global prob and freq values: plot_fnet()  # default frequency net, same as:  # plot_fnet(by = \"cddc\", area = \"no\", scale = \"p\", #            f_lbl = \"num\", f_lwd = 0, cex_lbl = .90, #            p_lbl = \"mix\", arr_c = -2, cex_p_lbl = NA)  # B. Providing values: plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9)  # Binder et al. (2020, Fig. 3)   # C. Rounding and sampling: plot_fnet(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, area = \"sq\", round = FALSE)  plot_fnet(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, area = \"sq\", sample = TRUE, scale = \"freq\")   # Variants: plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9, by = \"cdac\")  plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9, by = \"dccd\")  # plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9, by = \"dcac\") # plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9, by = \"accd\") # plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9, by = \"acdc\")  # Trees (only 1 dimension): plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9, by = \"cd\")  # plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9, by = \"dc\") # plot_fnet(N = 10000, prev = .02, sens = .8, spec = .9, by = \"ac\")  # Area and margin notes: plot_fnet(N = 10, prev = 1/4, sens = 3/5, spec = 2/5, area = \"sq\", mar_notes = TRUE)    # (2) Use case (highlight horizontal vs. vertical perspectives: ---- # Define scenario: mammo <- riskyr(N = 10000, prev = .01, sens = .80, fart = .096,                 scen_lbl = \"Mammography screening\", N_lbl = \"Women\",                 cond_lbl = \"Breast cancer\", dec_lbl = \"Test result\",                 cond_true_lbl = \"Cancer (C+)\", cond_false_lbl = \"no Cancer (C-)\",                 dec_pos_lbl = \"positive (T+)\", dec_neg_lbl = \"negative (T-)\",                 hi_lbl = \"C+ and T+\", mi_lbl = \"C+ and T-\",                 fa_lbl = \"C- and T+\", cr_lbl = \"C- and T-\") # Colors: my_non <- \"grey95\" my_red <- \"orange1\" my_blu <- \"skyblue1\"  # A. Emphasize condition perspective (rows): my_col_1 <- init_pal(N_col = my_non,                      cond_true_col = my_blu, cond_false_col = my_red,                      dec_pos_col = my_non, dec_neg_col = my_non,                      hi_col = my_blu, mi_col = my_blu,                      fa_col = my_red, cr_col = my_red) plot(mammo, type = \"fnet\", col_pal = my_col_1,      f_lbl = \"namnum\", f_lwd = 2, p_lbl = \"no\", arr_c = 0)   # B. Emphasize decision perspective (columns): my_col_2 <- init_pal(N_col = my_non,                      cond_true_col = my_non, cond_false_col = my_non,                      dec_pos_col = my_red, dec_neg_col = my_blu,                      hi_col = my_red, mi_col = my_blu,                      fa_col = my_red, cr_col = my_blu) plot(mammo, type = \"fnet\", col_pal = my_col_2,      f_lbl = \"namnum\", f_lwd = 2, p_lbl = \"no\", arr_c = 0)    # (3) Custom color and text settings: ---- plot_fnet(col_pal = pal_bw, f_lwd = .5, p_lwd = .5, lty = 2, # custom fbox color, prob links,           font = 3, cex_p_lbl = .75)                         # and text labels   plot_fnet(N = 7, prev = 1/2, sens = 3/5, spec = 4/5, round = FALSE,           by = \"cdac\", lbl_txt = txt_org, f_lbl = \"namnum\", f_lbl_sep = \":\\n\",           f_lwd = 1, col_pal = pal_rgb)  # custom colors   # plot_fnet(N = 5, prev = 1/2, sens = .8, spec = .5, scale = \"p\",   # Note scale! #           by = \"cddc\", area = \"hr\", col_pal = pal_bw, f_lwd = 1)  # custom colors  plot_fnet(N = 3, prev = .50, sens = .50, spec = .50, scale = \"p\",              # Note scale!           area = \"sq\", lbl_txt = txt_org, f_lbl = \"namnum\", f_lbl_sep = \":\\n\", # custom text           col_pal = pal_kn, f_lwd = .5)                                        # custom colors   # (4) Other options: ---- plot_fnet(N = 4, prev = .2, sens = .7, spec = .8,           area = \"sq\", scale = \"p\")  # areas scaled by prob (matters for small N)  # plot_fnet(N = 4, prev = .2, sens = .7, spec = .8, #           area = \"sq\", scale = \"f\")  # areas scaled by (rounded or non-rounded) freq  ## Frequency boxes (f_lbl): # plot_fnet(f_lbl = NA)       # no freq labels # plot_fnet(f_lbl = \"abb\")    # abbreviated freq names (variable names) plot_fnet(f_lbl = \"nam\")      # only freq names  plot_fnet(f_lbl = \"num\")      # only numeric freq values (default)  # plot_fnet(f_lbl = \"namnum\") # names and numeric freq values plot_fnet(f_lbl = \"namnum\", cex_lbl = .75)  # smaller freq labels  # plot_fnet(f_lbl = \"def\")    # informative default: short name and numeric value (abb = num)  # f_lwd: # plot_fnet(f_lwd =  1)  # basic lines # plot_fnet(f_lwd =  0)  # no lines (default), set to tiny_lwd = .001, lty = 0 (same if NA/NULL) # plot_fnet(f_lwd = .5)  # thinner lines plot_fnet(f_lwd =  3)    # thicker lines   ## Probability links (p_lbl, p_lwd, p_scale): # plot_fnet(p_lbl = NA)       # no prob labels (NA/NULL/\"none\") plot_fnet(p_lbl = \"mix\")      # abbreviated names with numeric values (abb = num)  # plot_fnet(p_lbl = \"min\")    # minimal names (of key probabilities) # plot_fnet(p_lbl = \"nam\")    # only prob names plot_fnet(p_lbl = \"num\")      # only numeric prob values  # plot_fnet(p_lbl = \"namnum\") # names and numeric prob values  plot_fnet(p_lwd = 6, p_scale = TRUE)  plot_fnet(area = \"sq\", f_lbl = \"num\", p_lbl = NA, col_pal = pal_bw, p_lwd = 6, p_scale = TRUE)   # arr_c: # plot_fnet(arr_c =  0)  # acc_c = 0: no arrows # plot_fnet(arr_c = -3)  # arr_c = -1 to -3: points at both ends # plot_fnet(arr_c = -2)  # point at far end plot_fnet(arr_c = +2)    # crr_c = 1-3: V-shape arrows at far end   plot_fnet(by = \"cd\", joint_p = FALSE)      # tree without joint probability links  # plot_fnet(by = \"cddc\", joint_p = FALSE)  # fnet ...  ## Plain plot versions: plot_fnet(area = \"no\", f_lbl = \"def\", p_lbl = \"num\", col_pal = pal_mod, f_lwd = 1,           main = \"\", mar_notes = FALSE)  # remove titles and margin notes  plot_fnet(area = \"no\", f_lbl = \"nam\", p_lbl = \"min\", col_pal = pal_rgb)   plot_fnet(area = \"sq\", f_lbl = \"nam\", p_lbl = \"num\", col_pal = pal_rgb)  # plot_fnet(area = \"sq\", f_lbl = \"def\", f_lbl_sep = \":\\n\", p_lbl = NA, f_lwd = 1, col_pal = pal_kn)  ## Suggested combinations: # plot_fnet(f_lbl = \"nam\", p_lbl = \"mix\")  # basic plot plot_fnet(f_lbl = \"namnum\", p_lbl = \"num\", cex_lbl = .80, cex_p_lbl = .75)  # plot_fnet(area = \"no\", f_lbl = \"def\", p_lbl = \"abb\",           # def/abb labels #           f_lwd = .8, p_lwd = .8, lty = 2, col_pal = pal_bwp)  # black-&-white  # plot_fnet(area = \"sq\", f_lbl = \"nam\", p_lbl = \"abb\", lbl_txt = txt_TF, col_pal = pal_bw) plot_fnet(area = \"sq\", f_lbl = \"num\", p_lbl = \"num\", f_lwd = 1, col_pal = pal_rgb)  plot_fnet(area = \"sq\", f_lbl = \"nam\", p_lbl = \"num\", f_lwd = .5, col_pal = pal_rgb)"},{"path":"https://hneth.github.io/riskyr/reference/plot_icons.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an icon array of a population. — plot_icons","title":"Plot an icon array of a population. — plot_icons","text":"plot_icons plots population individual's condition classified correctly incorrectly icons sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart) existing frequency information freq population size N individuals.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_icons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an icon array of a population. — plot_icons","text":"","code":"plot_icons(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   N = freq$N,   sample = FALSE,   arr_type = \"array\",   by = \"all\",   ident_order = c(\"hi\", \"mi\", \"fa\", \"cr\"),   icon_types = 22,   icon_size = NULL,   icon_brd_lwd = 1.5,   block_d = NULL,   border_d = 0.1,   block_size_row = 10,   block_size_col = 10,   nblocks_row = NULL,   nblocks_col = NULL,   fill_array = \"left\",   fill_blocks = \"rowwise\",   lbl_txt = txt,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   cex_lbl = 0.9,   col_pal = pal,   transparency = 0.5,   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_icons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an icon array of a population. — plot_icons","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. N number individuals population. suitable value N computed, provided. N 100,000 greater reduced 10,000 array types frequencies allow . sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. arr_type icons can arranged different ways resulting different types displays: arr_type = \"array\": Icons plotted   classical icon array (default).   Icons can arranged blocks using block_d.   order filling array can customized using   fill_array fill_blocks. arr_type = \"shuffledarray\": Icons plotted   icon array, positions shuffled (randomized).   Icons can arranged blocks using block_d.   order filling array can customized using   fill_array fill_blocks. arr_type = \"mosaic\": Icons ordered like mosaic plot.   area size displays relative proportions frequencies. arr_type = \"fillequal\": Icons positioned equally sized blocks.   Thus, density reflects relative proportions frequencies. arr_type = \"fillleft\": Icons randomly filled left. arr_type = \"filltop\": Icons randomly filled top. arr_type = \"scatter\": Icons randomly scattered plot. character code specifying perspective split population subsets, 4 options:  \"\": condition (cd) decision (dc): hi, mi, fa, cr cases (default); \"cd\": condition (cd) : cond_true vs. cond_false cases; \"dc\": decision (dc) : dec_pos vs. dec_neg cases; \"ac\": accuracy (ac) : dec_cor vs. dec_err cases. ident_order order icon identities (.e., hi, mi, fa, cr) plotted. Default: ident_order = c(\"hi\", \"mi\", \"fa\", \"cr\") icon_types specifies appearance icons vector. Default: icon_types = 11 (.e., squares border). Accepts values 1 25 (see ?points). icon_size specifies size icons via cex Default: icon_size = NULL automatic calculation. icon_brd_lwd specifies border width icons (applicable). Default: icon_brd_lwd = 1.5. Set NA border. block_d distance blocks. Default: block_d = NULL automatic calculation; (apply \"filleft\", \"filltop\", \"scatter\") border_d distance icons border. Default: border_d = 0.1. Additional options controlling arrangement arrays (arr_type = \"array\" \"shuffledarray\"): block_size_row specifies many icons block row. Default: block_size_row = 10. block_size_col specifies many icons block column. Default: block_size_col = 10. nblocks_row Number blocks per row. Default: nblocks_row = NULL automatic calculation. nblocks_col Number blocks per column. Default: nblocks_col = NULL automatic calculation. fill_array specifies blocks filled array. Options: fill_array = \"left\" (default) vs. \"top\". fill_blocks specifies icons within blocks filled. Options: fill_blocks = \"rowwise\" (default) \"colwise\". Generic text color options: lbl_txt Default label set text elements. Default: lbl_txt = txt. main Text label main plot title. Default: main = txt$scen_lbl. sub Text label plot subtitle (2nd line). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. cex_lbl Scaling factor text labels. Default: cex_lbl = .90. col_pal Color palette. Default: col_pal = pal. transparency Specifies transparency overlapping icons (arr_type = \"array\" \"shuffledarray\"). mar_notes Boolean option showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_icons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an icon array of a population. — plot_icons","text":"Nothing (NULL).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_icons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot an icon array of a population. — plot_icons","text":"probabilities provided, new list natural frequencies freq computed comp_freq. contrast, probabilities provided, values currently contained freq used. default, comp_freq rounds frequencies nearest integers avoid decimal values freq.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_icons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an icon array of a population. — plot_icons","text":"","code":"# Basics: plot_icons(N = 1000)  # icon array with default settings (arr_type = \"array\")  plot_icons(arr_type = \"shuffledarray\", N = 1000)  # icon array with shuffled IDs   # Sampling: plot_icons(N = 1000, prev = 1/2, sens = 2/3, spec = 6/7, sample = TRUE)   # array types: plot_icons(arr_type = \"mosaic\",    N = 1000)  # areas as in mosaic plot  plot_icons(arr_type = \"fillequal\", N = 1000)  # areas of equal size (probability as density)  plot_icons(arr_type = \"fillleft\",  N = 1000)  # icons filled from left to right (in columns)  plot_icons(arr_type = \"filltop\",   N = 1000)  # icons filled from top to bottom (in rows)  plot_icons(arr_type = \"scatter\",   N = 1000)  # icons randomly scattered   # by: plot_icons(N = 1000, by = \"all\")  # hi, mi, fa, cr (TP, FN, FP, TN) cases  plot_icons(N = 1000, by = \"cd\", main = \"Cases by condition\")  # (hi + mi) vs. (fa + cr)  plot_icons(N = 1000, by = \"dc\", main = \"Cases by decision\")   # (hi + fa) vs. (mi + cr)  plot_icons(N = 1000, by = \"ac\", main = \"Cases by accuracy\")   # (hi + cr) vs. (fa + mi)   # Custom icon types and colors: plot_icons(N = 800, arr_type = \"array\", icon_types = c(21, 22, 23, 24),            block_d = 0.5, border_d = 0.5, col_pal = pal_vir)   plot_icons(N = 800, arr_type = \"shuffledarray\", icon_types = c(21, 23, 24, 22),            block_d = 0.5, border_d = 0.5)   plot_icons(N = 800, arr_type = \"fillequal\", icon_types = c(21, 22, 22, 21),            icon_brd_lwd = .5, cex = 1, cex_lbl = 1.1)   # Text and color options: plot_icons(N = 1000, prev = .5, sens = .5, spec = .5, arr_type = \"shuffledarray\",            main = \"My title\", sub = NA, lbl_txt = txt_TF, col_pal = pal_vir, mar_notes = TRUE)   plot_icons(N = 1000, prev = .5, sens = .5, spec = .5, arr_type = \"shuffledarray\",            main = \"Green vs. red\", col_pal = pal_rgb, transparency = .5)"},{"path":"https://hneth.github.io/riskyr/reference/plot_mosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a mosaic plot of population frequencies. — plot_mosaic","title":"Plot a mosaic plot of population frequencies. — plot_mosaic","text":"plot_mosaic drew mosaic plot represents proportions frequencies current population relatives sizes rectangular areas.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_mosaic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a mosaic plot of population frequencies. — plot_mosaic","text":"","code":"plot_mosaic(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   N = num$N,   by = \"cddc\",   show_accu = TRUE,   w_acc = 0.5,   title_lbl = txt$scen_lbl,   col_sdt = c(pal[\"hi\"], pal[\"mi\"], pal[\"fa\"], pal[\"cr\"]) )"},{"path":"https://hneth.github.io/riskyr/reference/plot_mosaic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a mosaic plot of population frequencies. — plot_mosaic","text":"prev condition's prevalence prev. sens decision's sensitivity sens. mirt decision's miss rate mirt. spec decision's specificity value spec. fart decision's false alarm rate fart. N number individuals population. character code specifying perspective (categories population split subsets) 3 options: \"cddc\" ... condition x decision; \"dccd\" ... decision x condition; \"cdac\" ... condition x accuracy. show_accu Option showing current exact accuracy metrics accu plot. w_acc Weighting parameter w used compute weighted accuracy. title_lbl Text label current plot title. col_sdt Colors cases 4 essential frequencies. Default: col_sdt = c(pal[\"hi\"], pal[\"mi\"], pal[\"fa\"], pal[\"cr\"]).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_mosaic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a mosaic plot of population frequencies. — plot_mosaic","text":"plot_mosaic deprecated – please use plot_area instead.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_mosaic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a mosaic plot of population frequencies. — plot_mosaic","text":"","code":"plot_mosaic()  # plot with default options #> Function 'plot_mosaic' is deprecated; using 'plot_area' instead. #> Argument 'title_lbl' is deprecated. Please use 'main' instead."},{"path":"https://hneth.github.io/riskyr/reference/plot_plane.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a plane of selected values (e.g., PPV or NPV) as a function of sensitivity and specificity. — plot_plane","title":"Plot a plane of selected values (e.g., PPV or NPV) as a function of sensitivity and specificity. — plot_plane","text":"plot_plane draws 3D-plane selected values (e.g., predictive values PPV NPV) function decision's sensitivity sens specificity value spec given prevalence (prev).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_plane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a plane of selected values (e.g., PPV or NPV) as a function of sensitivity and specificity. — plot_plane","text":"","code":"plot_plane(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   what = \"PPV\",   what_col = pal,   line_col = \"grey85\",   sens_range = c(0, 1),   spec_range = c(0, 1),   step_size = 0.05,   show_points = TRUE,   point_col = \"yellow\",   theta = -45,   phi = 0,   p_lbl = \"def\",   lbl_txt = txt,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   cex_lbl = 0.85,   col_pal = pal,   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_plane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a plane of selected values (e.g., PPV or NPV) as a function of sensitivity and specificity. — plot_plane","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. sens = NA, show_points = FALSE. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. spec = NA, show_points = FALSE. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. character code specifies one metric plotted plane. Currently available options c(\"PPV\", \"NPV\", \"ppod\", \"acc\"). Default: = \"PPV\". what_col Color surface facets corresponding metric specified . Default: what_col uses color corresponding current col_pal. line_col Color lines surface facets. Default: line_col = \"grey85\". sens_range Range (minimum maximum) sens values x-axis (.e., values c(0, 1) range). Default: sens_range = c(0, 1). spec_range Range (minimum maximum) spec values y-axis (.e., values c(0, 1) range). Default: spec_range = c(0, 1). step_size Sets granularity sens--spec grid. (range .01 <= step_size <= 1). Default: step_size = .05. show_points Boolean option showing current value selected metric current conditions (prev, sens, spec) point plane. Default: show_points = TRUE. point_col Fill color showing current value plane. Default: point_col = \"yellow\". theta Horizontal rotation angle (used persp). Default: theta = -45. phi Vertical rotation angle (used persp). Default: phi = 0. p_lbl Type label shown probability values, following options: \"abb\": show abbreviated probability names; \"def\": show abbreviated probability names values (default); \"nam\": show probability names (specified code); \"num\": show numeric probability values; \"namnum\": show names numeric probability values; \"\": hide labels (p_lbl = NA NULL). lbl_txt Labels text elements. Default: lbl_txt = txt. main Text label main plot title. Default: main = txt$scen_lbl. sub Text label plot subtitle (2nd line). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. cex_lbl Scaling factor size text labels (e.g., axes, legend, margin text). Default: cex_lbl = .85. col_pal Color palette (what_col unspecified). Default: col_pal = pal. mar_notes Boolean value showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_plane.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a plane of selected values (e.g., PPV or NPV) as a function of sensitivity and specificity. — plot_plane","text":"plot_plane generalization plot_PV3d (see legacy code) allows additional dependent values.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_plane.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a plane of selected values (e.g., PPV or NPV) as a function of sensitivity and specificity. — plot_plane","text":"","code":"# Basics: plot_plane()              # => default plot (what = \"PPV\")  # same as: # plot_plane(what = \"PPV\")  # => plane of PPV  plot_plane(what = \"NPV\")  # => plane of NPV  plot_plane(what = \"ppod\") # => plane of ppod  plot_plane(what = \"acc\")  # => plane of acc   # Plane with/out points: # plot_plane(prev = .5, sens = NA, spec = NA, what = \"ppv\")           # plane with 0 points plot_plane(prev = .5, sens = c(.2, .5, .8), spec = .6, what = \"npv\")  # plane with 3 points #> Multiple sens/spec values provided: Plotting multiple points on plane.   # Zooming into sens and spec ranges: # plot_plane(prev = .02, sens = c(.8, .9), spec = c(.8, .8, .9, .9))  # default ranges plot_plane(prev = .02, sens = c(.8, .9), spec = c(.8, .8, .9, .9),            sens_range = c(.7, 1), spec_range = c(.7, 1), step_size = .02)  # zooming in #> Multiple sens/spec values provided: Plotting multiple points on plane.   # Options: # plot_plane(main = \"No point and smaller labels\", show_points = FALSE, cex_lbl = .60)  plot_plane(main = \"Testing plot colors\", what_col = \"royalblue4\", line_col = \"sienna2\")  plot_plane(main = \"Testing b/w plot\", what = \"npv\", what_col = \"white\", line_col = \"black\")  plot_plane(main = \"Testing color pal_bwp\", col_pal = pal_bwp)   plot_plane(step_size = .333, what_col = \"firebrick\")    # => coarser granularity + color  plot_plane(step_size = .025, what_col = \"chartreuse4\")  # => finer granularity + color  plot_plane(what_col = \"steelblue4\", theta = -90, phi = 50)  # => rotated, from above"},{"path":"https://hneth.github.io/riskyr/reference/plot_prism.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot prism diagram of frequencies and probabilities. — plot_prism","title":"Plot prism diagram of frequencies and probabilities. — plot_prism","text":"plot_prism plots network diagram sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart) existing frequency information freq population size N individuals.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_prism.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot prism diagram of frequencies and probabilities. — plot_prism","text":"","code":"plot_prism(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   N = num$N,   by = \"cddc\",   area = \"no\",   scale = \"p\",   round = TRUE,   sample = FALSE,   f_lbl = \"num\",   f_lbl_sep = NA,   f_lwd = 0,   p_lwd = 1,   p_scale = FALSE,   p_lbl = \"mix\",   arr_c = NA,   lbl_txt = txt,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   cex_lbl = 0.9,   cex_p_lbl = NA,   col_pal = pal,   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_prism.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot prism diagram of frequencies and probabilities. — plot_prism","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. N number individuals population. suitable value N computed, provided. Note population size N needed computing current probability information prob, needed computing frequency information freq current probabilities prob. character code specifying 1 2 perspective(s) split(s) population 2 subsets. Specifying 1 perspective plots frequency tree (single tree) 3 options: \"cd\": condition ; \"dc\": decision ; \"ac\": accuracy . Specifying 2 perspectives plots frequency prism (double tree) 6 options: \"cddc\": condition (cd) decision (dc) (default); \"cdac\": condition (cd) accuracy (ac); \"dccd\": decision (dc) condition (cd); \"dcac\": decision (dc) accuracy (ac); \"accd\": accuracy (ac) condition (cd); \"acdc\": accuracy (ac) decision (dc). area character code specifying shapes frequency boxes, 3 options: \"\": rectangular frequency boxes, scaled (default); \"hr\": frequency boxes horizontal rectangles (scaled relative N). \"sq\": frequency boxes squares (scaled relative N). scale Scale probabilities corresponding node dimensions either exact probability (rounded non-rounded) frequency, 2 options: \"p\": scale node dimensions exact probability (default); \"f\": re-compute probabilities (rounded non-rounded) frequencies   scale node dimensions frequency. Note: scale setting matters display probability values  area plots small population sizes N round = TRUE. round Boolean option specifying whether computed frequencies rounded integers. Default: round = TRUE. sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. f_lbl Type label showing frequency values nodes, 6 options: \"def\": abbreviated names frequency values; \"abb\": abbreviated frequency names (specified code); \"nam\": names (specified lbl_txt = txt); \"num\": numeric frequency values (default); \"namnum\": names (specified lbl_txt = txt) numeric values; \"\": frequency labels (f_lbl = NA NULL). f_lbl_sep Separator frequency labels (used f_lbl = \"def\" \"namnum\"). Use f_lbl_sep = \":\\n\" add line break name numeric value. Default: f_lbl_sep = NA (set \" = \" \":\\n\" based f_lbl). f_lwd Line width areas. Default: f_lwd = 0. p_lwd Line width probability links. Default: p_lwd = 1, consider increasing setting p_scale = TRUE. p_scale Boolean option scaling current widths probability links (set p_lwd) current probability values. Default: p_scale = FALSE. p_lbl Type label showing 3 key probability links values, many options: \"abb\": show links abbreviated probability names; \"def\": show links abbreviated probability names values; \"min\": show links minimum (prominent) probability names; \"mix\": show links prominent probability names values (default); \"nam\": show links probability names (specified code); \"num\": show links numeric probability values; \"namnum\": show links names numeric probability values; \"\": show links labels (p_lbl = NA NULL). arr_c Arrow code symbols ends probability links (numeric value -3 <= arr_c <= +6), following options: -1 -3: points one//end/s; 0: symbols; +1 +3: V-arrow one//end/s; +4 +6: T-arrow one//end/s. Default: arr_c = NA, adjusted area. lbl_txt Default label set text elements. Default: lbl_txt = txt. main Text label main plot title. Default: main = txt$scen_lbl. sub Text label plot subtitle (2nd line). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. cex_lbl Scaling factor text labels (frequencies headers). Default: cex_lbl = .90. cex_p_lbl Scaling factor text labels (probabilities). Default: cex_p_lbl = cex_lbl - .05. col_pal Color palette. Default: col_pal = pal. mar_notes Boolean option showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_prism.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot prism diagram of frequencies and probabilities. — plot_prism","text":"Nothing (NULL).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_prism.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot prism diagram of frequencies and probabilities. — plot_prism","text":"plot_prism generalizes replaces plot_fnet removing dependency R package diagram providing many additional options.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_prism.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot prism diagram of frequencies and probabilities. — plot_prism","text":"","code":"## Basics: # (1) Using global prob and freq values: plot_prism()  # default prism plot,  # same as: # plot_prism(by = \"cddc\", area = \"no\", scale = \"p\", #            f_lbl = \"num\", f_lwd = 0, cex_lbl = .90, #            p_lbl = \"mix\", arr_c = -2, cex_p_lbl = NA)  # (2) Providing values: plot_prism(N = 10, prev = 1/3, sens = 3/5, spec = 4/5, area = \"hr\")  plot_prism(N = 10, prev = 1/4, sens = 3/5, spec = 2/5, area = \"sq\", mar_notes = TRUE)   # (3) Rounding and sampling: plot_prism(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, area = \"hr\", round = FALSE)  plot_prism(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, area = \"hr\", sample = TRUE, scale = \"freq\")   # (4) Custom colors and text: plot_prism(col_pal = pal_bw, f_lwd = .5, p_lwd = .5, lty = 2, # custom fbox color, prob links,            font = 3, cex_p_lbl = .75)                         # and text labels   my_txt <- init_txt(cond_lbl = \"The Truth\", cond_true_lbl = \"so true\", cond_false_lbl = \"so false\",                    hi_lbl = \"TP\", mi_lbl = \"FN\", fa_lbl = \"FP\", cr_lbl = \"TN\") my_col <- init_pal(N_col = rgb(0, 169, 224, max = 255),  # seeblau                    hi_col = \"gold\", mi_col = \"firebrick1\", fa_col = \"firebrick2\", cr_col = \"orange\") plot_prism(f_lbl = \"nam\", lbl_txt = my_txt,            col_pal = my_col, f_lwd = .5)   ## Local values and custom color/txt settings: plot_prism(N = 7, prev = 1/2, sens = 3/5, spec = 4/5, round = FALSE,            by = \"cdac\", lbl_txt = txt_org, f_lbl = \"namnum\", f_lbl_sep = \":\\n\",            f_lwd = 1, col_pal = pal_rgb)  # custom colors   plot_prism(N = 5, prev = 1/2, sens = .8, spec = .5, scale = \"p\",  # note scale!            by = \"cddc\", area = \"hr\", col_pal = pal_bw, f_lwd = 1) # custom colors   plot_prism(N = 3, prev = .50, sens = .50, spec = .50, scale = \"p\",              # note scale!            area = \"sq\", lbl_txt = txt_org, f_lbl = \"namnum\", f_lbl_sep = \":\\n\", # custom text            col_pal = pal_kn, f_lwd = .5)                                        # custom colors   ## Plot versions: # (A) tree/single tree (nchar(by) == 2): #     3 versions: plot_prism(by = \"cd\", f_lbl = \"def\", col_pal = pal_mod) # by condition (freq boxes: hi mi fa cr)  plot_prism(by = \"dc\", f_lbl = \"def\", col_pal = pal_mod) # by decision  (freq boxes: hi fa mi cr)  plot_prism(by = \"ac\", f_lbl = \"def\", col_pal = pal_mod) # by accuracy  (freq boxes: hi cr mi fa)   # (B) prism/double tree (nchar(by) == 4): #     6 (3 x 2) versions (+ 3 redundant ones): plot_prism(by = \"cddc\")    # v01 (default)  plot_prism(by = \"cdac\")    # v02  # plot_prism(by = \"cdcd\")  # (+) Message  plot_prism(by = \"dccd\")    # v03  plot_prism(by = \"dcac\")    # v04  # plot_prism(by = \"dcdc\")  # (+) Message  plot_prism(by = \"accd\")    # v05  plot_prism(by = \"acdc\")    # v06  # plot_prism(by = \"acac\")  # (+) Message  ## Other options:  # area: # plot_prism(area = \"no\")  # rectangular boxes (default): (same if area = NA/NULL) plot_prism(area = \"hr\")  # horizontal rectangles (widths on each level sum to N)  plot_prism(area = \"sq\")  # squares (areas on each level sum to N)   # scale (matters for scaled areas and small N): plot_prism(N = 5, prev = .3, sens = .8, spec = .6,            area = \"hr\", scale = \"p\")  # widths scaled by prob  plot_prism(N = 5, prev = .3, sens = .8, spec = .6,            area = \"hr\", scale = \"f\")  # widths scaled by (rounded or non-rounded) freq  plot_prism(N = 4, prev = .2, sens = .7, spec = .8,            area = \"sq\", scale = \"p\")  # areas scaled by prob  plot_prism(N = 4, prev = .2, sens = .7, spec = .8,            area = \"sq\", scale = \"f\")  # areas scaled by (rounded or non-rounded) freq   ## Frequency boxes: # f_lbl: plot_prism(f_lbl = \"abb\")      # abbreviated freq names (variable names)  plot_prism(f_lbl = \"nam\")      # only freq names  plot_prism(f_lbl = \"num\")      # only numeric freq values (default)  plot_prism(f_lbl = \"namnum\")   # names and numeric freq values  # plot_prism(f_lbl = \"namnum\", cex_lbl = .75)  # smaller freq labels # plot_prism(f_lbl = NA)       # no freq labels # plot_prism(f_lbl = \"def\")    # informative default: short name and numeric value (abb = num)  # f_lwd: # plot_prism(f_lwd =  0)  # no lines (default), set to tiny_lwd = .001, lty = 0 (same if NA/NULL) plot_prism(f_lwd =  1)  # basic lines  plot_prism(f_lwd =  3)  # thicker lines  # plot_prism(f_lwd = .5)  # thinner lines  ## Probability links: # Scale link widths (p_lwd & p_scale): plot_prism(p_lwd = 6, p_scale = TRUE)  plot_prism(area = \"sq\", f_lbl = \"num\", p_lbl = NA, col_pal = pal_bw, p_lwd = 6, p_scale = TRUE)   # p_lbl: plot_prism(p_lbl = \"mix\")     # abbreviated names with numeric values (abb = num)  plot_prism(p_lbl = \"min\")     # minimal names (of key probabilities)  # plot_prism(p_lbl = NA)      # no prob labels (NA/NULL/\"none\") plot_prism(p_lbl = \"nam\")     # only prob names  plot_prism(p_lbl = \"num\")     # only numeric prob values  plot_prism(p_lbl = \"namnum\")  # names and numeric prob values  # plot_prism(p_lbl = \"namnum\", cex_p_lbl = .70)  # smaller prob labels # plot_prism(by = \"cddc\", p_lbl = \"min\")  # minimal labels # plot_prism(by = \"cdac\", p_lbl = \"min\") # plot_prism(by = \"cddc\", p_lbl = \"mix\")  # mix abbreviated names and numeric values # plot_prism(by = \"cdac\", p_lbl = \"mix\") # plot_prism(by = \"cddc\", p_lbl = \"abb\")  # abbreviated names # plot_prism(by = \"cdac\", p_lbl = \"abb\") # plot_prism(p_lbl = \"any\") # short name and value (abb = num)  # arr_c: plot_prism(arr_c =  0)  # acc_c = 0: no arrows  plot_prism(arr_c = -3)  # arr_c = -1 to -3: points at both ends  plot_prism(arr_c = -2)  # point at far end  plot_prism(arr_c = +2)  # crr_c = 1-3: V-shape arrows at far end  # plot_prism(arr_c = +3)  # V-shape arrows at both ends # plot_prism(arr_c = +6)  # arr_c = 4-6: T-shape arrows  ## Plain plot versions: plot_prism(area = \"no\", f_lbl = \"def\", p_lbl = \"num\", col_pal = pal_mod, f_lwd = 1,            main = NA, sub = NA, mar_notes = FALSE)  # remove titles and margin notes  plot_prism(area = \"no\", f_lbl = \"nam\", p_lbl = \"min\",            main = NA, sub = \"My subtitle\", col_pal = pal_rgb)  # only subtitle  plot_prism(area = \"no\", f_lbl = \"num\", p_lbl = \"num\", col_pal = pal_kn)  # default title & subtitle   plot_prism(area = \"hr\", f_lbl = \"nam\", f_lwd = .5, p_lwd = .5, col_pal = pal_bwp)  plot_prism(area = \"hr\", f_lbl = \"nam\", f_lwd = .5, p_lbl = \"num\", main = NA, sub = NA)   # plot_prism(area = \"sq\", f_lbl = \"nam\", p_lbl = NA, col_pal = pal_rgb) plot_prism(area = \"sq\", f_lbl = \"def\", f_lbl_sep = \":\\n\", p_lbl = NA, f_lwd = 1, col_pal = pal_kn)   ## Suggested combinations: plot_prism(f_lbl = \"nam\", p_lbl = \"mix\", col_pal = pal_mod)  # basic plot  plot_prism(f_lbl = \"namnum\", p_lbl = \"num\", cex_lbl = .80, cex_p_lbl = .75)  # plot_prism(area = \"no\", f_lbl = \"def\", p_lbl = \"abb\",           # def/abb labels #            f_lwd = .8, p_lwd = .8, lty = 3, col_pal = pal_bwp)  # black-&-white  plot_prism(area = \"hr\", f_lbl = \"num\", p_lbl = \"mix\", f_lwd = 1, cex_p_lbl = .75)  plot_prism(area = \"hr\", f_lbl = \"nam\", p_lbl = \"num\", p_lwd = 6, p_scale = TRUE)  plot_prism(area = \"hr\", f_lbl = \"abb\", p_lbl = \"abb\", f_lwd = 1, col_pal = pal_kn)   # plot_prism(area = \"sq\", f_lbl = \"nam\", p_lbl = \"abb\", lbl_txt = txt_TF) plot_prism(area = \"sq\", f_lbl = \"num\", p_lbl = \"num\", f_lwd = 1, col_pal = pal_rgb)  plot_prism(area = \"sq\", f_lbl = \"namnum\", p_lbl = \"mix\", f_lwd = .5, col_pal = pal_kn)"},{"path":"https://hneth.github.io/riskyr/reference/plot_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a 2 x 2 contingency table of population frequencies. — plot_tab","title":"Plot a 2 x 2 contingency table of population frequencies. — plot_tab","text":"plot_tab plots 2 x 2 contingency table (aka. confusion table) 4 classification cases (hi, mi, fa, cr) corresponding row column sums.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a 2 x 2 contingency table of population frequencies. — plot_tab","text":"","code":"plot_tab(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   N = num$N,   by = \"cddc\",   p_split = \"v\",   area = \"no\",   scale = \"p\",   round = TRUE,   sample = FALSE,   f_lbl = \"num\",   f_lbl_sep = NA,   f_lbl_sum = f_lbl,   f_lbl_hd = \"nam\",   f_lwd = 0,   gaps = c(NA, NA),   brd_w = 0.1,   p_lbl = NA,   arr_c = -3,   col_p = c(grey(0.15, 0.99), \"yellow\", \"yellow\"),   brd_dis = 0.3,   lbl_txt = txt,   main = txt$scen_lbl,   sub = \"type\",   title_lbl = NULL,   cex_lbl = 0.9,   cex_p_lbl = NA,   col_pal = pal,   mar_notes = FALSE,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/plot_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a 2 x 2 contingency table of population frequencies. — plot_tab","text":"prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. mirt decision's miss rate mirt (.e., conditional probability negative decision provided condition TRUE). mirt optional complement sens provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. N number individuals population. suitable value N computed, provided. Note: N represented plot, used computing frequency information freq current probabilities prob. character code specifying 2 perspectives split population subsets, 6 options: \"cddc\": condition (cd) decision (dc) (default); \"cdac\": condition (cd) accuracy (ac); \"dccd\": decision (dc) condition (cd); \"dcac\": decision (dc) accuracy (ac); \"accd\": accuracy (ac) condition (cd); \"acdc\": accuracy (ac) decision (dc). p_split Primary perspective population split, 2 options: \"v\": vertical (default); \"h\": horizontal. Note: contrast plot_area, setting determines 3 probability links shown (e.g., p_link = \"def\"). area character code specifying shape main area, 4 options: \"sq\": main area scaled square; \"\": scaling (rectangular area fills plot size; default). scale Scale probabilities (table cell dimensions) either exact probability (rounded non-rounded) frequency, 2 options: \"p\": scale main area dimensions exact probability (default); \"f\": re-compute probabilities (rounded non-rounded) frequencies   scale main area dimensions frequency. Note: scale setting matters display probability values  area plots small population sizes N round = TRUE. round Boolean option specifying whether computed frequencies rounded integers. Default: round = TRUE. sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. f_lbl Type label showing frequency values 4 main areas, 6 options: \"def\": abbreviated names frequency values (default); \"abb\": abbreviated frequency names (specified code); \"nam\": names (specified lbl_txt = txt); \"num\": numeric frequency values ; \"namnum\": names (specified lbl_txt = txt) numeric values; \"\": frequency labels (f_lbl = NA NULL). f_lbl_sep Label separator main frequencies (used f_lbl = \"def\" \"namnum\"). Use f_lbl_sep = \":\\n\" add line break name numeric value. Default: f_lbl_sep = NA (set \" = \" \":\\n\" based f_lbl). f_lbl_sum Type label showing frequency values summary cells, 6 options f_lbl (). Default: f_lbl_sum = \"def\": abbreviated names numeric values. f_lbl_hd Type label showing frequency values header, 6 options f_lbl (). Default: f_lbl_hd = \"nam\": names (specified lbl_txt = txt). f_lwd Line width areas. Default: f_lwd = 1. gaps Size gaps (binary numeric vector) specifying widths vertical horizontal gaps 2 x 2 table sums (bottom row right column). Default: gaps = c(.05, .06). brd_w Border width showing 2 perspective summaries top left borders main area (proportion area size) range 0 <= brd_w <= 1. Default: brd_w = .10. p_lbl Type label showing 3 key probability links values, 7 options: \"def\": show links abbreviated names probability values; \"abb\": show links abbreviated probability names; \"nam\": show links probability names (specified code); \"num\": show links numeric probability values; \"namnum\": show links names numeric probability values; \"\": show links labels; NA: link (p_lbl = NULL, default). arr_c Arrow code symbols ends probability links (numeric value -3 <= arr_c <= +6), following options: -1 -3: points one//end/s; 0: symbols; +1 +3: V-arrow one//end/s; +4 +6: T-arrow one//end/s. Default: arr_c = -3 (points ends). col_p Colors probability links (vector 3 colors). Default: col_p = c(grey(.15, .99), \"yellow\", \"yellow\"). brd_dis Distance probability links cell center (constant). Default: brd_dis = .30. Note: Adjust avoid overlapping labels. lbl_txt Default label set text elements. Default: lbl_txt = txt. main Text label main plot title. Default: main = txt$scen_lbl. sub Text label subtitle plot (shown main title). Default: sub = \"type\" shows information current plot type. title_lbl Deprecated text label current plot title. Replaced main. cex_lbl Scaling factor text labels (frequencies headers). Default: cex_lbl = .90. cex_p_lbl Scaling factor text labels (probabilities). Default: cex_p_lbl = cex_lbl - .05. col_pal Color palette. Default: col_pal = pal. mar_notes Boolean option showing margin notes. Default: mar_notes = FALSE. ... (graphical) parameters.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a 2 x 2 contingency table of population frequencies. — plot_tab","text":"Nothing (NULL).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_tab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a 2 x 2 contingency table of population frequencies. — plot_tab","text":"plot_tab computes frequencies freq sufficient valid set 3 essential probabilities (prev, sens complement mirt, spec complement fart) existing frequency information freq population size N individuals. plot_tab derived plot_area, scale dimensions table cells.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a 2 x 2 contingency table of population frequencies. — plot_tab","text":"","code":"## Basics: # (1) Plotting global freq and prob values: plot_tab()  plot_tab(area = \"sq\", f_lwd = 3, col_pal = pal_rgb)  plot_tab(f_lbl = \"namnum\", f_lbl_sep = \" = \", brd_w = .10, f_lwd = .5)   # (2) Computing local freq and prob values: plot_tab(prev = .5, sens = 4/5, spec = 3/5, N = 10, f_lwd = 1)   # (3) Rounding and sampling: plot_tab(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, round = FALSE)  plot_tab(N = 100, prev = 1/3, sens = 2/3, spec = 6/7, sample = TRUE)   ## Plot versions: # by x p_split [yields (3 x 2) x 2] = 12 versions]: plot_tab(by = \"cddc\", p_split = \"v\", p_lbl = \"def\")  # v01 (see v07)  plot_tab(by = \"cdac\", p_split = \"v\", p_lbl = \"def\")  # v02 (see v11)  plot_tab(by = \"cddc\", p_split = \"h\", p_lbl = \"def\")  # v03 (see v05)  plot_tab(by = \"cdac\", p_split = \"h\", p_lbl = \"def\")  # v04 (see v09)   # plot_tab(by = \"dccd\", p_split = \"h\", p_lbl = \"def\")  # v07 (v01 rotated) # plot_tab(by = \"dccd\", p_split = \"v\", p_lbl = \"def\")  # v05 (v03 rotated) plot_tab(by = \"dcac\", p_split = \"v\", p_lbl = \"def\")    # v06 (see v12)  plot_tab(by = \"dcac\", p_split = \"h\", p_lbl = \"def\")    # v08 (see v10)   # plot_tab(by = \"accd\", p_split = \"v\", p_lbl = \"def\")  # v09 (v04 rotated) # plot_tab(by = \"acdc\", p_split = \"v\", p_lbl = \"def\")  # v10 (v08 rotated) # plot_tab(by = \"accd\", p_split = \"h\", p_lbl = \"def\")  # v11 (v02 rotated) # plot_tab(by = \"acdc\", p_split = \"h\", p_lbl = \"def\")  # v12 (v06 rotated)  ## Explore labels and links: # plot_tab(f_lbl = \"abb\", p_lbl = NA)  # abbr. labels, no probability links # plot_tab(f_lbl = \"num\", f_lbl_sum = \"abb\", p_lbl = \"num\", f_lbl_hd = \"abb\") plot_tab(f_lbl = \"def\", f_lbl_sum = \"def\", p_lbl = \"def\", f_lbl_hd = \"nam\")  plot_tab(f_lbl = \"namnum\", f_lbl_sep = \" = \",          f_lbl_sum = \"namnum\", f_lbl_hd = \"num\", p_lbl = \"namnum\")   ## Misc. options: plot_tab(area = \"sq\")        # area: square  # plot_tab(main = \"\")     # no titles # plot_tab(mar_notes = TRUE)   # show margin notes plot_tab(by = \"cddc\", gaps = c(.08, .00), area = \"sq\")      # gaps  # plot_tab(by = \"cddc\", gaps = c(.02, .08), p_split = \"h\")  # gaps  # Showing prob as lines: plot_tab(prev = 1/4, sens = 6/7, spec = 3/5, N = 100,          by = \"cddc\", p_split = \"v\", col_pal = pal_rgb,          p_lbl = \"def\", brd_dis = .25, arr_c = +3, lwd = 2)   # Custom text labels and colors: plot_tab(prev = .5, sens = 4/5, spec = 3/5, N = 10,          by = \"cddc\", p_split = \"v\", area = \"no\",          main = \"Main title\", sub = \"The subtitle\", lbl_txt = txt_TF,  # custom text          f_lbl = \"namnum\", f_lbl_sep = \":\\n\", f_lbl_sum = \"num\", f_lbl_hd  = \"nam\",          col_pal = pal_vir, f_lwd = 3)  # custom colors  plot_tab(prev = .5, sens = 3/5, spec = 4/5, N = 10,          by = \"cddc\", p_split = \"h\", area = \"sq\",          main = NA, sub = NA, lbl_txt = txt_org,  # custom text          f_lbl = \"namnum\", f_lbl_sep = \":\\n\", f_lbl_sum = \"num\", f_lbl_hd  = \"nam\",          col_pal = pal_kn, f_lwd = 1)  # custom colors   ## Note some differences to plot_area (i.e., area/mosaic plot): # In plot_tab: # (1) p_split does not matter (except for selecting different prob links): plot_tab(by = \"cddc\", p_split = \"v\")  # v01 (see v07)  plot_tab(by = \"cddc\", p_split = \"h\")  # v03 (see v05)  # (2) scale does not matter for dimensions (which are constant), #     BUT matters for values shown in prob links and on margins: plot_tab(N = 5, prev = .3, sens = .9, spec = .5,          by = \"cddc\", scale = \"p\", p_lbl = \"def\", round = TRUE)  # (a) exact prob values  plot_tab(N = 5, prev = .3, sens = .9, spec = .5,          by = \"cddc\", scale = \"f\", p_lbl = \"def\", round = TRUE)  # (b) prob from rounded freq!  plot_tab(N = 5, prev = .3, sens = .9, spec = .5,          by = \"cddc\", scale = \"f\", p_lbl = \"def\", round = FALSE) # (c) same values as (a)"},{"path":"https://hneth.github.io/riskyr/reference/plot_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a tree diagram of frequencies and probabilities. — plot_tree","title":"Plot a tree diagram of frequencies and probabilities. — plot_tree","text":"plot_tree drew tree diagram frequencies (nodes) probabilities (edges).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a tree diagram of frequencies and probabilities. — plot_tree","text":"","code":"plot_tree(   prev = num$prev,   sens = num$sens,   mirt = NA,   spec = num$spec,   fart = NA,   N = freq$N,   round = TRUE,   by = \"cd\",   area = \"no\",   p_lbl = \"num\",   show_accu = TRUE,   w_acc = 0.5,   title_lbl = txt$scen_lbl,   popu_lbl = txt$popu_lbl,   cond_true_lbl = txt$cond_true_lbl,   cond_false_lbl = txt$cond_false_lbl,   dec_pos_lbl = txt$dec_pos_lbl,   dec_neg_lbl = txt$dec_neg_lbl,   hi_lbl = txt$hi_lbl,   mi_lbl = txt$mi_lbl,   fa_lbl = txt$fa_lbl,   cr_lbl = txt$cr_lbl,   col_txt = grey(0.01, alpha = 0.99),   cex_lbl = 0.85,   col_boxes = pal,   col_border = grey(0.33, alpha = 0.99),   lwd = 1.5,   box_lwd = 1.5,   col_shadow = grey(0.11, alpha = 0.99),   cex_shadow = 0 )"},{"path":"https://hneth.github.io/riskyr/reference/plot_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a tree diagram of frequencies and probabilities. — plot_tree","text":"prev condition's prevalence prev. sens decision's sensitivity sens. mirt decision's miss rate mirt. spec decision's specificity value spec. fart decision's false alarm rate fart. N number individuals population. round Boolean option specifying whether computed frequencies rounded integers. Default: round = TRUE. character code specifying perspective (category population split subsets) 3 options: \"cd\" ... condition; \"dc\" ... decision; \"ac\" ... accuracy. area character code specifying area boxes (relative sizes) 3 options: \"\" ... boxes shown size; \"sq\" ... boxes squares area sizes scaled proportional frequencies (default); \"hr\" ... boxes horizontal rectangles area sizes scaled proportional frequencies. p_lbl character code specifying type probability information (edges) 4 options: \"nam\" ... names probabilities; \"num\" ... numeric values probabilities (rounded 3 decimals, default); \"mix\" ... names essential probabilities, values complements; \"min\" ... minimal labels: names essential probabilities. show_accu Option showing current accuracy metrics accu margin plot. w_acc Weighting parameter w used compute weighted accuracy w_acc comp_accu_freq. Various options allow customization text labels colors: title_lbl Text label current plot title. popu_lbl Text label current population popu. cond_true_lbl Text label current cases cond_true. cond_false_lbl Text label current cases cond_false. dec_pos_lbl Text label current cases dec_pos. dec_neg_lbl Text label current cases dec_neg. hi_lbl Text label hits hi. mi_lbl Text label misses mi. fa_lbl Text label false alarms fa. cr_lbl Text label correct rejections cr. col_txt Color text labels (boxes). cex_lbl Scaling factor text labels (boxes arrows). col_boxes Colors boxes (single color vector named colors matching number current boxes). Default: Current color information contained pal. col_border Color borders. Default: col_border = grey(.33, alpha = .99). lwd Width arrows. box_lwd Width boxes. col_shadow Color box shadows. Default: col_shadow = grey(.11, alpha = .99). cex_shadow Scaling factor shadows (values > 0 showing shadows). Default: cex_shadow = 0.","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a tree diagram of frequencies and probabilities. — plot_tree","text":"Nothing (NULL).","code":""},{"path":"https://hneth.github.io/riskyr/reference/plot_tree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a tree diagram of frequencies and probabilities. — plot_tree","text":"plot_tree deprecated – please use plot_prism instead.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/plot_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a tree diagram of frequencies and probabilities. — plot_tree","text":"","code":"plot_tree()  # frequency tree with current default options (by = \"cd\") #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Argument 'title_lbl' is deprecated. Please use 'main' instead.   # alternative perspectives: plot_tree(by = \"dc\")  # tree by decision #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Argument 'title_lbl' is deprecated. Please use 'main' instead.  plot_tree(by = \"ac\")  # tree by accuracy #> Function 'plot_tree' is deprecated; using 'plot_prism' (with by = 'cd'/'dc'/'ac') instead. #> Argument 'title_lbl' is deprecated. Please use 'main' instead.   # See plot_prism for details and additional options."},{"path":"https://hneth.github.io/riskyr/reference/popu.html","id":null,"dir":"Reference","previous_headings":"","what":"A table of cases (in the current population). — popu","title":"A table of cases (in the current population). — popu","text":"popu R data frame computed comp_popu current frequency information (contained freq). individual represented row; columns represent individual's condition (TRUE FALSE), corresponding decision (also encoded TRUE = positive FALSE = negative), classification (.e., case cell combination, SDT terms), true positive (hit hi), false negative (miss mi), false positive (false alarm fa), true negative (correct rejection cr).","code":""},{"path":"https://hneth.github.io/riskyr/reference/popu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A table of cases (in the current population). — popu","text":"","code":"popu"},{"path":"https://hneth.github.io/riskyr/reference/popu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A table of cases (in the current population). — popu","text":"object class NULL length 0.","code":""},{"path":"https://hneth.github.io/riskyr/reference/popu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A table of cases (in the current population). — popu","text":"data frame popu containing N rows (individual cases) 3 columns (\"Truth\", \"Decision\", \"SDT\") encoded ordered factors (2, 2, 4 levels, respectively).","code":""},{"path":"https://hneth.github.io/riskyr/reference/popu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A table of cases (in the current population). — popu","text":"#' popu initialized NULL needs computed calling comp_popu current parameter settings. default, comp_popu uses current information contained txt define text labels. visualization current population popu provided plot_icons.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/popu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A table of cases (in the current population). — popu","text":"","code":"popu <- comp_popu()  # => initializes popu with current values of freq and txt dim(popu)            # => N x 3 #> [1] 1000    3 head(popu)           # => shows head of data frame #>   True condition  Outcome Cases #> 1        present positive    TP #> 2        present positive    TP #> 3        present positive    TP #> 4        present positive    TP #> 5        present positive    TP #> 6        present positive    TP"},{"path":"https://hneth.github.io/riskyr/reference/ppod.html","id":null,"dir":"Reference","previous_headings":"","what":"The proportion (or baseline) of a positive decision (aka. bias). — ppod","title":"The proportion (or baseline) of a positive decision (aka. bias). — ppod","text":"ppod defines proportion (baseline probability rate) decision positive (necessarily accurate/correct).","code":""},{"path":"https://hneth.github.io/riskyr/reference/ppod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The proportion (or baseline) of a positive decision (aka. bias). — ppod","text":"","code":"ppod"},{"path":"https://hneth.github.io/riskyr/reference/ppod.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The proportion (or baseline) of a positive decision (aka. bias). — ppod","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/ppod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The proportion (or baseline) of a positive decision (aka. bias). — ppod","text":"ppod also known bias, though latter term also used describe systematic tendency deviate — rather just positive — direction. Understanding obtaining proportion positive decisions ppod: Definition:   ppod (non-conditional) probability: ppod = p(decision = positive) base rate (baseline probability)   decision positive (necessarily accurate/correct). Perspective:   ppod classifies population N individuals   decision (ppod = dec_pos/N). ppod \"decision\" counterpart prev   (adopts \"condition\" perspective). Alternative names:   base rate positive decisions (PR),   proportion predicted diagnosed,   rate decision = positive cases terms frequencies,   ppod ratio   dec_pos (.e., hi + fa)   divided N (.e.,   hi + mi + fa + cr): ppod = dec_pos/N = (hi + fa)/(hi + mi + fa + cr) Dependencies:   ppod feature decision process   diagnostic procedure. However, conditional probabilities   sens, mirt,   spec, fart,   PPV, NPV   also depend condition's prevalence prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/ppod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The proportion (or baseline) of a positive decision (aka. bias). — ppod","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/ppod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The proportion (or baseline) of a positive decision (aka. bias). — ppod","text":"","code":"ppod <- .50     # sets a rate of positive decisions of 50% ppod <- 50/100  # (decision = TRUE) for 50 out of 100 individuals is_prob(ppod)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/prev.html","id":null,"dir":"Reference","previous_headings":"","what":"The prevalence (baseline probability) of a condition. — prev","title":"The prevalence (baseline probability) of a condition. — prev","text":"prev defines condition's prevalence value (baseline probability): probability condition TRUE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/prev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The prevalence (baseline probability) of a condition. — prev","text":"","code":"prev"},{"path":"https://hneth.github.io/riskyr/reference/prev.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The prevalence (baseline probability) of a condition. — prev","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/prev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The prevalence (baseline probability) of a condition. — prev","text":"Understanding obtaining prevalence value prev: Definition:   prev (non-conditional) probability: prev = p(condition = TRUE) base rate (baseline probability)   condition's occurrence truth. terms frequencies,   prev ratio   cond_true (.e., hi + mi)   divided N (.e.,   hi + mi + fa + cr): prev = cond_true/N = (hi + mi)/(hi + mi + fa + cr) Perspective:   prev classifies population N individuals   condition (prev = cond_true/N). prev \"condition\" counterpart   ppod (adopting \"decision\" perspective)   acc  (adopting \"accuracy\" perspective). Alternative names:   base rate condition,   proportion affected,   rate condition = TRUE cases. prev often distinguished incidence rate   (.e., rate new cases within certain time period). Dependencies:   prev feature population   condition, independent decision process   diagnostic procedure. value prev depend   features decision process diagnostic procedure,   prev must taken account   computing conditional probabilities   sens, mirt,   spec, fart,   PPV, NPV   (depend prev).","code":""},{"path":"https://hneth.github.io/riskyr/reference/prev.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The prevalence (baseline probability) of a condition. — prev","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/prev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The prevalence (baseline probability) of a condition. — prev","text":"","code":"prev <- .10     # sets a prevalence value of 10% prev <- 10/100  # (condition = TRUE) for 10 out of 100 individuals is_prob(prev)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/print.box.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a frequency box object — print.box","title":"Print a frequency box object — print.box","text":"print.box utility method prints box object.","code":""},{"path":"https://hneth.github.io/riskyr/reference/print.box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a frequency box object — print.box","text":"","code":"# S3 method for class 'box' print(x, ...)"},{"path":"https://hneth.github.io/riskyr/reference/print.box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a frequency box object — print.box","text":"x box object ... Additional parameters passed cat.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/print.summary.riskyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary information of a riskyr scenario. — print.summary.riskyr","title":"Print summary information of a riskyr scenario. — print.summary.riskyr","text":"print.summary.riskyr provides print method objects class \"summary.riskyr\".","code":""},{"path":"https://hneth.github.io/riskyr/reference/print.summary.riskyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary information of a riskyr scenario. — print.summary.riskyr","text":"","code":"# S3 method for class 'summary.riskyr' print(x = NULL, ...)"},{"path":"https://hneth.github.io/riskyr/reference/print.summary.riskyr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Print summary information of a riskyr scenario. — print.summary.riskyr","text":"Printed output \"summary.riskyr\" object.","code":""},{"path":"https://hneth.github.io/riskyr/reference/print.summary.riskyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary information of a riskyr scenario. — print.summary.riskyr","text":"x object class \"summary.riskyr\", usually result call summary.riskyr. ... Additional parameters (passed generic print function).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/print.summary.riskyr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print summary information of a riskyr scenario. — print.summary.riskyr","text":"","code":"summary(scenarios$n4) #> Scenario:  Mammography  #>  #> Condition:  Breast cancer  #> Decision:  Screening  #> Population:  Women (general population)  #> N =  1000  #> Source:  Sedlmaier & Gigerenzer (2001), p.381ff.  #>  #> Probabilities: #>  #>  Essential probabilities: #> prev sens mirt spec fart  #> 0.01 0.80 0.20 0.90 0.10  #>  #>  Other probabilities: #>  ppod   PPV   NPV   FDR   FOR   acc  #> 0.107 0.075 0.998 0.925 0.002 0.899  #>  #> Frequencies: #>  #>  by conditions: #>  cond_true cond_false  #>         10        990  #>  #>  by decision: #> dec_pos dec_neg  #>     107     893  #>  #>  by correspondence (of decision to condition): #> dec_cor dec_err  #>     899     101  #>  #>  4 essential (SDT) frequencies: #>  hi  mi  fa  cr  #>   8   2  99 891  #>  #> Accuracy: #>  #>  acc: #> 0.899"},{"path":"https://hneth.github.io/riskyr/reference/prob.html","id":null,"dir":"Reference","previous_headings":"","what":"List current probability information. — prob","title":"List current probability information. — prob","text":"prob list named numeric variables containing 3 essential (1 non-conditional prev 2 conditional sens spec) probabilities 8 derived (ppod acc, well 6 conditional) probabilities:","code":""},{"path":"https://hneth.github.io/riskyr/reference/prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List current probability information. — prob","text":"","code":"prob"},{"path":"https://hneth.github.io/riskyr/reference/prob.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List current probability information. — prob","text":"object class list length 13.","code":""},{"path":"https://hneth.github.io/riskyr/reference/prob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List current probability information. — prob","text":"prob currently contains following probabilities: condition's prevalence prev  (.e., probability condition TRUE):  prev = cond_true/N. decision's sensitivity sens  (.e., conditional probability positive decision  provided condition TRUE). decision's miss rate mirt  (.e., conditional probability negative decision  provided condition TRUE). decision's specificity spec  (.e., conditional probability  negative decision provided condition FALSE). decision's false alarm rate fart  (.e., conditional probability  positive decision provided condition FALSE). proportion (baseline probability rate)  decision positive ppod  (necessarily true):  ppod = dec_pos/N. decision's positive predictive value PPV  (.e., conditional probability condition TRUE  provided decision positive). decision's false detection (false discovery) rate FDR  (.e., conditional probability condition FALSE  provided decision positive). decision's negative predictive value NPV  (.e., conditional probability condition FALSE  provided decision negative). decision's false omission rate  (.e., conditional probability condition TRUE  provided decision negative). accuracy acc  (.e., probability correct decisions dec_cor  correspondence decisions conditions). conditional probability p_acc_hi  (.e., probability hi given  decision correct dec_cor). conditional probability p_err_fa  (.e., probability fa given  decision erroneous dec_err). probabilities computed basic probabilities (contained num) computed using comp_prob. list prob probability counterpart list containing frequency information freq. Note inputs extreme probabilities (0 1) may yield unexpected values (e.g., NPV value NaN is_extreme_prob_set evaluates TRUE). Key relationships frequencies probabilities (see documentation comp_freq comp_prob details): Three perspectives population: condition / decision / accuracy. Defining probabilities terms frequencies: Probabilities can computed ratios frequencies, beware rounding issues. Functions translating representational formats: comp_prob_prob, comp_prob_freq, comp_freq_prob, comp_freq_freq (see documentation comp_prob_prob details). Visualizations current probability information provided plot_area, plot_prism, plot_curve.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/prob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List current probability information. — prob","text":"","code":"prob <- comp_prob()  # initialize prob to default parameters prob                 # show current values #> $prev #> [1] 0.25 #>  #> $sens #> [1] 0.85 #>  #> $mirt #> [1] 0.15 #>  #> $spec #> [1] 0.75 #>  #> $fart #> [1] 0.25 #>  #> $ppod #> [1] 0.4 #>  #> $PPV #> [1] 0.53125 #>  #> $FDR #> [1] 0.46875 #>  #> $NPV #> [1] 0.9375 #>  #> $FOR #> [1] 0.0625 #>  #> $acc #> [1] 0.775 #>  #> $p_acc_hi #> [1] 0.2741935 #>  #> $p_err_fa #> [1] 0.8333333 #>  length(prob)         # 13 key probabilities (and their values) #> [1] 13"},{"path":"https://hneth.github.io/riskyr/reference/read_popu.html","id":null,"dir":"Reference","previous_headings":"","what":"Read population data (from df) into a riskyr scenario (description). — read_popu","title":"Read population data (from df) into a riskyr scenario (description). — read_popu","text":"read_popu reads data frame df (containing observations population cross-classified two binary variables) returns riskyr scenario (.e., description data).","code":""},{"path":"https://hneth.github.io/riskyr/reference/read_popu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read population data (from df) into a riskyr scenario (description). — read_popu","text":"","code":"read_popu(   df = popu,   ix_by_top = 1,   ix_by_bot = 2,   ix_sdt = 3,   hi_lbl = txt$hi_lbl,   mi_lbl = txt$mi_lbl,   fa_lbl = txt$fa_lbl,   cr_lbl = txt$cr_lbl,   ... )"},{"path":"https://hneth.github.io/riskyr/reference/read_popu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read population data (from df) into a riskyr scenario (description). — read_popu","text":"df data frame providing population popu individuals, identified least 2 binary variables cross-classified 4 cases 3rd variable. Default: df = popu (data frame). ix_by_top Index variable (column) providing 1st (X/top) perspective (df). Default: ix_by_top = 1 (1st column). ix_by_bot Index variable (column) providing 2nd (Y/bot) perspective (df). Default: ix_by_bot = 2 (2nd column). ix_sdt Index variable (column) providing cross-classification 4 cases (df). Default: ix_by_bot = 3 (3rd column). hi_lbl Label cases classified hi (TP). mi_lbl Label cases classified mi (FN). fa_lbl Label cases classified fa (FP). cr_lbl Label cases classified cr (TN). ... Additional parameters (passed riskyr).","code":""},{"path":"https://hneth.github.io/riskyr/reference/read_popu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read population data (from df) into a riskyr scenario (description). — read_popu","text":"riskyr object describing risk-related scenario.","code":""},{"path":"https://hneth.github.io/riskyr/reference/read_popu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read population data (from df) into a riskyr scenario (description). — read_popu","text":"Note df needs structured (cross-classified) according data frame popu, created comp_popu.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/read_popu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read population data (from df) into a riskyr scenario (description). — read_popu","text":"","code":"# Generating and interpreting different scenario types:  # (A) Diagnostic/screening scenario (using default labels): ------ popu_diag <- comp_popu(hi = 4, mi = 1, fa = 2, cr = 3) # popu_diag scen_diag <- read_popu(popu_diag, scen_lbl = \"Diagnostics\", popu_lbl = \"Population tested\") plot(scen_diag, type = \"prism\", area = \"no\", f_lbl = \"namnum\")   # (B) Intervention/treatment scenario: ------ popu_treat <- comp_popu(hi = 80, mi = 20, fa = 45, cr = 55,                         cond_lbl = \"Treatment\", cond_true_lbl = \"pill\", cond_false_lbl = \"placebo\",                         dec_lbl = \"Health status\", dec_pos_lbl = \"healthy\", dec_neg_lbl = \"sick\") # popu_treat s_treat <- read_popu(popu_treat, scen_lbl = \"Treatment\", popu_lbl = \"Population treated\") plot(s_treat, type = \"prism\", area = \"sq\", f_lbl = \"namnum\", p_lbl = \"num\")  plot(s_treat, type = \"icon\", lbl_txt = txt_org, col_pal = pal_org)   # (C) Prevention scenario (e.g., vaccination): ------ popu_vacc <- comp_popu(hi = 960, mi = 40, fa = 880, cr = 120,                        cond_lbl = \"Vaccination\", cond_true_lbl = \"yes\", cond_false_lbl = \"no\",                        dec_lbl = \"Disease\", dec_pos_lbl = \"no flu\", dec_neg_lbl = \"flu\") # popu_vacc s_vacc <- read_popu(popu_vacc, scen_lbl = \"Vaccination effects\", popu_lbl = \"RCT population\") plot(s_vacc, type = \"prism\", area = \"sq\", f_lbl = \"namnum\", col_pal = pal_rgb, p_lbl = \"num\")"},{"path":"https://hneth.github.io/riskyr/reference/riskyr.guide.html","id":null,"dir":"Reference","previous_headings":"","what":"Opens the riskyr package guides — riskyr.guide","title":"Opens the riskyr package guides — riskyr.guide","text":"Opens riskyr package guides","code":""},{"path":"https://hneth.github.io/riskyr/reference/riskyr.guide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opens the riskyr package guides — riskyr.guide","text":"","code":"riskyr.guide()"},{"path":"https://hneth.github.io/riskyr/reference/riskyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a riskyr scenario. — riskyr","title":"Create a riskyr scenario. — riskyr","text":"riskyr creates scenario class \"riskyr\", can visualized plot method plot.riskyr summarized summary method summary.riskyr.","code":""},{"path":"https://hneth.github.io/riskyr/reference/riskyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a riskyr scenario. — riskyr","text":"","code":"riskyr(   scen_lbl = txt$scen_lbl,   popu_lbl = txt$popu_lbl,   N_lbl = txt$N_lbl,   cond_lbl = txt$cond_lbl,   cond_true_lbl = txt$cond_true_lbl,   cond_false_lbl = txt$cond_false_lbl,   dec_lbl = txt$dec_lbl,   dec_pos_lbl = txt$dec_pos_lbl,   dec_neg_lbl = txt$dec_neg_lbl,   acc_lbl = txt$acc_lbl,   dec_cor_lbl = txt$dec_cor_lbl,   dec_err_lbl = txt$dec_err_lbl,   sdt_lbl = txt$sdt_lbl,   hi_lbl = txt$hi_lbl,   mi_lbl = txt$mi_lbl,   fa_lbl = txt$fa_lbl,   cr_lbl = txt$cr_lbl,   prev = NA,   sens = NA,   spec = NA,   fart = NA,   N = NA,   hi = NA,   mi = NA,   fa = NA,   cr = NA,   scen_lng = txt$scen_lng,   scen_txt = txt$scen_txt,   scen_src = txt$scen_src,   scen_apa = txt$scen_apa,   round = TRUE,   sample = FALSE )"},{"path":"https://hneth.github.io/riskyr/reference/riskyr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Create a riskyr scenario. — riskyr","text":"riskyr object describing risk-related scenario (textual numeric information).","code":""},{"path":"https://hneth.github.io/riskyr/reference/riskyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a riskyr scenario. — riskyr","text":"scen_lbl current scenario title (sometimes Title Caps). popu_lbl brief description current population sample. N_lbl label current population popu sample. cond_lbl label condition feature (e.g., disease) currently considered. cond_true_lbl label presence current condition cond_true cases (condition's true state TRUE). cond_false_lbl label absence current condition cond_false cases (condition's true state FALSE). dec_lbl label decision judgment (e.g., diagnostic test) currently made. dec_pos_lbl label positive decisions dec_pos cases (e.g., predicting presence condition). dec_neg_lbl label negative decisions dec_neg cases (e.g., predicting absence condition). acc_lbl label accuracy (.e., correspondence condition decision judgment). dec_cor_lbl label correct (accurate) decisions judgments. dec_err_lbl label incorrect (erroneous) decisions judgments. sdt_lbl label combination condition decision currently made. hi_lbl label hits true positives hi (.e., correct decisions presence condition, condition actually present). mi_lbl label misses false negatives mi (.e., incorrect decisions absence condition condition actually present). fa_lbl label false alarms false positives fa (.e., incorrect decisions presence condition condition actually absent). cr_lbl label correct rejections true negatives cr (.e., correct decision absence condition, condition actually absent). Essential probabilities: prev condition's prevalence prev (.e., probability condition TRUE). sens decision's sensitivity sens (.e., conditional probability positive decision provided condition TRUE). sens optional complement mirt provided. spec decision's specificity value spec (.e., conditional probability negative decision provided condition FALSE). spec optional complement fart provided. fart decision's false alarm rate fart (.e., conditional probability positive decision provided condition FALSE). fart optional complement spec provided. Essential frequencies: N number individuals scenario's population. suitable value N computed, provided. hi number hits hi (true positives). mi number misses mi (false negatives). fa number false alarms fa (false positives). cr number correct rejections cr (true negatives). Details source information: scen_lng Language current scenario (character code). Options: \"en\" English, \"de\" German. scen_txt longer text description current scenario (may extend several lines). scen_src Source information current scenario. scen_apa Source information current scenario according American Psychological Association (APA style). round Boolean value determines whether frequency values rounded nearest integer. Default: round = TRUE. Note: rounding using comp_freq_prob (.e., computing freq prob description). sample Boolean value determines whether frequency values sampled N, given probability values prev, sens, spec. Default: sample = FALSE. Note: sampling using comp_freq_prob (.e., computing freq prob description).","code":""},{"path":"https://hneth.github.io/riskyr/reference/riskyr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a riskyr scenario. — riskyr","text":"riskyr object describing risk-related scenario. Scenario-specific titles text labels (see txt).","code":""},{"path":"https://hneth.github.io/riskyr/reference/riskyr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a riskyr scenario. — riskyr","text":"Beyond basic scenario information (.e., text elements describing scenario) population size N essential probabilities prev, sens, spec, fart used returned. Note: Basic text information numeric parameters   (see num init_num)   integral parts riskyr scenario. contrast, basic color information   (see pal init_pal)   integral part, independently defined. names probabilities   (see prob) currently   integral part txt riskyr scenarios   (defined prob_lbl_def label_prob).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/riskyr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a riskyr scenario. — riskyr","text":"","code":"# Defining scenarios: ----- # (a) minimal information: hustosis <- riskyr(scen_lbl = \"Screening for hustosis\",                    N = 1000, prev = .04, sens = .80, spec = .95)  # (2) detailed information: scen_reoffend <- riskyr(scen_lbl = \"Identify reoffenders\",                         cond_lbl = \"being a reoffender\",                         popu_lbl = \"Prisoners\",                         cond_true_lbl = \"has reoffended\",                         cond_false_lbl = \"has not reoffended\",                         dec_lbl = \"test result\",                         dec_pos_lbl = \"will reoffend\",                         dec_neg_lbl = \"will not reoffend\",                         sdt_lbl = \"combination\",                         hi_lbl = \"reoffender found\", mi_lbl = \"reoffender missed\",                         fa_lbl = \"false accusation\", cr_lbl = \"correct release\",                         prev = .45,  # prevalence of being a reoffender.                         sens = .98,                         spec = .46, fart = NA,  # (provide 1 of 2)                         N = 753,                         scen_src = \"Example scenario\")  # Using scenarios: ----- summary(hustosis) #> Scenario:  Screening for hustosis  #>  #> Condition:  True condition  #> Decision:  Outcome  #> Population:  Population  #> N =  1000  #> Source:  Source information  #>  #> Probabilities: #>  #>  Essential probabilities: #> prev sens mirt spec fart  #> 0.04 0.80 0.20 0.95 0.05  #>  #>  Other probabilities: #>  ppod   PPV   NPV   FDR   FOR   acc  #> 0.080 0.400 0.991 0.600 0.009 0.944  #>  #> Frequencies: #>  #>  by conditions: #>  cond_true cond_false  #>         40        960  #>  #>  by decision: #> dec_pos dec_neg  #>      80     920  #>  #>  by correspondence (of decision to condition): #> dec_cor dec_err  #>     944      56  #>  #>  4 essential (SDT) frequencies: #>  hi  mi  fa  cr  #>  32   8  48 912  #>  #> Accuracy: #>  #>  acc: #> 0.944 plot(hustosis)   summary(scen_reoffend) #> Scenario:  Identify reoffenders  #>  #> Condition:  being a reoffender  #> Decision:  test result  #> Population:  Prisoners  #> N =  753  #> Source:  Example scenario  #>  #> Probabilities: #>  #>  Essential probabilities: #> prev sens mirt spec fart  #> 0.45 0.98 0.02 0.46 0.54  #>  #>  Other probabilities: #>  ppod   PPV   NPV   FDR   FOR   acc  #> 0.738 0.598 0.966 0.402 0.034 0.694  #>  #> Frequencies: #>  #>  by conditions: #>  cond_true cond_false  #>        339        414  #>  #>  by decision: #> dec_pos dec_neg  #>     556     197  #>  #>  by correspondence (of decision to condition): #> dec_cor dec_err  #>     522     231  #>  #>  4 essential (SDT) frequencies: #>  hi  mi  fa  cr  #> 332   7 224 190  #>  #> Accuracy: #>  #>  acc: #> 0.694 plot(scen_reoffend)   # 2 ways of defining the same scenario: s1 <- riskyr(prev = .5, sens = .5, spec = .5, N = 100)  # s1: define by 3 prob & N s2 <- riskyr(hi = 25, mi = 25, fa = 25, cr = 25)        # s2: same scenario by 4 freq all.equal(s1, s2)  # should be TRUE #> [1] TRUE  # Rounding and sampling: s3 <- riskyr(prev = 1/3, sens = 2/3, spec = 6/7, N = 100, round = FALSE)  # s3: w/o rounding s4 <- riskyr(prev = 1/3, sens = 2/3, spec = 6/7, N = 100, sample = TRUE)  # s4: with sampling  # Note: riskyr(prev = .5, sens = .5, spec = .5, hi = 25, mi = 25, fa = 25, cr = 25)  # works (consistent) #> $scen_lbl #> [1] \"Scenario\" #>  #> $popu_lbl #> [1] \"Population\" #>  #> $N_lbl #> [1] \"N\" #>  #> $cond_lbl #> [1] \"True condition\" #>  #> $cond_true_lbl #> [1] \"present\" #>  #> $cond_false_lbl #> [1] \"absent\" #>  #> $dec_lbl #> [1] \"Outcome\" #>  #> $dec_pos_lbl #> [1] \"positive\" #>  #> $dec_neg_lbl #> [1] \"negative\" #>  #> $acc_lbl #> [1] \"Accuracy\" #>  #> $dec_cor_lbl #> [1] \"correct\" #>  #> $dec_err_lbl #> [1] \"incorrect\" #>  #> $sdt_lbl #> [1] \"Cases\" #>  #> $hi_lbl #> [1] \"TP\" #>  #> $mi_lbl #> [1] \"FN\" #>  #> $fa_lbl #> [1] \"FP\" #>  #> $cr_lbl #> [1] \"TN\" #>  #> $prev #> [1] 0.5 #>  #> $sens #> [1] 0.5 #>  #> $spec #> [1] 0.5 #>  #> $fart #> [1] 0.5 #>  #> $N #> [1] 100 #>  #> $hi #> [1] 25 #>  #> $mi #> [1] 25 #>  #> $fa #> [1] 25 #>  #> $cr #> [1] 25 #>  #> $scen_lng #> [1] \"en/de\" #>  #> $scen_txt #> [1] \"Description of the current scenario in a short paragraph of text. This description may include several sentences.\" #>  #> $scen_src #> [1] \"Source information\" #>  #> $scen_apa #> [1] \"Source information in APA format\" #>  #> attr(,\"class\") #> [1] \"riskyr\" riskyr(prev = .5, sens = .5, spec = .5, hi = 25, mi = 25, fa = 25)           # works (ignores freq) #> $scen_lbl #> [1] \"Scenario\" #>  #> $popu_lbl #> [1] \"Population\" #>  #> $N_lbl #> [1] \"N\" #>  #> $cond_lbl #> [1] \"True condition\" #>  #> $cond_true_lbl #> [1] \"present\" #>  #> $cond_false_lbl #> [1] \"absent\" #>  #> $dec_lbl #> [1] \"Outcome\" #>  #> $dec_pos_lbl #> [1] \"positive\" #>  #> $dec_neg_lbl #> [1] \"negative\" #>  #> $acc_lbl #> [1] \"Accuracy\" #>  #> $dec_cor_lbl #> [1] \"correct\" #>  #> $dec_err_lbl #> [1] \"incorrect\" #>  #> $sdt_lbl #> [1] \"Cases\" #>  #> $hi_lbl #> [1] \"TP\" #>  #> $mi_lbl #> [1] \"FN\" #>  #> $fa_lbl #> [1] \"FP\" #>  #> $cr_lbl #> [1] \"TN\" #>  #> $prev #> [1] 0.5 #>  #> $sens #> [1] 0.5 #>  #> $spec #> [1] 0.5 #>  #> $fart #> [1] 0.5 #>  #> $N #> [1] 10 #>  #> $hi #> [1] 2 #>  #> $mi #> [1] 3 #>  #> $fa #> [1] 3 #>  #> $cr #> [1] 2 #>  #> $scen_lng #> [1] \"en/de\" #>  #> $scen_txt #> [1] \"Description of the current scenario in a short paragraph of text. This description may include several sentences.\" #>  #> $scen_src #> [1] \"Source information\" #>  #> $scen_apa #> [1] \"Source information in APA format\" #>  #> attr(,\"class\") #> [1] \"riskyr\"  ## Watch out for: # riskyr(hi = 25, mi = 25, fa = 25, cr = 25, N = 101)  # warns, uses actual sum of freq # riskyr(prev = .4, sens = .5, spec = .5, hi = 25, mi = 25, fa = 25, cr = 25)  # warns, uses freq"},{"path":"https://hneth.github.io/riskyr/reference/scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"A collection of riskyr scenarios from various sources (as list). — scenarios","title":"A collection of riskyr scenarios from various sources (as list). — scenarios","text":"scenarios list scenarios class riskyr collected scientific literature sources used visualization summary functions.","code":""},{"path":"https://hneth.github.io/riskyr/reference/scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A collection of riskyr scenarios from various sources (as list). — scenarios","text":"","code":"scenarios"},{"path":"https://hneth.github.io/riskyr/reference/scenarios.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A collection of riskyr scenarios from various sources (as list). — scenarios","text":"list currently 25 scenarios class riskyr described 21 variables.","code":""},{"path":"https://hneth.github.io/riskyr/reference/scenarios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A collection of riskyr scenarios from various sources (as list). — scenarios","text":"scenarios currently contains following scenarios (n1 n12 English language, n13 n25 German language): Bowel cancer screening Cab problem Hemoccult test Mammography screening Mammography (freq) Mammography (prob) Mushrooms Musical town PSA test (baseline) PSA test (patients) Psylicraptis screening Sepsis Amniozentese (German language) HIV-Test 1 HIV-Test 2 HIV-Test 3 HIV-Test 4 Mammografie 1 Mammografie 2 Mammografie 3 Mammografie 4 Nackenfaltentest (NFT) 1 Nackenfaltentest (NFT) 2 Sigmoidoskopie 1 Sigmoidoskopie 2 Variables describing scenario: scen_lbl: Text label current scenario. scen_lng: Language current scenario (en/de). scen_txt: Description text current scenario. popu_lbl: Text label current population. cond_lbl: Text label current condition. cond_true_lbl: Text label cond_true cases. cond_false_lbl: Text label cond_false cases. dec_lbl: Text label current decision. dec_pos_lbl: Text label dec_pos cases. dec_neg_lbl: Text label dec_neg cases. hi_lbl: Text label cases hits hi. mi_lbl: Text label cases misses mi. fa_lbl: Text label cases false alarms fa. cr_lbl: Text label cases correct rejections cr. prev: Value current prevalence prev. sens: Value current sensitivity sens. spec: Value current specificity spec. fart: Value current false alarm rate fart. N: Current population size N. scen_src: Source information current scenario. scen_apa: Source information APA format. Note names variables (columns) correspond subset init_txt (initialize txt) init_num (initialize num). variables scen_src scen_apa provide scenario's source information. information scenarios also contained R data frame df_scenarios (generated corresponding .rda file /data/).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/sens.html","id":null,"dir":"Reference","previous_headings":"","what":"The sensitivity (or hit rate) of a decision process or diagnostic procedure. — sens","title":"The sensitivity (or hit rate) of a decision process or diagnostic procedure. — sens","text":"sens defines decision's sensitivity (hit rate) value: conditional probability decision positive condition TRUE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The sensitivity (or hit rate) of a decision process or diagnostic procedure. — sens","text":"","code":"sens"},{"path":"https://hneth.github.io/riskyr/reference/sens.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The sensitivity (or hit rate) of a decision process or diagnostic procedure. — sens","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/sens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The sensitivity (or hit rate) of a decision process or diagnostic procedure. — sens","text":"Understanding obtaining sensitivity sens (hit rate HR): Definition: sens conditional probability   (correct) positive decision given   condition TRUE: sens = p(decision = positive | condition = TRUE) probability correctly detecting true cases   (condition = TRUE). Perspective:   sens classifies   subset cond_true individuals   decision (sens = hi/cond_true). Alternative names:   true positive rate (TPR),   hit rate (HR),   probability detection,   power = 1 - beta,   recall Relationships: . sens complement miss rate   mirt (aka. false negative rate FNR   rate Type-II errors): sens = (1 - miss rate) = (1 - FNR) b. sens opposite conditional probability   – complement –   positive predictive value PPV: PPV = p(condition = TRUE | decision = positive) terms frequencies,   sens ratio   hi divided   cond_true (.e., hi + mi): sens = hi/cond_true = hi/(hi + mi) Dependencies:   sens feature decision process   diagnostic procedure measure   correct decisions (true positives). Due conditional probability,   value sens intrinsic   decision process, also depends   condition's prevalence value prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/sens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The sensitivity (or hit rate) of a decision process or diagnostic procedure. — sens","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The sensitivity (or hit rate) of a decision process or diagnostic procedure. — sens","text":"","code":"sens <- .85     # sets a sensitivity value of 85% sens <- 85/100  # (decision = positive) for 85 out of 100 people with (condition = TRUE) is_prob(sens)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/spec.html","id":null,"dir":"Reference","previous_headings":"","what":"The specificity of a decision process or diagnostic procedure. — spec","title":"The specificity of a decision process or diagnostic procedure. — spec","text":"spec defines decision's specificity value (correct rejection rate): conditional probability decision negative condition FALSE.","code":""},{"path":"https://hneth.github.io/riskyr/reference/spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The specificity of a decision process or diagnostic procedure. — spec","text":"","code":"spec"},{"path":"https://hneth.github.io/riskyr/reference/spec.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The specificity of a decision process or diagnostic procedure. — spec","text":"object class numeric length 1.","code":""},{"path":"https://hneth.github.io/riskyr/reference/spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The specificity of a decision process or diagnostic procedure. — spec","text":"Understanding obtaining specificity value spec: Definition:   spec conditional probability   (correct) negative decision given   condition FALSE: spec = p(decision = negative | condition = FALSE) probability correctly detecting false cases   (condition = FALSE). Perspective:   spec classifies   subset cond_false individuals   decision (spec = cr/cond_false). Alternative names:   true negative rate (TNR),   correct rejection rate,   1 - alpha Relationships: . spec complement   false alarm rate fart: spec = 1 - fart b. spec opposite conditional probability   – complement –   negative predictive value NPV: NPV = p(condition = FALSE | decision = negative) terms frequencies,   spec ratio   cr divided cond_false   (.e., fa + cr): spec = cr/cond_false = cr/(fa + cr) Dependencies:   spec feature decision process   diagnostic procedure measure   correct decisions (true negatives). However, due conditional probability,   value spec intrinsic   decision process, also depends   condition's prevalence value prev.","code":""},{"path":"https://hneth.github.io/riskyr/reference/spec.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The specificity of a decision process or diagnostic procedure. — spec","text":"Consult Wikipedia additional information.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The specificity of a decision process or diagnostic procedure. — spec","text":"","code":"spec <- .75     # sets a specificity value of 75% spec <- 75/100  # (decision = negative) for 75 out of 100 people with (condition = FALSE) is_prob(spec)   # TRUE #> [1] TRUE"},{"path":"https://hneth.github.io/riskyr/reference/summary.riskyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a riskyr scenario. — summary.riskyr","title":"Summarize a riskyr scenario. — summary.riskyr","text":"summary.riskyr provides summary method objects class \"riskyr\".","code":""},{"path":"https://hneth.github.io/riskyr/reference/summary.riskyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a riskyr scenario. — summary.riskyr","text":"","code":"# S3 method for class 'riskyr' summary(object = NULL, summarize = \"all\", ...)"},{"path":"https://hneth.github.io/riskyr/reference/summary.riskyr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summarize a riskyr scenario. — summary.riskyr","text":"object class summary.riskyr 9 entries.","code":""},{"path":"https://hneth.github.io/riskyr/reference/summary.riskyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a riskyr scenario. — summary.riskyr","text":"object riskyr object, usually result call riskyr. Inbuilt scenarios also type riskyr. summarize summarized vector consisting c(\"freq\", \"prob\", \"accu\") frequencies, probabilities, accuracy respectively. default \"\" alias three. ... Additional parameters (passed summary functions).","code":""},{"path":"https://hneth.github.io/riskyr/reference/summary.riskyr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a riskyr scenario. — summary.riskyr","text":"summary list obj.sum 9 entries, dependent information requested summarize. Scenario name, relevant condition , N summarized default.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/summary.riskyr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a riskyr scenario. — summary.riskyr","text":"","code":"summary(scenarios$n4) #> Scenario:  Mammography  #>  #> Condition:  Breast cancer  #> Decision:  Screening  #> Population:  Women (general population)  #> N =  1000  #> Source:  Sedlmaier & Gigerenzer (2001), p.381ff.  #>  #> Probabilities: #>  #>  Essential probabilities: #> prev sens mirt spec fart  #> 0.01 0.80 0.20 0.90 0.10  #>  #>  Other probabilities: #>  ppod   PPV   NPV   FDR   FOR   acc  #> 0.107 0.075 0.998 0.925 0.002 0.899  #>  #> Frequencies: #>  #>  by conditions: #>  cond_true cond_false  #>         10        990  #>  #>  by decision: #> dec_pos dec_neg  #>     107     893  #>  #>  by correspondence (of decision to condition): #> dec_cor dec_err  #>     899     101  #>  #>  4 essential (SDT) frequencies: #>  hi  mi  fa  cr  #>   8   2  99 891  #>  #> Accuracy: #>  #>  acc: #> 0.899"},{"path":"https://hneth.github.io/riskyr/reference/t_A.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk curve A (main/transfer task A). — t_A","title":"Cumulative risk curve A (main/transfer task A). — t_A","text":"t_A provides cumulative risk genetic risk factor developing disease target population function age.","code":""},{"path":"https://hneth.github.io/riskyr/reference/t_A.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk curve A (main/transfer task A). — t_A","text":"","code":"t_A"},{"path":"https://hneth.github.io/riskyr/reference/t_A.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk curve A (main/transfer task A). — t_A","text":"data frame (17 x 2). age: age (years). crisk_A: cumulative risk developing disease target population.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/t_B.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk curve B (main/transfer task B). — t_B","title":"Cumulative risk curve B (main/transfer task B). — t_B","text":"t_B provides cumulative risk genetic risk factor developing disease B target population function age.","code":""},{"path":"https://hneth.github.io/riskyr/reference/t_B.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk curve B (main/transfer task B). — t_B","text":"","code":"t_B"},{"path":"https://hneth.github.io/riskyr/reference/t_B.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk curve B (main/transfer task B). — t_B","text":"data frame (17 x 2). age: age (years). crisk_B: cumulative risk developing disease B target population.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/t_I.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative risk curve I (introductory task). — t_I","title":"Cumulative risk curve I (introductory task). — t_I","text":"t_I provides cumulative risk genetic risk factor developing disease target population function age.","code":""},{"path":"https://hneth.github.io/riskyr/reference/t_I.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative risk curve I (introductory task). — t_I","text":"","code":"t_I"},{"path":"https://hneth.github.io/riskyr/reference/t_I.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cumulative risk curve I (introductory task). — t_I","text":"data frame (17 x 2). age: age (years). crisk_I: cumulative risk developing disease target population.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic text elements. — txt","title":"Basic text elements. — txt","text":"txt initialized list named elements define basic scenario titles labels.","code":""},{"path":"https://hneth.github.io/riskyr/reference/txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic text elements. — txt","text":"","code":"txt"},{"path":"https://hneth.github.io/riskyr/reference/txt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Basic text elements. — txt","text":"object class list length 21.","code":""},{"path":"https://hneth.github.io/riskyr/reference/txt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Basic text elements. — txt","text":"textual elements specify generic labels titles riskyr scenarios stored named elements (type character) list txt. change element, assign new character object existing name. list txt used throughout riskyr package unless scenario defines scenario-specific text labels (using riskyr function). Note: Basic text information numeric parameters   (see num init_num)   integral parts riskyr scenario. contrast, basic color information   (see pal init_pal)   integral part, independently defined. names probabilities   (see prob) currently   integral part txt riskyr scenarios   (defined prob_lbl_def label_prob). txt currently contains following text labels: scen_lbl current scenario title (sometimes Title Caps). scen_txt longer text description current scenario (may extend several lines). scen_src source information current scenario. scen_apa source information APA format. scen_lng language current scenario (character code). Options: \"en\": English, \"de\": German. popu_lbl general name describing current population. N_lbl short label current population popu sample. cond_lbl general name condition dimension, feature (e.g., disease) currently considered. cond_true_lbl short label presence current condition cond_true cases (condition's true state TRUE). cond_false_lbl short label absence current condition cond_false cases (condition's true state FALSE). dec_lbl general name decision dimension, judgment (e.g., diagnostic test) currently made. dec_pos_lbl short label positive decisions dec_pos cases (e.g., predicting presence condition). dec_neg_lbl short label negative decisions dec_neg cases (e.g., predicting absence condition). acc_lbl general name accuracy dimension, correspondence condition currently considered decision judgment currently made. dec_cor_lbl short label correct accurate decisions dec_cor cases (accurate predictions). dec_err_lbl short label incorrect decisions dec_err cases (erroneous predictions). sdt_lbl general name 4 cases/categories/cells 2x2 contingency table (e.g., condition x decision, using SDT). hi_lbl short label hits true positives hi/TP cases (.e., correct decisions presence condition, condition actually present). mi_lbl short label misses false negatives mi/FN cases (.e., incorrect decisions absence condition condition actually present). fa_lbl short label false alarms false positives fa/FP cases (.e., incorrect decisions presence condition condition actually absent). cr_lbl short label correct rejections true negatives cr/TN cases (.e., correct decision absence condition, condition actually absent).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/txt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic text elements. — txt","text":"","code":"txt           # Show  all current names and elements #> $scen_lbl #> [1] \"Scenario\" #>  #> $scen_txt #> [1] \"Description of the current scenario in a short paragraph of text. This description may include several sentences.\" #>  #> $scen_src #> [1] \"Source information\" #>  #> $scen_apa #> [1] \"Source information in APA format\" #>  #> $scen_lng #> [1] \"en/de\" #>  #> $popu_lbl #> [1] \"Population\" #>  #> $N_lbl #> [1] \"N\" #>  #> $cond_lbl #> [1] \"True condition\" #>  #> $cond_true_lbl #> [1] \"present\" #>  #> $cond_false_lbl #> [1] \"absent\" #>  #> $dec_lbl #> [1] \"Outcome\" #>  #> $dec_pos_lbl #> [1] \"positive\" #>  #> $dec_neg_lbl #> [1] \"negative\" #>  #> $acc_lbl #> [1] \"Accuracy\" #>  #> $dec_cor_lbl #> [1] \"correct\" #>  #> $dec_err_lbl #> [1] \"incorrect\" #>  #> $sdt_lbl #> [1] \"Cases\" #>  #> $hi_lbl #> [1] \"TP\" #>  #> $mi_lbl #> [1] \"FN\" #>  #> $fa_lbl #> [1] \"FP\" #>  #> $cr_lbl #> [1] \"TN\" #>  txt$scen_lbl  # Show the current scenario label (e.g., used in plot titles) #> [1] \"Scenario\" txt$scen_lbl <- \"My example\"  # Set a new scenario title"},{"path":"https://hneth.github.io/riskyr/reference/txt_TF.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternative text labels (TP, FN, FP, TN). — txt_TF","title":"Alternative text labels (TP, FN, FP, TN). — txt_TF","text":"txt_TF initialized alternative text labels define frequency naming scheme (hi, mi, fa, cr) called (TP, FN, FP, TN).","code":""},{"path":"https://hneth.github.io/riskyr/reference/txt_TF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternative text labels (TP, FN, FP, TN). — txt_TF","text":"","code":"txt_TF"},{"path":"https://hneth.github.io/riskyr/reference/txt_TF.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alternative text labels (TP, FN, FP, TN). — txt_TF","text":"object class list length 21.","code":""},{"path":"https://hneth.github.io/riskyr/reference/txt_TF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternative text labels (TP, FN, FP, TN). — txt_TF","text":"See txt details default text information. Assign txt <- txt_TF use default text labels.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/txt_TF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternative text labels (TP, FN, FP, TN). — txt_TF","text":"","code":"txt_TF        # shows text labels of txt_TF #> $scen_lbl #> [1] \"Scenario\" #>  #> $scen_txt #> [1] \"Description of the current scenario in a short paragraph of text. This description may include several sentences.\" #>  #> $scen_src #> [1] \"Source information\" #>  #> $scen_apa #> [1] \"Source information in APA format\" #>  #> $scen_lng #> [1] \"en/de\" #>  #> $popu_lbl #> [1] \"Population\" #>  #> $N_lbl #> [1] \"N\" #>  #> $cond_lbl #> [1] \"True condition\" #>  #> $cond_true_lbl #> [1] \"present\" #>  #> $cond_false_lbl #> [1] \"absent\" #>  #> $dec_lbl #> [1] \"Outcome\" #>  #> $dec_pos_lbl #> [1] \"positive\" #>  #> $dec_neg_lbl #> [1] \"negative\" #>  #> $acc_lbl #> [1] \"Accuracy\" #>  #> $dec_cor_lbl #> [1] \"correct\" #>  #> $dec_err_lbl #> [1] \"incorrect\" #>  #> $sdt_lbl #> [1] \"Cases\" #>  #> $hi_lbl #> [1] \"TP\" #>  #> $mi_lbl #> [1] \"FN\" #>  #> $fa_lbl #> [1] \"FP\" #>  #> $cr_lbl #> [1] \"TN\" #>  txt_TF[\"hi\"]  # shows the current label for hits (\"TP\") #> $<NA> #> NULL #>  txt_TF[\"hi\"] <- \"hit\" # defines a new label for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/txt_org.html","id":null,"dir":"Reference","previous_headings":"","what":"List of original values of text elements. — txt_org","title":"List of original values of text elements. — txt_org","text":"txt_org copy initial list text elements define scenario titles labels.","code":""},{"path":"https://hneth.github.io/riskyr/reference/txt_org.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of original values of text elements. — txt_org","text":"","code":"txt_org"},{"path":"https://hneth.github.io/riskyr/reference/txt_org.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of original values of text elements. — txt_org","text":"object class list length 21.","code":""},{"path":"https://hneth.github.io/riskyr/reference/txt_org.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of original values of text elements. — txt_org","text":"See txt details default text information. Assign txt <- txt_org re-set default text labels.","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/txt_org.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of original values of text elements. — txt_org","text":"","code":"txt_org        # shows original text labels #> $scen_lbl #> [1] \"Scenario\" #>  #> $scen_txt #> [1] \"Description of the current scenario in a short paragraph of text. This description may include several sentences.\" #>  #> $scen_src #> [1] \"Source information\" #>  #> $scen_apa #> [1] \"Source information in APA format\" #>  #> $scen_lng #> [1] \"en/de\" #>  #> $popu_lbl #> [1] \"Population\" #>  #> $N_lbl #> [1] \"N\" #>  #> $cond_lbl #> [1] \"Condition\" #>  #> $cond_true_lbl #> [1] \"True\" #>  #> $cond_false_lbl #> [1] \"False\" #>  #> $dec_lbl #> [1] \"Decision\" #>  #> $dec_pos_lbl #> [1] \"Positive\" #>  #> $dec_neg_lbl #> [1] \"Negative\" #>  #> $acc_lbl #> [1] \"Accuracy\" #>  #> $dec_cor_lbl #> [1] \"Correct\" #>  #> $dec_err_lbl #> [1] \"Erroneous\" #>  #> $sdt_lbl #> [1] \"Cases\" #>  #> $hi_lbl #> [1] \"hi\" #>  #> $mi_lbl #> [1] \"mi\" #>  #> $fa_lbl #> [1] \"fa\" #>  #> $cr_lbl #> [1] \"cr\" #>  txt_org[\"hi\"]  # shows the original label for hits (\"hi\") #> $<NA> #> NULL #>  txt_org[\"hi\"] <- \"TP\" # defines a new label for hits (true positives, TP)"},{"path":"https://hneth.github.io/riskyr/reference/write_popu.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a population table (data) from a riskyr scenario (description). — write_popu","title":"Write a population table (data) from a riskyr scenario (description). — write_popu","text":"write_popu computes (expands) table popu (R data frame) riskyr scenario (description), using 4 essential frequencies.","code":""},{"path":"https://hneth.github.io/riskyr/reference/write_popu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a population table (data) from a riskyr scenario (description). — write_popu","text":"","code":"write_popu(x = NULL, ...)"},{"path":"https://hneth.github.io/riskyr/reference/write_popu.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Write a population table (data) from a riskyr scenario (description). — write_popu","text":"object class data.frame N rows 3 columns (e.g., \"X/truth/cd\", \"Y/test/dc\", \"SDT/cell/class\").","code":""},{"path":"https://hneth.github.io/riskyr/reference/write_popu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a population table (data) from a riskyr scenario (description). — write_popu","text":"x riskyr scenario (description). ... Additional parameters (text labels, passed comp_popu).","code":""},{"path":"https://hneth.github.io/riskyr/reference/write_popu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a population table (data) from a riskyr scenario (description). — write_popu","text":"data frame popu containing N rows (individual cases) 3 columns (e.g., \"X/truth/cd\", \"Y/test/dc\", \"SDT/cell/class\"). encoded ordered factors (2, 2, 4 levels, respectively).","code":""},{"path":"https://hneth.github.io/riskyr/reference/write_popu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a population table (data) from a riskyr scenario (description). — write_popu","text":"write_popu expects riskyr scenario input passes 4 essential frequencies (rounded integers) comp_popu. default, write_popu uses text settings contained txt, labels can changed passing arguments comp_popu (via ...).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/reference/write_popu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a population table (data) from a riskyr scenario (description). — write_popu","text":"","code":"# Define scenarios (by description): s1 <- riskyr(prev = .5, sens = .5, spec = .5, N = 10)  # s1: define by 3 prob & N s2 <- riskyr(hi = 2, mi = 3, fa = 2, cr = 3)           # s2: same scenario by 4 freq  # Create data (from descriptions): write_popu(s1)  # data from (prob) description #>    True condition  Outcome Cases #> 1         present positive    TP #> 2         present positive    TP #> 3         present negative    FN #> 4         present negative    FN #> 5         present negative    FN #> 6          absent positive    FP #> 7          absent positive    FP #> 8          absent positive    FP #> 9          absent negative    TN #> 10         absent negative    TN write_popu(s2,  # data from (freq) description & change labels:            cond_lbl = \"Disease (X)\",            cond_true_lbl = \"sick\", cond_false_lbl = \"healthy\",            dec_lbl = \"Test (Y)\") #>    Disease (X) Test (Y) Cases #> 1         sick positive    TP #> 2         sick positive    TP #> 3         sick negative    FN #> 4         sick negative    FN #> 5         sick negative    FN #> 6      healthy positive    FP #> 7      healthy positive    FP #> 8      healthy negative    TN #> 9      healthy negative    TN #> 10     healthy negative    TN  # Rounding: s3 <- riskyr(prev = 1/3, sens = 2/3, spec = 6/7, N = 10, round = FALSE)  # s3: w/o rounding write_popu(s3, cond_lbl = \"X\", dec_lbl = \"Y\", sdt_lbl = \"class\")  # rounded to nearest integers #>          X        Y class #> 1  present positive    TP #> 2  present positive    TP #> 3  present negative    FN #> 4   absent positive    FP #> 5   absent negative    TN #> 6   absent negative    TN #> 7   absent negative    TN #> 8   absent negative    TN #> 9   absent negative    TN #> 10  absent negative    TN  # Sampling: s4 <- riskyr(prev = 1/3, sens = 2/3, spec = 6/7, N = 10, sample = TRUE)  # s4: with sampling write_popu(s4, cond_lbl = \"X\", dec_lbl = \"Y\", sdt_lbl = \"class\")  # data from sampling #>          X        Y class #> 1  present positive    TP #> 2  present negative    FN #> 3   absent negative    TN #> 4   absent negative    TN #> 5   absent negative    TN #> 6   absent negative    TN #> 7   absent negative    TN #> 8   absent negative    TN #> 9   absent negative    TN #> 10  absent negative    TN"},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"riskyr-050","dir":"Changelog","previous_headings":"","what":"riskyr 0.5.0","title":"riskyr 0.5.0","text":"riskyr 0.5.0 released CRAN 2025-09-15. version fixes minor issues CRAN compatibility. Changes since last release:","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"details-0-5-0","dir":"Changelog","previous_headings":"","what":"Details","title":"riskyr 0.5.0","text":"Remove experimental code Package maintenance: Add GitHub actions (R-CMD-check Rhub workflows) Update README online documentation Updated citation info (using bibentry() CRAN compatibility) Use hexagon version logo current development version riskyr available https://github.com/hneth/riskyr/.","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"riskyr-040","dir":"Changelog","previous_headings":"","what":"riskyr 0.4.0","title":"riskyr 0.4.0","text":"CRAN release: 2022-08-15 riskyr 0.4.0 released CRAN August 15, 2022. Changes since last release:","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"riskyr 0.4.0","text":"Enable sampling computing freq prob (.e., description, given N 3 essential probabilities) [2021-03]: add sample argument comp_freq(), comp_freq_prob(), riskyr(); add sample argument 6 key plots:plot_area(), plot_bar(), plot_fnet(), plot_icons(), plot_prism(), plot_tab(). Allow conversions/translations data descriptions: write_popu() creates population data description (riskyr scenario); read_popu() creates description (riskyr scenario) population data. Add function plotting cumulative risk curves: plot_crisk() plots curves auxiliary information visualizing cumulative risks risk increments; pal_crisk provides corresponding color palette (named vector). Add FFTrees_riskyr() convert FFTrees objects corresponding riskyr objects.","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"riskyr 0.4.0","text":"Add main sub arguments plots (deprecate previous title_lbl argument). Add is_matrix() verify 2x2 matrix (2x2 numeric contingency table). Add is_integer() verify integer values.","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"details-0-4-0","dir":"Changelog","previous_headings":"","what":"Details","title":"riskyr 0.4.0","text":"Fix bug plot_bar() caused incorrect bar labels. Update URLs README.md vignettes https://riskyr.org/. Increase options robustness labeling frequencies probabilities plots. Reduce widths freq boxes plot_prism() reduce overlaps. Rename labels txt_TF avoid confusion, “True condition” (.e., X) FALSE (now “absent”) “True negatives” (TN/cr cases).","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"riskyr-030","dir":"Changelog","previous_headings":"","what":"riskyr 0.3.0","title":"riskyr 0.3.0","text":"CRAN release: 2021-03-23 riskyr 0.3.0 released CRAN March 23, 2021. Changes since last release:","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"major-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"riskyr 0.3.0","text":"Add plot_fnet() plotting frequency nets (Binder et al., 2020) [2020-12].","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"changes-to-existing-visualization-functions-0-3-0","dir":"Changelog","previous_headings":"Minor changes","what":"Changes to existing visualization functions","title":"riskyr 0.3.0","text":"Change default setting mar_notes plotting functions: Using mar_notes = FALSE details needed can distracting visualizations. Change default arguments plot_area() plot_tab(): Change default settings f_lbl_hd = \"abb\" f_lbl_hd = \"nam\" (makes sense riskyrApp). New options plot_curve(): Plotting probability curves function prevalence require specific prevalence value. Thus, setting prev argument either NA vector several probabilities now supported. Setting new prev_range argument range within c(0, 1) allows zooming specific ranges prev values (x-axis). New options plot_plane(): Plotting probability plane function sensitivity specificity require specifying values. Thus, setting sens spec arguments either NA vector several probabilities now supported. Setting new sens_range spec_range arguments ranges within c(0, 1) allows zooming specific ranges sens values (x-axis) spec values (y-axis). New options plot_prism(): Use new p_lwd p_scale arguments allow scaling widths probability links current probability values.","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"data-and-functions-0-3-0","dir":"Changelog","previous_headings":"Minor changes","what":"Data and functions","title":"riskyr 0.3.0","text":"data: Remove data files df_scenarios.RData df_scenarios.csv, redundant df_scenarios.rda (loaded \\data). Improve make_cond_lbl() allow NA vectors several values (prev, sens, spec). Add is_prob_range() function verify range two probability values (check new arguments plot_curve() plot_plane()).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"colors-0-3-0","dir":"Changelog","previous_headings":"Micro changes","what":"Colors","title":"riskyr 0.3.0","text":"Using colors pal fill colors symbols plot_icon(). Add color palettes: Add pal_bwp (strict b+w color palette suited printing purposes) corresponding special cases major plotting functions. Add pal_unikn (based color definitions unikn package). Changes color palettes: Add background color pal[[\"bg\"]] palettes plots (preempt different system defaults). Adopt pal_mod – rather pal_mbw – default color scheme pal (highlight cond_true dec_pos cases default plots).","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"details-0-3-0","dir":"Changelog","previous_headings":"Micro changes","what":"Details","title":"riskyr 0.3.0","text":"Add reference article theoretical background (Neth et al., 2021). Bug fix plot_prism(): Allow plotting simple trees nchar() == 2. Bug fix plot_icons(): Enforced 2 different symbol types icon arrays binary perspective (= cd dc ac).","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"riskyr-020","dir":"Changelog","previous_headings":"","what":"riskyr 0.2.0","title":"riskyr 0.2.0","text":"CRAN release: 2019-01-03 riskyr 0.2.0 released CRAN January 03, 2019. Changes since last release:","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"additional-resources-0-2-0","dir":"Changelog","previous_headings":"Major changes","what":"Additional resources","title":"riskyr 0.2.0","text":"Introduce riskyrApp version: use selected riskyr functions without need coding updated version riskyrApp available https://github.com/hneth/riskyrApp/ (R Shiny code) https://riskyr.org/ (interactive online version). Using pkgdown: Provide package documentation online https://hneth.github.io/riskyr/ (latest release version) https://hneth.github.io/riskyr/dev/ (current development version).","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"visualization-functions-0-2-0","dir":"Changelog","previous_headings":"Major changes","what":"Visualization functions","title":"riskyr 0.2.0","text":"Retiring obsolete functions: plotting functions plot_fnet() plot_tree() replaced plot_prism(), plot_mosaic() replaced plot_area(). improves functionality (e.g., providing consistent options across different plotting functions) removes dependencies external packages. New plot_prism() function: Show scenario double frequency tree (3 x 2 perspectives) frequency tree (3 perspectives) many additional options; combines replaces older plot_fnet() plot_tree() functions (removes dependency diagram package). New plot_area() function: Show scenario mosaic plot relative proportions (3 x 2 x 2 possible versions, many additional options); replaces older plot_mosaic() function (removes dependencies grid vcd packages). New plot_tab() function: Show scenario contingency table frequencies (row column sums, options showing probabilities); variant plot_area() scale area sizes. New plot_bar() function: Show scenario frequencies vertical bars (various configurations).","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"under-the-hood-0-2-0","dir":"Changelog","previous_headings":"Major changes","what":"Under the hood","title":"riskyr 0.2.0","text":"Create plot_util.R collection graphical utility functions: Define new box object type various functions plotting, labeling, linking graphs (remove dependencies limitations imposed packages). Update riskyr() function: alternative providing 3 essential frequencies, now possible define scenario 4 essential frequencies (check consistency given probabilities).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"changes-to-existing-visualization-functions-0-2-0","dir":"Changelog","previous_headings":"Minor changes","what":"Changes to existing visualization functions","title":"riskyr 0.2.0","text":"Improve plot_icons() function: Show icons separated 2 subsets 3 perspectives (condition, decision, accuracy), using argument plotting functions. Improve plot_curve() plot_plane() functions: Update variable names (snake_case) add arguments (e.g., col_pal, lbl_txt mar_notes, etc.) consistency newer plotting functions. Add scale argument: new plotting functions feature scale argument allows scaling size areas boxes either (exact) probability (possibly rounded) frequency. using scale = \"f\", probabilities shown also re-computed (possibly rounded) frequencies. Improve plot_fnet() function: Change argument box.cex cex.lbl ensure consistency plot_curves() plot_plane() (use scale arrow labels accordingly). Add warning using deprecated argument. Improve plot_mosaic() function: Change Boolean vsplit argument = \"cd\" vs. = \"dc\" ensure consistency plot_fnet() plot_tree(). Add warning using deprecated argument. Improve mar_notes plot_mar arguments: Use consistent plot margins options showing margin notes plots.","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"default-objects-lists-and-vectors-0-2-0","dir":"Changelog","previous_headings":"Minor changes","what":"Default objects (lists and vectors)","title":"riskyr 0.2.0","text":"Improve pal freq arguments: Use consistent color frequency names (e.g., cond_true, dec_pos, dec_cor now names frequencies colors corresponding frequencies). Improve freq object: Add 3rd perspective (accuracy correspondence decision condition) corresponding frequency pair dec.cor dec.err (.e., hi + cr vs. mi + fa diagonal 4 SDT cases). increases number frequencies freq 9 11. Also added corresponding labels init_txt.R colors init_pal.R. Improve prob object: Include accuracy metrics probabilities (prob summary functions). Improve pal txt objects: Add multiple color palettes text labeling schemes (see ?pal ?txt details).","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"other-changes-0-2-0","dir":"Changelog","previous_headings":"Minor changes","what":"Other changes","title":"riskyr 0.2.0","text":"Improve read_popu() function: Read data frame popu interpret riskyr scenario, allows creating scenarios raw data. Add comp_accu.R file: Compute exact accuracy values (approximations, using comp_accu_freq rounded freq values) using new function comp_accu_prob() compute list accu probabilities. Signal rounding showing accuracy based rounded frequencies plots (show.accu == TRUE round == TRUE).","code":""},{"path":[]},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"general-changes-0-2-0","dir":"Changelog","previous_headings":"Micro changes","what":"General changes","title":"riskyr 0.2.0","text":"consistent argument variable names (using snake_case). Many additions corrections documentation, examples, vignettes.","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"details-0-2-0","dir":"Changelog","previous_headings":"Micro changes","what":"Details","title":"riskyr 0.2.0","text":"plot_icons(): Bug fix also swap symbols legend symbol order changed manually. txt_def: Simplify default text labels (e.g., current population, condition, decision). .onAttach: Cast dice display probabilistic (.e., risk-related) start-messages.","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"riskyr-010","dir":"Changelog","previous_headings":"","what":"riskyr 0.1.0","title":"riskyr 0.1.0","text":"CRAN release: 2018-02-19 riskyr 0.1.0 released CRAN February 19, 2018.","code":""},{"path":"https://hneth.github.io/riskyr/news/index.html","id":"references-0-1-0","dir":"Changelog","previous_headings":"","what":"References","title":"riskyr 0.1.0","text":"cite riskyr derivations publications please use: Neth, H., Gaisbauer, F., Gradwohl, N., & Gaissmaier, W. (2025). riskyr: Rendering Risk Literacy Transparent. Social Psychology Decision Sciences, University Konstanz, Germany. Computer software (R package version 0.5.0, Sep 15, 2025). Retrieved https://CRAN.R-project.org/package=riskyr. following article provides details conceptual theoretical background: Neth, H., Gradwohl, N., Streeb, D., Keim, D.., & Gaissmaier, W. (2021). Perspectives 2x2 matrix: Solving semantically distinct problems based shared structure binary contingencies.Frontiers Psychology, 11, 567817. doi: 10.3389/fpsyg.2020.567817 [NEWS.md updated 2025-09-15.]","code":""}]
