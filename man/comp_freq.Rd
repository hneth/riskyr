% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comp_freq.R
\name{comp_freq}
\alias{comp_freq}
\title{Compute frequencies from basic probabilities.}
\usage{
comp_freq(prev = num$prev, sens = num$sens, spec = num$spec,
  fart = num$fart, N = num$N, round = TRUE)
}
\arguments{
\item{prev}{The condition's prevalence value \code{\link{prev}}
(i.e., the probability of condition being TRUE).}

\item{sens}{The decision's sensitivity value \code{\link{sens}}
(i.e., the conditional probability of a positive decision
provided that the condition is TRUE).}

\item{spec}{The decision's specificity value \code{\link{spec}}
(i.e., the conditional probability
of a negative decision provided that the condition is FALSE).
\code{spec} is optional when is complement \code{fart} is provided.}

\item{fart}{The decision's false alarm rate \code{\link{fart}}
(i.e., the conditional probability
of a positive decision provided that the condition is FALSE).
\code{fart} is optional when its complement \code{spec} is provided.}

\item{N}{The number of individuals in the population:
a suitable value of \code{\link{N}} is computed, if not provided.}

\item{round}{A Boolean value that determines whether frequencies are
rounded to the nearest integer. Default: \code{round = TRUE}.}
}
\value{
A list \code{freq} containing 9 frequency values.
}
\description{
\code{comp_freq} is a function that computes natural frequencies (typically
rounded integers) given basic probabilities --
\code{prev} and \code{sens}, and \code{spec} or \code{fart} (\code{spec = 1 - fart})
-- for a population of \code{N} individuals.
It returns a list of 9 frequencies \code{\link{freq}}
as its output.
}
\details{
\code{comp_freq} is the frequency counterpart to the
probability function \code{\link{comp_prob}}.

By default, \code{\link{comp_freq}} rounds frequencies to nearest integers
to avoid decimal values in \code{\link{freq}}.
}
\examples{
comp_freq()                  # => ok, using current defaults
length(comp_freq())          # => 9

# Ways to succeed:
comp_freq(1, 1, 1, NA, 100)  # => ok, N hits
comp_freq(1, 1, NA, 1, 100)  # => ok, N hits
comp_freq(1, 0, 1, NA, 100)  # => ok, N misses
comp_freq(1, 0, NA, 1, 100)  # => ok, N misses
comp_freq(0, 1, 1, NA, 100)  # => ok, N correct rejections
comp_freq(0, 1, NA, 1, 100)  # => ok, N false alarms

comp_freq(1, 1, 1, 0, N = NA)  # => ok, but warning that N = 1 was computed
comp_freq(1, 1, 1, 0, N =  0)  # => ok, but all 0
comp_freq(.5, .5, .5, NA, N = 10, round = TRUE)  # => ok, but all rounded (increasing errors: mi and fa)
comp_freq(.5, .5, .5, NA, N = 10, round = FALSE) # => ok, but not rounded

# Ways to fail:
comp_freq(NA, 1, 1, NA, 100)  # => NAs + warning: prev not numeric
comp_freq(1, NA, 1, NA, 100)  # => NAs + warning: sens not numeric
comp_freq(8,  1, 1, NA, 100)  # => NAs + warning: prev no probability
comp_freq(1,  8, 1, NA, 100)  # => NAs + warning: sens no probability
comp_freq(1,  1, 1,  1, 100)  # => NAs and warning: is_complement not in tolerated range

}
\seealso{
\code{\link{num}} contains basic numeric variables;
\code{\link{init_num}} initializes basic numeric variables;
\code{\link{freq}} contains current frequency information;
\code{\link{prob}} contains current probability information;
\code{\link{comp_prob}} computes current probability information;
\code{\link{is_valid}} verifies the validity of probability inputs;
\code{\link{comp_complement}} computes a complementary probability (if missing);
\code{\link{comp_min_N}} computes a suitable population size \code{\link{N}} (if missing)

Other functions computing frequencies: \code{\link{comp_min_N}}
}
