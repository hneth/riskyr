% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comp_prob.R
\name{comp_prob}
\alias{comp_prob}
\title{Compute derived probabilities from basic probabilities.}
\usage{
comp_prob(prev = num$prev, sens = num$sens, spec = num$spec, fart = NA)
}
\arguments{
\item{prev}{The condition's prevalence value \code{\link{prev}}
(i.e., the probability of condition being \code{TRUE}).}

\item{sens}{The decision's sensitivity value \code{\link{sens}}
(i.e., the conditional probability of a positive decision
provided that the condition is \code{TRUE}).}

\item{spec}{The decision's specificity value \code{\link{spec}}
(i.e., the conditional probability
of a negative decision provided that the condition is \code{FALSE}).
\code{spec} is optional when is complement \code{fart} is provided.}

\item{fart}{The decision's false alarm rate \code{\link{fart}}
(i.e., the conditional probability
of a positive decision provided that the condition is \code{FALSE}).
\code{fart} is optional when its complement \code{spec} is provided.}
}
\value{
A list \code{prob} containing 8 probability values.
}
\description{
\code{comp_prob} is a function that computes derived probabilities
(typically conditional probabilities) from basic probabilities --
\code{\link{prev}} and \code{\link{sens}}, and
\code{\link{spec}} or \code{\link{fart}} (\code{spec = 1 - fart}).
}
\details{
By default, \code{comp_prob} assumes that sufficient
basic probabilities (e.g., \code{\link{prev}}, \code{\link{sens}},
and either \code{\link{spec}} or \code{\link{fart}}) are provided
as inputs and then computes and returns derived probabilities (e.g., the
predictive values \code{\link{PPV}} and \code{\link{NPV}}, as well
as their complements \code{\link{FDR}} and \code{\link{FOR}})
as its output (a list of probabilities \code{\link{prob}}).

\code{comp_prob} is the probability counterpart to the
frequency function \code{\link{comp_freq}}.

Note that inputs of extreme probabilities (of 0 or 1)
may yield unexpected values (e.g., an \code{\link{NPV}}
value of NaN when \code{\link{is_perfect}}
evaluates to \code{TRUE}).
}
\examples{
comp_prob()             # => ok, using current defaults
length(comp_prob())     # => 8

# Ways to succeed:
comp_prob(.999, 1, 1)   # => ok
comp_prob(1, .999, 1)   # => ok

# Watch out for extreme cases:
comp_prob(1, 0, 1)      # => ok, but with warnings (as PPV & FDR are NaN)
comp_prob(1, 0, 0)      # => ok, but with warnings (as PPV & FDR are NaN)
comp_prob(1, 0, NA, 0)  # => ok, but with warnings (as PPV & FDR are NaN)
comp_prob(1, 0, NA, 1)  # => ok, but with warnings (as PPV & FDR are NaN)

comp_prob(1, 1, 0)      # => ok, but with warnings (as NPV & FOR are NaN)
comp_prob(1, 1, 1)      # => ok, but with warnings (as NPV & FOR are NaN)
comp_prob(1, 1, 1, NA)  # => ok, but with warnings (as NPV & FOR are NaN)
comp_prob(1, 1, NA, 1)  # => ok, but with warnings (as NPV & FOR are NaN)

# Ways to fail:
comp_prob(NA, 1, 1, NA)  # => NAs + warning: prev not numeric
comp_prob(1, NA, 1, NA)  # => NAs + warning: sens not numeric
comp_prob(8,  1, 1, NA)  # => NAs + warning: prev no probability
comp_prob(1,  8, 1, NA)  # => NAs + warning: sens no probability
comp_prob(1,  1, 1,  1)  # => NAs and warning: is_complement not in tolerated range

}
\seealso{
\code{\link{num}} contains basic numeric variables;
\code{\link{init_num}} initializes basic numeric variables;
\code{\link{freq}} contains current frequency information;
\code{\link{prob}} contains current probability information;
\code{\link{comp_prob}} computes current probability information;
\code{\link{is_valid}} verifies the validity of probability inputs;
\code{\link{comp_complement}} computes a complementary probability (if missing);
\code{\link{comp_min_N}} computes a suitable population size \code{\link{N}} (if missing)

Other functions computing probabilities: \code{\link{FDR}},
  \code{\link{FOR}}, \code{\link{NPV}}, \code{\link{PPV}},
  \code{\link{comp_complement}}, \code{\link{comp_fart}},
  \code{\link{comp_spec}}
}
